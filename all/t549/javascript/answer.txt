Certainly! Below is the equivalent JavaScript code that maintains the same functionality, logic, and structure as the provided Python code:

```javascript
// Define the constant for conversion: Boltzmann constant in keV/K
const k_B_over_keV = 8.617333262145e-5; // eV/K to keV/K

function getTInLog10Kelvin(T_keV) {
    /**
     * Converts temperature from keV to log10(K) for a given input (scalar or array).
     *
     * @param {number | number[]} T_keV - The temperature in keV. Can be a scalar or an array of temperatures.
     * @returns {number | number[]} The temperature(s) in log10(K) corresponding to the input.
     * @throws {Error} If the input is not a scalar (number) or an array.
     */

    // Check if the input is a scalar (number)
    if (typeof T_keV === 'number') {
        // Calculate log10(K) for the scalar value
        return Math.log10(T_keV / k_B_over_keV);
    }

    // Check if the input is an array
    else if (Array.isArray(T_keV)) {
        // Calculate log10(K) for each element in the array
        return T_keV.map(t => Math.log10(t / k_B_over_keV));
    }

    // Raise an error for unsupported input types
    else {
        throw new Error("Input must be a scalar (number) or an array of temperatures.");
    }
}

// Example usage:
console.log(getTInLog10Kelvin(1.0)); // Scalar example
console.log(getTInLog10Kelvin([1.0, 2.0, 3.0])); // Array example
```

### Explanation:
1. **Constant Definition**: The Boltzmann constant `k_B_over_keV` is defined similarly in JavaScript.
2. **Function Definition**: The function `getTInLog10Kelvin` is defined with a similar docstring and parameter handling.
3. **Type Checking**:
   - For scalar values (`number`), it uses `typeof`.
   - For arrays, it uses `Array.isArray`.
4. **Calculation**:
   - For scalar values, it calculates `Math.log10(T_keV / k_B_over_keV)`.
   - For arrays, it uses `.map()` to apply the calculation to each element.
5. **Error Handling**: It throws an error if the input type is neither a scalar nor an array.

This JavaScript code should provide the same functionality as the original Python code.