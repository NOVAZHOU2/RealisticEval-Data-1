Sure! Below is the equivalent JavaScript code for the provided Python function:

```javascript
const k_B_over_keV = 8.617333262145e-5; // eV/K to keV/K

function getTInLog10Kelvin(T_keV) {
    /**
     * Converts temperature from keV to log10(K) for a given input (scalar or array).
     *
     * @param {number | number[]} T_keV - The temperature in keV. Can be a scalar or an array of temperatures.
     * @returns {number | number[]} The temperature(s) in log10(K) corresponding to the input.
     * @throws {Error} If the input is not a scalar (number) or an array.
     */

    if (Array.isArray(T_keV)) {
        return T_keV.map(temp => {
            if (typeof temp !== 'number') {
                throw new Error('All elements in the array must be numbers.');
            }
            return Math.log10(temp / k_B_over_keV);
        });
    } else if (typeof T_keV === 'number') {
        return Math.log10(T_keV / k_B_over_keV);
    } else {
        throw new Error('Input must be a number or an array of numbers.');
    }
}

// Example usage:
console.log(getTInLog10Kelvin(10)); // Single value
console.log(getTInLog10Kelvin([10, 20, 30])); // Array of values
```

### Explanation:
1. **Constants and Variables**: The constant `k_B_over_keV` is defined similarly in both languages.
2. **Function Definition**: The function `getTInLog10Kelvin` is defined in JavaScript using the `function` keyword.
3. **Type Checking**:
   - In JavaScript, we use `Array.isArray()` to check if the input is an array.
   - We use `typeof` to check if the input is a number.
4. **Mapping Arrays**: If the input is an array, we use the `map` method to apply the conversion formula to each element.
5. **Single Value Conversion**: If the input is a single number, we directly apply the conversion formula.
6. **Error Handling**: We throw errors if the input is not valid (i.e., not a number or an array of numbers).

This JavaScript code should work similarly to your original Python function.