Here's how you can convert your Python code to TypeScript:

```typescript
type TemperatureInput = number | [number];

const k_B_over_keV = 8.617333262145e-5; // eV/K to keV/K

function getTInLog10Kelvin(TkeV: TemperatureInput): number | number[] {
    /**
     * Converts temperature from keV to log10(K) for a given input (scalar or tuple).
     * 
     * @param TkeV - The temperature in keV. Can be a scalar or a tuple of temperatures.
     * @returns The temperature(s) in log10(K) corresponding to the input.
     */
    
    if (Array.isArray(TkeV)) {
        return TkeV.map(temp => Math.log10((temp / k_B_over_keV) + 273.15));
    } else {
        return Math.log10((TkeV / k_B_over_keV) + 273.15);
    }
}
```

This TypeScript function `getTInLog10Kelvin` takes either a single number or an array of numbers representing temperatures in keV and returns their equivalent temperatures in log10(K). It uses `Math.log10()` to calculate the logarithm base 10, which is similar to Python's `math.log10()`. The conversion formula used here assumes that the input temperature is already in Kelvin, hence the addition of 273.15 to convert it from keV to Kelvin.