Certainly! Here is the TypeScript code signature with the comments preserved:

```typescript
/**
 * Finds matching elements and their indices in the input array
 * based on the specified comparison function.
 *
 * @param {T[]} arr - The input array to search through.
 * @param {(element: T) => boolean} comparisonFn - The comparison function to determine matches.
 * @returns {{ element: T; index: number }[]} - An array of objects, each containing the matched element and its index.
 */
function findMatchingElements<T>(arr: T[], comparisonFn: (element: T) => boolean): { element: T; index: number }[] {
}
```

In this TypeScript version:
- The generic type `T` is used to represent the type of elements in the array.
- The function signature includes type annotations for the parameters and return type.
- The comparison function `comparisonFn` is typed to accept an element of type `T` and return a boolean.
- The return type is annotated to be an array of objects with properties `element` and `index`.

This preserves the original comments and provides the necessary type annotations for the TypeScript code.