/**
 * finds the matching elements and their indices in the input array according to the specified comparison function
 *
 * @param {Array} inputArray - The array to search through.
 * @param {Function} comparatorFn - The comparator function to determine the condition.
 * @returns {Array} - An array of [index, value] pairs that meet the comparator condition.
 */
function getIndexValues(inputArray, comparatorFn) {
    let currentIndexValues = [];

    for (let i = 0; i < inputArray.length; i++) {
        const currentValue = inputArray[i];

        if (currentIndexValues.length === 0) {
            // Start with the first element
            currentIndexValues.push([i, currentValue]);
        } else {
            const comparisonResult = comparatorFn(currentValue, currentIndexValues[0][1]);

            if (comparisonResult < 0) {
                // Found a new minimum/maximum, reset the array
                currentIndexValues = [[i, currentValue]];
            } else if (comparisonResult === 0) {
                // Found a value equal to the current min/max, add it
                currentIndexValues.push([i, currentValue]);
            }
        }
    }

    return currentIndexValues;
}

//Generated by chatgpt:
// Comparator function for finding the minimum value
function compareMin(a, b) {
    return a - b;
}

//Generated by chatgpt:
// Comparator function for finding the maximum value
function compareMax(a, b) {
    return b - a;
}

//Generated by chatgpt:
// Specific functions for finding the minimum and maximum index values
function getMinIndex(inputArray) {
    return getIndexValues(inputArray, compareMin);
}

//Generated by chatgpt:
function getMaxIndex(inputArray) {
    return getIndexValues(inputArray, compareMax);
}