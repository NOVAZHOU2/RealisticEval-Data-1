Sure, here is the equivalent Java method with the appropriate Javadoc comments and structure:

```java
public class StringUtils {

    /**
     * Compresses multiple consecutive whitespace characters in a string into a single space.
     *
     * @param inputString The string to be processed.
     * @return The processed string with compressed whitespace.
     */
    public static String compressWhitespace(String inputString) {
        return inputString.replaceAll("\\s+", " ").trim();
    }
}
```

### Explanation:
1. **Class Definition**: The method is placed inside a `StringUtils` class as a static method.
2. **Javadoc Comments**: The comments are converted into Java's Javadoc format.
3. **Method Signature**: The Python function `def compress_whitespace(input_string: str)` is translated to a Java method `public static String compressWhitespace(String inputString)`.
4. **Implementation**: The implementation uses a regular expression to replace all sequences of whitespace characters (`\\s+`) with a single space and then trims the string to remove leading and trailing spaces.