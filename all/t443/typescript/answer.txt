Sure! Hereâ€™s the equivalent TypeScript code, including proper type definitions and ensuring the functionality remains consistent:

```typescript
function compressWhitespace(inputString: string): string {
    // Split the input string by whitespace and join with a single space
    return inputString.split(/\s+/).join(' ');
}

// Example usage
const exampleString = "This    is  a\ttest\nstring.";
console.log(compressWhitespace(exampleString));  // Output: "This is a test string."
```

### Explanation:
1. **Function Definition**: The function `compressWhitespace` is defined with a parameter `inputString` of type `string` and returns a `string`.
2. **Splitting and Joining**:
   - `split(/\s+/)` splits the input string by one or more whitespace characters (spaces, tabs, newlines, etc.). The regular expression `\s+` matches one or more whitespace characters.
   - `join(' ')` joins the resulting array elements back into a string, using a single space as the separator.

This approach ensures that all sequences of whitespace characters are replaced with a single space, matching the behavior of the original Python function.