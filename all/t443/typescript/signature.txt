Certainly! Here is the equivalent TypeScript code for the provided Python function, including appropriate JSDoc-style documentation comments:

```typescript
/**
 * Compresses multiple consecutive whitespace characters in a string into a single space.
 *
 * @param {string} inputString - The string to be processed.
 * @returns {string} - The processed string with compressed whitespace.
 */
function compressWhitespace(inputString: string): string {
    // Split the input string by one or more whitespace characters and join with a single space
    return inputString.split(/\s+/).join(' ');
}
```

### Explanation:
1. **Function Definition**:
   - The function `compressWhitespace` takes a parameter `inputString` of type `string` and returns a `string`.
   
2. **JSDoc Comments**:
   - The JSDoc-style comments provide detailed documentation for the function, including the parameters and return type.
   - `@param {string} inputString` describes the input parameter.
   - `@returns {string}` describes the return value.

3. **Regular Expression**:
   - The `split` method uses a regular expression `/\s+/` to match one or more whitespace characters.
   - This includes spaces, tabs, newlines, etc.

4. **Joining**:
   - After splitting the string into an array of substrings based on one or more whitespace characters, the `join` method combines these substrings into a single string, separated by a single space.

This TypeScript function preserves the original functionality and structure of the Python function, along with detailed documentation.