Certainly! Here is the equivalent TypeScript code for the provided Python function, along with a Jest test suite to verify its correctness.

### TypeScript Function

First, let's define the TypeScript function `compressWhitespace`:

```typescript
/**
 * Compresses multiple consecutive whitespace characters in a string into a single space.
 *
 * @param {string} inputString - The string to be processed.
 * @returns {string} - The processed string with compressed whitespace.
 */
function compressWhitespace(inputString: string): string {
    // Split the input string by one or more whitespace characters and join with a single space
    return inputString.split(/\s+/).join(' ');
}
```

### Jest Test Suite

Next, let's create a Jest test suite to verify the correctness of the `compressWhitespace` function:

```typescript
import { compressWhitespace } from './path/to/your/function'; // Adjust the import path as needed

describe('compressWhitespace', () => {
    it('should compress multiple consecutive spaces', () => {
        const input = 'Hello    World';
        const expected = 'Hello World';
        expect(compressWhitespace(input)).toBe(expected);
    });

    it('should handle leading and trailing spaces', () => {
        const input = '  Leading and trailing  ';
        const expected = 'Leading and trailing';
        expect(compressWhitespace(input)).toBe(expected);
    });

    it('should handle multiple types of whitespace', () => {
        const input = 'Tabs\tand\nNewlines';
        const expected = 'Tabs and Newlines';
        expect(compressWhitespace(input)).toBe(expected);
    });

    it('should handle empty strings', () => {
        const input = '';
        const expected = '';
        expect(compressWhitespace(input)).toBe(expected);
    });

    it('should handle strings without extra spaces', () => {
        const input = 'NoExtraSpaces';
        const expected = 'NoExtraSpaces';
        expect(compressWhitespace(input)).toBe(expected);
    });
});
```

### Explanation:

1. **Import Statement**:
   - Import the `compressWhitespace` function from the file where it is defined.

2. **Test Suite**:
   - The `describe` block defines the test suite for `compressWhitespace`.
   - Each `it` block represents a specific test case.

3. **Assertions**:
   - The `expect` function is used with various assertions to check the behavior of the function:
     - `toBe`: Checks if the output matches the expected value exactly.

### Running the Tests

To run the Jest tests, you can use the following command in your terminal:

```sh
npm test
```

Make sure you have Jest installed in your project by running:

```sh
npm install --save-dev jest ts-jest @types/jest
```

And configure your `jest` setup in your `package.json`:

```json
{
  "scripts": {
    "test": "jest"
  },
  "devDependencies": {
    "jest": "^29.5.0",
    "ts-jest": "^29.1.0",
    "@types/jest": "^29.5.0"
  }
}
```

This setup ensures that the tests run correctly and cover all the necessary cases for the `compressWhitespace` function.