Below is the conversion of the given Python function into a TypeScript function along with a Jest test class:

Python Code:

```python
import unittest

def compress_whitespace(input_string: str) -> str:
    return ' '.join(input_string.split())

class TestCompressWhitespace(unittest.TestCase):

    def test_compress_whitespace(self):
        self.assertEqual(compress_whitespace('foo'), 'foo')
        self.assertEqual(compress_whitespace(' foo'), 'foo')
        self.assertEqual(compress_whitespace('foo '), 'foo')
        self.assertEqual(compress_whitespace('  foo  '), 'foo')
        self.assertEqual(compress_whitespace('foo  bar'), 'foo bar')
        self.assertEqual(compress_whitespace('  foo  bar  '), 'foo bar')

if __name__ == '__main__':
    unittest.main()
```

TypeScript Code with Jest:

```typescript
// compress-whitespace.ts
function compressWhitespace(inputString: string): string {
    return inputString.replace(/\s+/g, ' ').trim();
}

export default compressWhitespace;

// compress-whitespace.test.ts
import compressWhitespace from './compress-whitespace';

describe('compressWhitespace', () => {
    it('should compress multiple consecutive whitespace characters into a single space', () => {
        expect(compressWhitespace('foo')).toBe('foo');
        expect(compressWhitespace(' foo')).toBe('foo');
        expect(compressWhitespace('foo ')).toBe('foo');
        expect(compressWhitespace('  foo  ')).toBe('foo');
        expect(compressWhitespace('foo  bar')).toBe('foo bar');
        expect(compressWhitespace('  foo  bar  ')).toBe('foo bar');
    });
});

// package.json
{
  "scripts": {
    "test": "jest"
  }
}

// Assuming you have jest and ts-jest setup
```

In this solution:

1. The `compressWhitespace` function uses a regular expression to replace one or more consecutive whitespace characters (`\s+`) with a single space and trims leading and trailing spaces.
2. The Jest `describe` block is used to group the tests.
3. The `it` block contains the actual tests using `expect` for asserting the expected behavior of the function.
4. The `package.json` script is updated to run Jest tests.