Certainly! Below is the equivalent JavaScript test case using Jest for the provided Python `unittest` test class:

```javascript
const { describe, it, expect } = require('@jest/globals');

function compressWhitespace(inputString) {
    /**
     * Compress multiple consecutive whitespace characters in a string into a single space.
     *
     * @param {string} inputString - The string to be processed.
     * @returns {string} - The processed string with compressed whitespace.
     */
    return inputString.replace(/\s+/g, ' ');
}

describe('compressWhitespace', () => {
    it('should compress multiple consecutive whitespace characters into a single space', () => {
        const inputString = "This   is  a   test.";
        const expectedResult = "This is a test.";
        expect(compressWhitespace(inputString)).toBe(expectedResult);
    });

    it('should handle strings without any extra spaces', () => {
        const inputString = "NoExtraSpaces";
        const expectedResult = "NoExtraSpaces";
        expect(compressWhitespace(inputString)).toBe(expectedResult);
    });

    it('should handle strings with leading and trailing spaces', () => {
        const inputString = "  Leading and trailing spaces  ";
        const expectedResult = "Leading and trailing spaces";
        expect(compressWhitespace(inputString)).toBe(expectedResult);
    });

    it('should handle strings with only spaces', () => {
        const inputString = "     ";
        const expectedResult = " ";
        expect(compressWhitespace(inputString)).toBe(expectedResult);
    });
});
```

### Explanation:
- **Function Definition**: The `compressWhitespace` function is defined to replace multiple consecutive whitespace characters with a single space using a regular expression (`/\s+/g`).
- **Test Suite**: A `describe` block is used to group related tests.
- **Individual Tests**: Each `it` block represents an individual test case. They check various scenarios such as strings with multiple spaces, no extra spaces, leading and trailing spaces, and strings composed entirely of spaces.
- **Assertions**: The `expect` function along with `.toBe()` is used to assert that the output of `compressWhitespace` matches the expected result.

To run these tests, you would need to have Jest installed in your project. You can install it via npm or yarn:

```sh
npm install --save-dev jest
# or
yarn add --dev jest
```

Then, you can run the tests using the following command:

```sh
npx jest
# or
yarn jest
```