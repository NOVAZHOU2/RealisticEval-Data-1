Hereâ€™s the equivalent JUnit 4 test case in Java for the provided Jest test code:

```java
package org.real.temp;

import org.junit.Test;
import static org.junit.Assert.assertArrayEquals;

public class Tester {

    @Test
    public void testRgbToHslPureRed() {
        assertArrayEquals(new int[]{0, 100, 50}, ColorConverter.rgbToHsl(255, 0, 0));
    }

    @Test
    public void testRgbToHslBlack() {
        assertArrayEquals(new int[]{0, 0, 0}, ColorConverter.rgbToHsl(0, 0, 0));
    }

    @Test
    public void testRgbToHslWhite() {
        assertArrayEquals(new int[]{0, 0, 100}, ColorConverter.rgbToHsl(255, 255, 255));
    }

    @Test
    public void testRgbToHslCyan() {
        assertArrayEquals(new int[]{180, 100, 50}, ColorConverter.rgbToHsl(0, 255, 255));
    }
}
```

### Key Changes:
1. **JUnit Annotations**: Used `@Test` to mark each test method.
2. **Assertions**: Replaced `expect(...).toEqual(...)` with `assertArrayEquals(...)` to compare the expected and actual results.
3. **Method Calls**: Adjusted to call `ColorConverter.rgbToHsl(...)` assuming the conversion method is in a class named `ColorConverter`.
4. **Return Format**: Expected results are in an integer array format, as per the Java method signature.