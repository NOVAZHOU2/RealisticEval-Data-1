To convert the given JavaScript Jest test case into a C++ Catch2 test case, you'll need to implement the `isValidUsername` function in C++ and then write the corresponding Catch2 test cases. Below is an example of how you can do this:

### Step 1: Implement the `isValidUsername` Function

First, let's create a C++ implementation for the `isValidUsername` function. We'll use regular expressions from the `<regex>` library.

```cpp
#include <iostream>
#include <regex>
#include <string>

bool isValidUsername(const std::string& username) {
    // Define the regex pattern for a valid username
    std::regex pattern(R"(^[a-zA-Z0-9_]+$)");
    
    // Use regex_match to check if the entire string matches the pattern
    return std::regex_match(username, pattern);
}

int main() {
    // Example usage
    std::cout << std::boolalpha; // Print bools as true/false instead of 1/0
    std::cout << "Is 'username123' valid? " << isValidUsername("username123") << std::endl;
    std::cout << "Is 'user_name' valid? " << isValidUsername("user_name") << std::endl;
    std::cout << "Is 'user@name' valid? " << isValidUsername("user@name") << std::endl;
    return 0;
}
```

### Step 2: Write the Catch2 Test Cases

Next, we'll write the Catch2 test cases to validate the `isValidUsername` function. Assume you have a file named `test_username.cpp`.

```cpp
#define CATCH_CONFIG_MAIN  // This tells Catch to provide a main() - only do this in one cpp file
#include "catch.hpp"
#include "username.h"  // Include your header file where isValidUsername is declared

TEST_CASE("Valid usernames", "[username]") {
    REQUIRE(isValidUsername("username123") == true);
    REQUIRE(isValidUsername("user_name") == true);
    REQUIRE(isValidUsername("_username") == true);
    REQUIRE(isValidUsername("username_") == true);
    REQUIRE(isValidUsername("User123") == true);
}

TEST_CASE("Invalid usernames", "[username]") {
    REQUIRE(isValidUsername("user@name") == false);
    REQUIRE(isValidUsername("user name") == false);
    REQUIRE(isValidUsername("user-name") == false);
    REQUIRE(isValidUsername("") == false);
    REQUIRE(isValidUsername("123456") == false);
}
```

### Step 3: Compile and Run the Tests

Make sure you have Catch2 installed. If not, you can download it from [Catch2 GitHub repository](https://github.com/catchorg/Catch2). Then, compile your test cases using a C++ compiler like g++. For example:

```sh
g++ -std=c++17 -I/path/to/catch2/include test_username.cpp -o test_username
./test_username
```

This will run the Catch2 tests and output whether each test passed or failed.

### Summary

1. **Implement the `isValidUsername` function** in C++ using regular expressions.
2. **Write Catch2 test cases** to validate the functionality of `isValidUsername`.
3. **Compile and run the tests** to ensure everything works as expected.

By following these steps, you should be able to successfully convert the JavaScript Jest test case to a C++ Catch2 test case.