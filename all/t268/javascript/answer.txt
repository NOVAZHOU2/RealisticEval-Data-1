Sure! Let's convert the given Python code into JavaScript while maintaining the same functionality, logic, and structure.

Here is the equivalent JavaScript code:

```javascript
function canCompleteCircuit(gas, cost) {
    const n = gas.length;
    let totalGas = 0;
    let totalCost = 0;
    let tank = 0;
    let startIndex = 0;

    for (let i = 0; i < n; i++) {
        totalGas += gas[i];
        totalCost += cost[i];
        tank += gas[i] - cost[i];

        if (tank < 0) {  // If tank becomes negative, update startIndex and reset tank
            startIndex = i + 1;
            tank = 0;
        }
    }

    return totalGas >= totalCost ? startIndex : -1;
}
```

### Explanation:
- The function `canCompleteCircuit` takes two arrays `gas` and `cost` as input.
- It initializes variables `n`, `totalGas`, `totalCost`, `tank`, and `startIndex`.
- It iterates over the arrays using a `for` loop.
- Inside the loop, it updates `totalGas` and `totalCost` by adding the current elements of `gas` and `cost` respectively.
- It updates `tank` by adding the difference between the current `gas` and `cost`.
- If `tank` becomes negative, it updates `startIndex` and resets `tank` to 0.
- Finally, it returns `startIndex` if `totalGas` is greater than or equal to `totalCost`; otherwise, it returns `-1`.