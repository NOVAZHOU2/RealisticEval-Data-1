Here is your Python code translated into TypeScript:

```typescript
function canCompleteCircuit(gas: number[], cost: number[]): number {
    let totalGas = 0;
    let currentGas = 0;
    let startStation = 0;

    for(let i = 0; i < gas.length; i++) {
        totalGas += gas[i] - cost[i];
        currentGas += gas[i] - cost[i];

        if(currentGas < 0) {
            startStation = i + 1;
            currentGas = 0;
        }
    }

    return totalGas >= 0 ? startStation : -1;
}
```

This function takes two arrays of numbers `gas` and `cost`, it iterates over them, updating the `totalGas` and `currentGas` variables. If `currentGas` becomes negative, that means we cannot complete the trip starting from the current `startStation`, so we update `startStation` to `i+1` and reset `currentGas` to 0. Finally, it returns `startStation` if we have enough gas to complete the trip, otherwise it returns -1.