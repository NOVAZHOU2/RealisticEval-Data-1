Sure! Here is the equivalent TypeScript code for the provided Python function:

```typescript
function canCompleteCircuit(gas: number[], cost: number[]): number {
    const n = gas.length;
    let totalGas = 0;
    let totalCost = 0;
    let tank = 0;
    let startIndex = 0;

    for (let i = 0; i < n; i++) {
        totalGas += gas[i];
        totalCost += cost[i];
        tank += gas[i] - cost[i];

        if (tank < 0) {  // If tank becomes negative, update startIndex and reset tank
            startIndex = i + 1;
            tank = 0;
        }
    }

    return totalGas >= totalCost ? startIndex : -1;
}
```

### Explanation:
- **Function Definition**: The function `canCompleteCircuit` is defined with parameters `gas` and `cost`, both of which are arrays of numbers (`number[]`).
- **Variables**: All variables are declared with their respective types (`number`).
- **Loop**: The `for` loop iterates over the arrays, performing the same operations as in the Python code.
- **Conditions and Logic**: The conditions and logic inside the loop are kept the same to ensure the functionality remains consistent.

This TypeScript code maintains the original logic and functionality while adhering to TypeScript's static type system.