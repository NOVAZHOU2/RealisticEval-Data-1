Sure! Here is the equivalent TypeScript code for the provided Python function:

```typescript
function canCompleteCircuit(gas: number[], cost: number[]): number {
    const n = gas.length;
    let totalGas = 0;
    let totalCost = 0;
    let tank = 0;
    let startIndex = 0;

    for (let i = 0; i < n; i++) {
        totalGas += gas[i];
        totalCost += cost[i];
        tank += gas[i] - cost[i];

        if (tank < 0) {  // If tank becomes negative, update startIndex and reset tank
            startIndex = i + 1;
            tank = 0;
        }
    }

    return totalGas >= totalCost ? startIndex : -1;
}
```

### Explanation:
- **Type Annotations**: In TypeScript, we use `number[]` to denote arrays of numbers.
- **Function Definition**: The function signature includes type annotations for the parameters (`gas` and `cost`) and the return type (`number`).
- **Variables**: All variables are declared with `let` and their types are inferred based on the initial values.
- **Logic**: The logic remains the same as in the Python code, including the loop and conditional statements.

This TypeScript code maintains the same functionality and structure as the original Python code.