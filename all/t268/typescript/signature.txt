Certainly! Here is the equivalent TypeScript code for the provided Python function, including appropriate JSDoc-style documentation comments:

```typescript
/**
 * Determines if there exists a starting gas station's index where you can travel
 * around the circuit once in a clockwise direction.
 *
 * @param gas - An array of integers representing the amount of gas at each station.
 * @param cost - An array of integers representing the cost of gas to travel from each station to the next.
 * @returns The starting gas station's index if the circuit can be completed, otherwise -1.
 */
function canCompleteCircuit(gas: number[], cost: number[]): number {
    const n = gas.length;
    let totalGas = 0;
    let totalCost = 0;
    let tank = 0;
    let startIndex = 0;

    for (let i = 0; i < n; i++) {
        totalGas += gas[i];
        totalCost += cost[i];
        tank += gas[i] - cost[i];

        if (tank < 0) {  // If tank becomes negative, update startIndex and reset tank
            startIndex = i + 1;
            tank = 0;
        }
    }

    return totalGas >= totalCost ? startIndex : -1;
}
```

### Explanation:
- **JSDoc Comments**: The JSDoc-style comments provide detailed documentation for the function, including parameter descriptions and return value.
- **Type Annotations**: The function parameters `gas` and `cost` are annotated with `number[]` to indicate they are arrays of numbers.
- **Return Type**: The return type `number` is specified to indicate that the function returns an integer.
- **Logic**: The logic within the function remains the same as in the Python code, ensuring the functionality is preserved.

This TypeScript code maintains the original functionality and structure while providing clear documentation through JSDoc comments.