Here is how you can convert your Python unittest test class to a TypeScript Jest test case:

```typescript
import { DiGraph } from 'networkx';
import { describe, it, expect } from '@jest/globals';

describe('Graph', () => {
  let graph: DiGraph;

  beforeEach(() => {
    const edges = [[1, 2], [2, 3], [3, 4], [4, 5], [5, 1]];
    graph = new DiGraph(edges);
  });

  describe('#cyclesBySize', () => {
    it('should return a dictionary mapping each cycle size to a list of subgraph objects', () => {
      const result = graph.cyclesBySize(true);

      expect(result).toBeInstanceOf(Object);
      // Add more assertions based on the expected output
    });
  });
});
```

Please note that the `DiGraph` class and its method `cyclesBySize` should be implemented in TypeScript first before running the tests. Also, `@jest/globals` provides global Jest functions like `describe`, `it`, and `expect`.