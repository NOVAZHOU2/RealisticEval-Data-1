Here's how you can convert your Python code signature to JavaScript using TypeScript syntax:

```typescript
import * as nx from 'networkx';

interface Edge {
    source: any;
    target: any;
}

class Graph {
    private graph: nx.DiGraph;

    constructor(edges: Edge[]) {
        this.graph = new nx.DiGraph();
        for (let edge of edges) {
            this.graph.addEdge(edge.source, edge.target);
        }
    }

    cyclesBySize(filterRepeatNodes: boolean = true): { [key: number]: nx.Graph[] } {
        /**
         * Finds all unique cycles in the graph that are larger than size 2, optionally filtering out cycles with repeated nodes.
         *
         * @param filterRepeatNodes - If true, filters out cycles where any node appears more than once.
         * @returns An object mapping each cycle size to an array of subgraph objects representing each unique cycle of that size.
         */
        
        // Your implementation here...
    }
}
```

Please note that I've made some assumptions about what `nx.DiGraph` and its methods (`addEdge`, etc.) might look like in JavaScript/TypeScript. You would need to adjust these parts based on the actual library you're using or implement them yourself if necessary.