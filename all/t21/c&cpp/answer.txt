Here's a C++ version of your Python code:

```cpp
#include <iostream>
#include <fstream>
#include <vector>
#include <string>

std::vector<std::string> compareFiles(const std::string& file1Path, const std::string& file2Path) {
    std::ifstream file1(file1Path);
    std::ifstream file2(file2Path);

    if (!file1.is_open() || !file2.is_open()) {
        throw std::runtime_error("Error opening file");
    }

    std::vector<std::string> diffs;
    std::string line1, line2;

    while (getline(file1, line1) && getline(file2, line2)) {
        if (line1 != line2) {
            diffs.push_back("- " + line1);
            diffs.push_back("+ " + line2);
        }
    }

    // Check for remaining lines in both files
    while (getline(file1, line1)) {
        diffs.push_back("- " + line1);
    }

    while (getline(file2, line2)) {
        diffs.push_back("+ " + line2);
    }

    return diffs;
}

int main() {
    try {
        auto diffs = compareFiles("path_to_file1", "path_to_file2");

        for (const auto& diff : diffs) {
            std::cout << diff << std::endl;
        }
    } catch (const std::exception& e) {
        std::cerr << e.what() << std::endl;
    }

    return 0;
}
```

This C++ code does the same thing as your Python code: it compares the contents of two files and prints the differences in a simple diff format. The `compareFiles` function reads the files line-by-line and checks if they're equal. If they're not, it adds a line starting with "-" for the first file and "+" for the second file to the `diffs` vector. At the end of the comparison, it also checks for any remaining lines in both files and adds them to the `diffs` vector. If either file cannot be opened, it throws an exception.