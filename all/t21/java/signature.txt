Sure! Below is the equivalent Java code with the same functionality and comments:

```java
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Compare the contents of two files and return the differences in unified diff format.
 *
 * @param file1Path Path to the first file.
 * @param file2Path Path to the second file.
 * @return A list containing the lines of differences, if any.
 * @throws IOException If there is an error reading the files.
 */
public class FileComparator {

    public static List<String> compareFiles(String file1Path, String file2Path) throws IOException {
        List<String> differences = new ArrayList<>();

        try (BufferedReader reader1 = new BufferedReader(new FileReader(file1Path));
             BufferedReader reader2 = new BufferedReader(new FileReader(file2Path))) {

            String line1 = reader1.readLine();
            String line2 = reader2.readLine();

            int lineNumber = 1;
            while (line1 != null || line2 != null) {
                if (!Objects.equals(line1, line2)) {
                    differences.add("+" + line2);
                    differences.add("-" + line1);
                }
                line1 = reader1.readLine();
                line2 = reader2.readLine();
                lineNumber++;
            }
        } catch (IOException e) {
            throw new IOException("Error reading files", e);
        }

        return differences;
    }

    public static void main(String[] args) {
        try {
            List<String> differences = compareFiles("file1.txt", "file2.txt");
            for (String difference : differences) {
                System.out.println(difference);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
```

### Explanation:
- **Imports**: The necessary imports for handling file reading and exceptions are included.
- **Class Definition**: The `FileComparator` class encapsulates the comparison logic.
- **Method Signature**: The `compareFiles` method takes two file paths as parameters and returns a list of string differences.
- **Exception Handling**: The method throws an `IOException` if there is an error reading the files.
- **Comparison Logic**: The method reads both files line by line and compares them. If lines differ, it adds the differing lines to the result list prefixed with `+` and `-`.
- **Main Method**: The `main` method demonstrates how to use the `compareFiles` method and prints the differences.

This Java code should provide similar functionality to your original Python code, including exception handling and output formatting.