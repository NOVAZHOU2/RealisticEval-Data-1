```typescript
/**
 * Achieve topological sorting, based on depth priority search
 *
 * @param vertices - A list of vertices in the graph. Each vertex should be a unique integer.
 * @param edges - A list of tuples where each tuple represents a directed edge
 *                in the graph and is formed as [start_vertex, end_vertex].
 * @returns A list of vertices in topological order. If the graph contains a cycle,
 *          and thus cannot have a valid topological ordering, an empty array is returned.
 */
function topologicalSortDFS(vertices: number[], edges: [number, number][]): number[] {
    // Implementation goes here
}
```

Please note that the implementation of the function itself is not provided in TypeScript version since it's quite complex and depends heavily on the specifics of the algorithm used for topological sort.