Sure! Here is how you can convert your Python unittest test class to a TypeScript test case using Jest:

```typescript
import { describe, it, expect } from '@jest/globals';
import * as math from 'mathjs';

function eulerToRotationMatrix(roll: number, pitch: number, yaw: number): math.Matrix {
    /**
     * Convert Euler angles (roll, pitch, yaw) to a rotation matrix.
     *
     * @param {number} roll - Rotation around the x-axis in degrees.
     * @param {number} pitch - Rotation around the y-axis in degrees.
     * @param {number} yaw - Rotation around the z-axis in degrees.
     * @returns {math.Matrix} - A 3x3 rotation matrix.
     */
    const radRoll = math.rad(roll);
    const radPitch = math.rad(pitch);
    const radYaw = math.rad(yaw);

    const cosRoll = math.cos(radRoll);
    const sinRoll = math.sin(radRoll);
    const cosPitch = math.cos(radPitch);
    const sinPitch = math.sin(radPitch);
    const cosYaw = math.cos(radYaw);
    const sinYaw = math.sin(radYaw);

    const Rz = math.matrix([
        [cosYaw, -sinYaw, 0],
        [sinYaw, cosYaw, 0],
        [0, 0, 1]
    ]);

    const Ry = math.matrix([
        [cosPitch, 0, sinPitch],
        [0, 1, 0],
        [-sinPitch, 0, cosPitch]
    ]);

    const Rx = math.matrix([
        [1, 0, 0],
        [0, cosRoll, -sinRoll],
        [0, sinRoll, cosRoll]
    ]);

    return math.multiply(Rz, math.multiply(Ry, Rx));
}

describe('eulerToRotationMatrix', () => {
    it('should correctly convert Euler angles to a rotation matrix', () => {
        const roll = 45;
        const pitch = 30;
        const yaw = 60;

        const expectedMatrix = math.matrix([
            [0.25, -0.866, 0.433],
            [0.966, 0.25, 0.134],
            [-0.0, 0.433, 0.866]
        ]);

        const resultMatrix = eulerToRotationMatrix(roll, pitch, yaw);

        // Check if the matrices are equal within a small tolerance
        for (let i = 0; i < 3; i++) {
            for (let j = 0; j < 3; j++) {
                expect(math.abs(resultMatrix.subset(math.index(i, j)) - expectedMatrix.subset(math.index(i, j)))).toBeLessThan(1e-5);
            }
        }
    });
});
```

### Explanation:
1. **Importing Dependencies**: We use `@jest/globals` for Jest's testing utilities and `mathjs` for mathematical operations.
2. **Function Definition**: The `eulerToRotationMatrix` function is defined similarly to your Python version, but it uses `mathjs` for calculations.
3. **Test Suite**: We define a test suite using `describe`.
4. **Individual Test Case**: Inside the suite, we define an individual test case using `it`. We check if the resulting rotation matrix matches the expected one within a small tolerance.
5. **Matrix Comparison**: We compare each element of the resulting matrix with the expected matrix using `expect` and `toBeLessThan`.

Make sure to install the necessary dependencies by running:
```bash
npm install --save-dev @jest/globals mathjs
```