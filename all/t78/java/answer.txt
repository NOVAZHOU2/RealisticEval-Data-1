Here is your Python code converted into Java:

```java
package org.real.temp;

public class Answer {

    public static double[][] eulerToRotationMatrix(double roll, double pitch, double yaw) {
        // Convert from degrees to radians
        roll = Math.toRadians(roll);
        pitch = Math.toRadians(pitch);
        yaw = Math.toRadians(yaw);

        // Compute individual components of the rotation matrix
        double cosRoll = Math.cos(roll), sinRoll = Math.sin(roll);
        double cosPitch = Math.cos(pitch), sinPitch = Math.sin(pitch);
        double cosYaw = Math.cos(yaw), sinYaw = Math.sin(yaw);

        // Create and return the rotation matrix
        double[][] R = new double[3][3];
        R[0][0] = cosPitch * cosYaw;
        R[0][1] = cosPitch * sinYaw;
        R[0][2] = -sinPitch;
        R[1][0] = sinRoll * sinPitch * cosYaw - cosRoll * sinYaw;
        R[1][1] = sinRoll * sinPitch * sinYaw + cosRoll * cosYaw;
        R[1][2] = sinRoll * cosPitch;
        R[2][0] = cosRoll * sinPitch * cosYaw + sinRoll * sinYaw;
        R[2][1] = cosRoll * sinPitch * sinYaw - sinRoll * cosYaw;
        R[2][2] = cosRoll * cosPitch;

        return R;
    }
}
```

This Java method `eulerToRotationMatrix` does the same thing as your Python function `euler_to_rotation_matrix`. It takes three Euler angles (roll, pitch, yaw) in degrees, converts them to radians, computes the components of the rotation matrix, and returns the rotation matrix as a 2D array of doubles.