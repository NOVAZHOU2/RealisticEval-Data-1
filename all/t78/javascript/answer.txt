Here is your Python function translated into JavaScript using the `math` library:

```javascript
function eulerToRotationMatrix(roll, pitch, yaw) {
    const deg2rad = Math.PI / 180;
    
    roll *= deg2rad;
    pitch *= deg2rad;
    yaw *= deg2rad;

    const sinr_cosp = Math.sin(roll) * Math.cos(pitch);
    const cosr_cosp = Math.cos(roll) * Math.cos(pitch);

    const m00 = cosr_cosp;
    const m10 = -Math.sin(yaw) * sinr_cosp + Math.cos(yaw) * Math.sin(roll) * Math.sin(pitch);
    const m20 = Math.cos(yaw) * sinr_cosp + Math.sin(yaw) * Math.sin(roll) * Math.sin(pitch);

    const m01 = Math.sin(roll) * Math.sin(pitch);
    const m11 = Math.cos(roll) * Math.cos(yaw) + Math.sin(roll) * Math.sin(pitch) * Math.sin(yaw);
    const m21 = -Math.cos(roll) * Math.sin(yaw) + Math.sin(roll) * Math.sin(pitch) * Math.cos(yaw);

    const m02 = -Math.cos(pitch);
    const m12 = Math.sin(pitch) * Math.sin(yaw);
    const m22 = Math.cos(pitch) * Math.cos(yaw);

    return [
        [m00, m01, m02],
        [m10, m11, m12],
        [m20, m21, m22]
    ];
}
```

This function will take three arguments (roll, pitch, and yaw), each representing an angle in degrees, and it will return a 3x3 rotation matrix. Note that the rotation order in this JavaScript version is the same as the Python version, which is ZYX. If you want to change the rotation order, you'll need to adjust the calculations accordingly.