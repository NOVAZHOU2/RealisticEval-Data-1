Here is the equivalent JavaScript test case using Jest for the provided Python unittest test class:

```javascript
const { expect } = require('@jest/globals');
const math = require('mathjs');

function eulerToRotationMatrix(roll, pitch, yaw) {
    const cosRoll = math.cos(math.rad(roll));
    const sinRoll = math.sin(math.rad(roll));
    const cosPitch = math.cos(math.rad(pitch));
    const sinPitch = math.sin(math.rad(pitch));
    const cosYaw = math.cos(math.rad(yaw));
    const sinYaw = math.sin(math.rad(yaw));

    return [
        [cosPitch * cosYaw, -sinRoll * sinPitch + cosRoll * sinYaw, cosRoll * sinPitch + sinRoll * sinYaw],
        [cosPitch * sinYaw, cosRoll * cosYaw + sinRoll * sinPitch, cosRoll * sinYaw - sinRoll * cosPitch],
        [-sinPitch, cosRoll * sinPitch, cosRoll * cosPitch]
    ];
}

describe('eulerToRotationMatrix', () => {
    it('should convert Euler angles to a rotation matrix', () => {
        const roll = 0;
        const pitch = 0;
        const yaw = 0;

        const expected = [
            [1, 0, 0],
            [0, 1, 0],
            [0, 0, 1]
        ];

        const result = eulerToRotationMatrix(roll, pitch, yaw);

        expect(result).toEqual(expected);
    });
});
```

This JavaScript test case uses Jest's `expect` function to assert that the output of the `eulerToRotationMatrix` function matches the expected rotation matrix when given specific Euler angles (roll, pitch, yaw). The `mathjs` library is used to perform trigonometric operations and handle radians.