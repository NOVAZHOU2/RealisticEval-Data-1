Here's how you can convert the provided Python `unittest` test class into an equivalent test class using the `jest` testing framework in TypeScript:

```typescript
import { convert } from './yourModule'; // Adjust the import based on your project structure

describe('TestAnswer', () => {
    
    test('simple line break', () => {
        const inputHtml = "Hello<br>World";
        const expectedOutput = "Hello\nWorld";
        expect(convert(inputHtml)).toEqual(expectedOutput);
    });

    test('strong tags', () => {
        const inputHtml = "This is <strong>important</strong> text.";
        const expectedOutput = "This is **important** text.";
        expect(convert(inputHtml)).toEqual(expectedOutput);
    });

    test('emphasis tags', () => {
        const inputHtml = "This is <em>emphasized</em> text.";
        const expectedOutput = "This is *emphasized* text.";
        expect(convert(inputHtml)).toEqual(expectedOutput);
    });

    test('unordered list', () => {
        const inputHtml = "<ul><li>Item 1</li><li>Item 2</li></ul>";
        const expectedOutput = "* Item 1\n* Item 2";
        expect(convert(inputHtml)).toEqual(expectedOutput);
    });

    test('anchor tags', () => {
        const inputHtml = 'Check this link: <a href="http://example.com">Example</a>.';
        const expectedOutput = 'Check this link: [Example](http://example.com).';
        expect(convert(inputHtml)).toEqual(expectedOutput);
    });

});
```

### Key Differences and Adjustments:
1. **Import Statement**: The `convert` function is imported from the relevant module. Make sure to adjust the import path based on your project structure.
  
2. **Describe and Test Blocks**: Jest uses `describe` to group tests and `test` (or `it`) to define individual test cases.

3. **Assertions**: The `self.assertEqual` method from `unittest` is replaced with `expect(...).toEqual(...)` in Jest.

4. **TypeScript Syntax**: The code is adapted to TypeScript syntax, which includes the use of `const` for variable declarations.

With these changes, the test class should function similarly to the original Python tests while adhering to TypeScript and Jest conventions.