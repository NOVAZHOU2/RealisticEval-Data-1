Hereâ€™s the equivalent Java code for the provided TypeScript function:

```java
/**
 * Calculates the final price after applying a discount to the original price.
 * Both price and discount are expected as strings and should represent valid numbers.
 * The discount should be a percentage value between 0 and 100.
 *
 * @param price The original price as a string.
 * @param discount The discount percentage as a string.
 * @returns The final price after applying the discount, rounded to two decimal places.
 * @throws IllegalArgumentException if price or discount aren't valid numbers or if the discount is out of the expected range.
 */
public class PriceCalculator {
    public static double calculateFinalPrice(String price, String discount) {
        double priceValue = Double.parseDouble(price);
        double discountValue = Double.parseDouble(discount);

        if (Double.isNaN(priceValue) || Double.isNaN(discountValue)) {
            throw new IllegalArgumentException("Invalid price or discount value.");
        }

        if (discountValue < 0 || discountValue > 100) {
            throw new IllegalArgumentException("Discount percentage must be between 0 and 100.");
        }

        double discountAmount = priceValue * discountValue / 100;
        double finalPrice = priceValue - discountAmount;

        return Math.round(finalPrice * 100.0) / 100.0;
    }
}
```

Let me know if you need further details!