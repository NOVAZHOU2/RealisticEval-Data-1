Sure, I can help you convert the Python `unittest` test class to a TypeScript test case using Jest. However, your provided code snippet only defines the function `eight_queens()` without any test cases. Therefore, I'll assume you want to create a simple test case that checks if the function returns the correct output for a known input.

Here's how you might write a Jest test case in TypeScript for the `eight_queens` function:

1. First, make sure you have Jest installed. If not, you can install it using npm or yarn:

```bash
npm install --save-dev jest
```

or

```bash
yarn add --dev jest
```

2. Create a new file named `eightQueens.test.ts` and add the following code:

```typescript
import { eightQueens } from './eightQueens'; // Adjust the import path according to your project structure

describe('Eight Queens Problem', () => {
  it('should return a valid solution when called', () => {
    const expectedOutput = [
      '. . Q . . . . .',
      '. . . . Q . . .',
      '. Q . . . . . .',
      '. . . . . . . Q',
      '. . . . . Q . .',
      '. . . Q . . . .',
      '. . . . . . Q .',
      'Q . . . . . . .'
    ];

    // Call the function and store the result
    const result = eightQueens();

    // Check if the result matches the expected output
    expect(result).toEqual(expectedOutput);
  });
});
```

3. Make sure your `package.json` has a script to run Jest tests:

```json
{
  "scripts": {
    "test": "jest"
  }
}
```

4. Run the tests using the following command:

```bash
npm test
```

or

```bash
yarn test
```

This test case assumes that the `eightQueens` function returns an array of strings representing the board configuration. It checks if the returned result matches the expected output.

If you need more complex test cases or additional functionality, feel free to provide more details!