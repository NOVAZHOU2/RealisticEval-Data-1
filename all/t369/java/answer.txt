Sure, here's how you can translate your Python code into Java. The Java code will be structured within a class named `Answer` in the package `org.real.temp`.

```java
package org.real.temp;

public class Answer {
    private static final int N = 8;
    private int[] board = new int[N];
    private boolean solved = false;

    public void eightQueens() {
        if (solve(0)) {
            printSolution();
        } else {
            System.out.println("No solution");
        }
    }

    private boolean solve(int row) {
        if (row == N) {
            solved = true;
            return true;
        }

        for (int col = 0; col < N; col++) {
            if (isSafe(row, col)) {
                board[row] = col;
                if (solve(row + 1)) {
                    return true;
                }
                board[row] = -1; // Backtrack
            }
        }

        return false;
    }

    private boolean isSafe(int row, int col) {
        for (int i = 0; i < row; i++) {
            if (board[i] == col || Math.abs(board[i] - col) == Math.abs(i - row)) {
                return false;
            }
        }
        return true;
    }

    private void printSolution() {
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                if (board[i] == j) {
                    System.out.print("Q ");
                } else {
                    System.out.print(". ");
                }
            }
            System.out.println();
        }
    }

    public static void main(String[] args) {
        Answer answer = new Answer();
        answer.eightQueens();
    }
}
```

### Explanation:
- **Package and Class**: The Java code is organized under the package `org.real.temp` and the class `Answer`.
- **Variables**: 
  - `N` represents the size of the chessboard.
  - `board` is an array that stores the column index where each queen is placed.
  - `solved` is a flag to indicate whether a solution has been found.
- **Methods**:
  - `eightQueens`: Initiates the solving process and prints the solution or "No solution" accordingly.
  - `solve`: A recursive method to place queens on the board. It tries placing a queen in each column of the current row and checks if it's safe using the `isSafe` method. If a solution is found, it sets the `solved` flag to true.
  - `isSafe`: Checks if placing a queen at the given position `(row, col)` is safe from other queens already placed.
  - `printSolution`: Prints the current state of the board with queens represented by 'Q' and empty spaces by '.'.

This Java code should provide similar functionality to your original Python code for solving the Eight Queens problem.