Certainly! Below is an equivalent JavaScript test case using Jest for the `eightQueens` function. Note that the actual implementation of the `eightQueens` function is not provided in your Python code, so I'll assume you have a basic implementation or a reference to it.

```javascript
const { eightQueens } = require('./path-to-your-eight-queens-function');

describe('Eight Queens Problem', () => {
  test('should find and print a valid solution', () => {
    // Mock console.log to capture output
    const mockConsoleLog = jest.spyOn(console, 'log');
    
    // Call the function
    eightQueens();
    
    // Check if the expected output was printed
    expect(mockConsoleLog).toHaveBeenCalledWith(
      '. . Q . . . . .\n' +
      '. . . . Q . . .\n' +
      '. Q . . . . . .\n' +
      '. . . . . . . Q\n' +
      '. . . . . Q . .\n' +
      '. . . Q . . . .\n' +
      '. . . . . . Q .\n' +
      'Q . . . . . . .'
    );
    
    // Restore original console.log
    mockConsoleLog.mockRestore();
  });

  test('should handle no solution case', () => {
    // Mock console.log to capture output
    const mockConsoleLog = jest.spyOn(console, 'log');
    
    // Modify the implementation to force no solution (e.g., by changing the board size)
    const originalEightQueens = eightQueens;
    eightQueens = () => {
      console.log('No solution');
    };
    
    // Call the modified function
    eightQueens();
    
    // Check if the expected output was printed
    expect(mockConsoleLog).toHaveBeenCalledWith('No solution');
    
    // Restore original eightQueens function and console.log
    eightQueens = originalEightQueens;
    mockConsoleLog.mockRestore();
  });
});
```

### Explanation:
1. **Mocking `console.log`:** We use `jest.spyOn` to spy on the `console.log` method so we can capture its output during the test.
2. **Calling the Function:** We call the `eightQueens` function and check if the expected output matches.
3. **Handling No Solution Case:** To test the scenario where there's no solution, we temporarily modify the `eightQueens` function to always log "No solution" and then restore the original function after the test.

Make sure to replace `'./path-to-your-eight-queens-function'` with the actual path to your `eightQueens` function file.