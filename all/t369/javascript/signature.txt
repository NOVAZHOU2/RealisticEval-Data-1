Certainly! Below is the equivalent JavaScript code with the function signature and comments rewritten in JSDoc format:

```javascript
/**
 * Solves the Eight Queens problem. If a solution is found, it will print out the configuration of the chessboard.
 * If all queens cannot be placed, it will print "No solution".
 * Example output:
 * . . Q . . . . .
 * . . . . Q . . .
 * . Q . . . . . .
 * . . . . . . . Q
 * . . . . . Q . .
 * . . . Q . . . .
 * . . . . . . Q .
 * Q . . . . . . .
 */
function eightQueens() {
    const board = Array.from({ length: 8 }, () => Array(8).fill('.'));
    if (!solveQueens(board, 0)) {
        console.log("No solution");
    }
}

eightQueens();

// Helper functions

function printBoard(board) {
    for (let row of board) {
        console.log(row.join(" "));
    }
    console.log();
}

function isSafe(board, row, col) {
    // Check this row on the left side
    for (let i = 0; i < col; i++) {
        if (board[row][i] === 'Q') {
            return false;
        }
    }

    // Check upper diagonal on the left side
    for (let i = row, j = col; i >= 0 && j >= 0; i--, j--) {
        if (board[i][j] === 'Q') {
            return false;
        }
    }

    // Check lower diagonal on the left side
    for (let i = row, j = col; i < board.length && j >= 0; i++, j--) {
        if (board[i][j] === 'Q') {
            return false;
        }
    }

    return true;
}

function solveQueens(board, col) {
    // Base case: If all queens are placed
    if (col >= board.length) {
        printBoard(board);
        return true;
    }

    // Consider this column and try placing this queen in all rows one by one
    let solutionFound = false;
    for (let i = 0; i < board.length; i++) {
        if (isSafe(board, i, col)) {
            board[i][col] = 'Q';
            if (solveQueens(board, col + 1)) {
                solutionFound = true;
            }
            board[i][col] = '.';  // Backtrack
        }
    }

    return solutionFound;
}
```

### Explanation:
1. **JSDoc Comment**:
   - The JSDoc comment at the beginning of the `eightQueens` function provides a clear description of what the function does, including an example output.

2. **Function Signatures**:
   - The function signatures (`eightQueens`, `printBoard`, `isSafe`, and `solveQueens`) are preserved and implemented in JavaScript.

3. **Helper Functions**:
   - `printBoard`: Prints the current state of the board.
   - `isSafe`: Checks if it's safe to place a queen at a given position.
   - `solveQueens`: Recursively tries to place queens on the board.

This JavaScript code maintains the same functionality, logic, and structure as the original Python code, with appropriate JSDoc comments for documentation.