Certainly! Below is the equivalent TypeScript test class using Jest, which preserves the functionality and logic of the provided Python unittest class. The necessary type annotations and Jest assertions are included to ensure the tests are correctly implemented.

### TypeScript Code

First, ensure you have Jest installed in your project:
```sh
npm install --save-dev jest ts-jest @types/jest
```

Then, configure Jest in your `tsconfig.json` and `jest.config.js` files if necessary.

### TypeScript Test Class

```typescript
import { floatToRGB } from './path/to/floatToRGB'; // Import the floatToRGB function

describe('TestFloatToRGB', () => {
    it('should return pure red for value 0.0', () => {
        const result = floatToRGB(0.0);
        expect(result).toEqual([255, 0, 0]);
    });

    it('should return pure green for value 1.0', () => {
        const result = floatToRGB(1.0);
        expect(result).toEqual([0, 255, 0]);
    });

    it('should return yellow (equal mix of red and green) for value 0.5', () => {
        const result = floatToRGB(0.5);
        expect(result).toEqual([127, 127, 0]);
    });

    it('should return more red than green for value 0.25', () => {
        const result = floatToRGB(0.25);
        expect(result).toEqual([191, 63, 0]);
    });

    it('should throw an error for value outside the range [0, 1]', () => {
        expect(() => floatToRGB(1.5)).toThrow('Value must be between 0 and 1 inclusive.');
    });
});
```

### Explanation:

1. **Import Statement**: Import the `floatToRGB` function from the appropriate module.
2. **Describe Block**: Use the `describe` block to group the tests under a single description.
3. **It Blocks**: Each `it` block represents a specific test case.
4. **Expect Assertions**:
   - `expect(result).toEqual([255, 0, 0])`: Checks that the result matches the expected RGB tuple.
   - `expect(() => floatToRGB(1.5)).toThrow('Value must be between 0 and 1 inclusive.')`: Checks that the function throws the expected error message.

### Running the Tests

To run the tests, use the following command:
```sh
npx jest
```

This setup ensures that the tests are structured and executed correctly using Jest, maintaining the same functionality and logic as the original Python unittest class.