Certainly! Here is the equivalent Java JUnit test class for the provided Python unittest class. The Java test class will be placed in the package `org.real.temp` and named `Tester`.

### Java Code:

```java
package org.real.temp;

import org.junit.Test;
import static org.junit.Assert.*;

/**
 * Test cases for the floatToRGB method.
 */
public class Tester {

    /**
     * Tests that a value at the lower boundary (0.0) returns pure red.
     */
    @Test
    public void testPureRed() {
        int[] result = floatToRGB(0.0f);
        assertArrayEquals(new int[]{255, 0, 0}, result);
    }

    /**
     * Tests that a value at the upper boundary (1.0) returns pure green.
     */
    @Test
    public void testPureGreen() {
        int[] result = floatToRGB(1.0f);
        assertArrayEquals(new int[]{0, 255, 0}, result);
    }

    /**
     * Tests that a value at 0.5 returns an equal mix of red and green, resulting in yellow.
     */
    @Test
    public void testMidpoint() {
        int[] result = floatToRGB(0.5f);
        assertArrayEquals(new int[]{127, 127, 0}, result);
    }

    /**
     * Tests that a value at 0.25 returns more red than green.
     */
    @Test
    public void testQuarterPoint() {
        int[] result = floatToRGB(0.25f);
        assertArrayEquals(new int[]{191, 63, 0}, result);
    }

    /**
     * Tests that a value outside the range [0, 1] raises an IllegalArgumentException.
     */
    @Test(expected = IllegalArgumentException.class)
    public void testInvalidValue() {
        floatToRGB(1.5f);
    }
}

/**
 * Converts a floating-point number between 0 and 1 to a color from red to green in the RGB format.
 */
public class Answer {

    /**
     * Converts a floating-point number between 0 and 1 to a color from red to green in the RGB format.
     *
     * @param value a float between 0 and 1.
     * @return an array representing the RGB color.
     * @throws IllegalArgumentException if the value is not between 0 and 1 inclusive.
     */
    public static int[] floatToRGB(float value) {
        if (value < 0.0f || value > 1.0f) {
            throw new IllegalArgumentException("Value must be between 0 and 1 inclusive.");
        }

        // Calculate the red and green components
        int red = (int) ((1.0f - value) * 255);
        int green = (int) (value * 255);

        // Blue component is always 0 for the red-to-green gradient
        int blue = 0;

        return new int[]{red, green, blue};
    }
}
```

### Explanation:
1. **Package Declaration**: The code starts with the package declaration `package org.real.temp;`.
2. **JUnit Test Class**: The test class `Tester` is defined.
3. **JUnit Annotations**: Each test method is annotated with `@Test`.
4. **Assertion Methods**:
   - `assertArrayEquals` is used to compare arrays.
   - `expected` attribute in `@Test` is used to verify that an exception is thrown.
5. **Test Methods**:
   - `testPureRed`: Tests the lower boundary (0.0).
   - `testPureGreen`: Tests the upper boundary (1.0).
   - `testMidpoint`: Tests the midpoint (0.5).
   - `testQuarterPoint`: Tests a quarter point (0.25).
   - `testInvalidValue`: Tests an invalid value (1.5).

6. **Main Conversion Method**: The `Answer` class contains the `floatToRGB` method, which performs the conversion from a floating-point value to an RGB color.

This setup ensures that the functionality and logic of the tests are preserved while adhering to Java's syntax and JUnit conventions.