Sure, I can help you convert the given Python function to JavaScript while preserving the functionality, logic, and structure. Here's the equivalent JavaScript code:

```javascript
function floatToRGB(value) {
    /**
     * Convert a floating-point number between 0 and 1 to a color from red to green in RGB format.
     *
     * @param {number} value - A float between 0 and 1.
     * @returns {Array} An array representing the RGB color.
     */
    if (!(0.0 <= value && value <= 1.0)) {
        throw new Error("Value must be between 0 and 1 inclusive.");
    }

    // Calculate the red and green components
    const red = Math.floor((1.0 - value) * 255);
    const green = Math.floor(value * 255);

    // Blue component is always 0 for the red-to-green gradient
    const blue = 0;

    return [red, green, blue];
}
```

### Explanation:
1. **Function Definition**: The `float_to_rgb` function is converted to `floatToRGB`.
2. **Type Annotations**: In JavaScript, we don't need type annotations like in Python, but we can use JSDoc comments to describe the types.
3. **Error Handling**: The Python `raise ValueError` is converted to `throw new Error` in JavaScript.
4. **Math.floor**: To ensure integer values for the RGB components, we use `Math.floor` instead of `int`.
5. **Return Type**: Instead of returning a tuple, we return an array `[red, green, blue]`.

This JavaScript function should behave identically to the original Python function.