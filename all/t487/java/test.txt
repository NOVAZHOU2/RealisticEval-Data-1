Sure! Below is the equivalent Java JUnit test case for your Python `unittest` test class. Note that I'll assume you have some methods to check for email addresses in Java, similar to what you might do in Python using regular expressions or other means.

```java
package org.real.temp;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;

import org.junit.jupiter.api.Test;

public class Tester {

    @Test
    public void testContainsEmail() {
        // Test cases where the input should contain an email
        assertTrue(containsEmail("Please contact us at info@example.com"));
        assertTrue(containsEmail("Reach out to support@sample.org for assistance."));

        // Test cases where the input should not contain an email
        assertFalse(containsEmail("This is just a plain text message."));
        assertFalse(containsEmail("No emails here!"));
    }

    /**
     * Check if the given text contains an email address.
     *
     * @param text The string to search for an email address.
     * @return true if an email address is found, false otherwise.
     */
    private boolean containsEmail(String text) {
        // Replace with your actual implementation to check for email addresses
        return text.matches(".*[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}.*");
    }
}
```

### Explanation:
1. **Package Declaration**: The package declaration is set to `org.real.temp`.
2. **Class Declaration**: The class `Tester` is declared within the specified package.
3. **JUnit Imports**: The necessary imports from JUnit 5 (`junit.jupiter.api`) are included.
4. **Test Method**: A single test method `testContainsEmail` is defined, which tests both positive and negative scenarios.
5. **Assertions**: The `assertTrue` and `assertFalse` methods from JUnit are used to validate the expected outcomes.
6. **Private Method**: The `containsEmail` method is implemented to check for email addresses in the input string. This method uses a regular expression to match the pattern of an email address.

Make sure you replace the placeholder implementation of `containsEmail` with your actual logic for detecting email addresses.