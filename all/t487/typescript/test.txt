Certainly! Below is the equivalent TypeScript code for the provided Python function and its corresponding Jest test class. The TypeScript code includes proper type annotations and uses Jest assertions to replicate the functionality of the Python unittest framework.

### TypeScript Code

#### Function Definition

```typescript
/**
 * Check if the given text contains an email address.
 *
 * @param text The string to search for an email address.
 * @returns True if an email address is found, False otherwise.
 */
function containsEmail(text: string): boolean {
    // Define a regex pattern for validating an email address
    const emailPattern: RegExp = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}/;

    // Search for the email pattern in the text
    return emailPattern.test(text);
}
```

#### Jest Test Class

```typescript
import { containsEmail } from './path/to/containsEmail'; // Adjust the import path as needed

describe('containsEmail', () => {
    it('should return true when the text contains an email address', () => {
        const textWithEmail = 'Hello, my email is example@example.com';
        expect(containsEmail(textWithEmail)).toBe(true);
    });

    it('should return false when the text does not contain an email address', () => {
        const textWithoutEmail = 'This does not contain an email';
        expect(containsEmail(textWithoutEmail)).toBe(false);
    });

    it('should return true when the text contains multiple email addresses', () => {
        const textWithMultipleEmails = 'Contact me at first@example.com or second@example.org';
        expect(containsEmail(textWithMultipleEmails)).toBe(true);
    });

    it('should return false when the text contains only part of an email', () => {
        const textWithPartialEmail = 'example.com';
        expect(containsEmail(textWithPartialEmail)).toBe(false);
    });
});
```

### Explanation:

1. **Function Definition**:
   - The function `containsEmail` takes a single argument `text` of type `string` and returns a `boolean`.
   - The regular expression `emailPattern` is defined using the `RegExp` literal syntax.
   - The `test` method of the `RegExp` object is used to check if the pattern matches the input text.

2. **Jest Test Class**:
   - The Jest test suite uses the `describe` block to group related tests.
   - Each test case is defined using the `it` block with a descriptive message.
   - Jest assertions (`expect`) are used to verify the expected behavior of the `containsEmail` function.

3. **Import Statement**:
   - The `containsEmail` function is imported from the appropriate file path. Adjust the import path as needed based on your project structure.

This TypeScript code preserves the original functionality and logic of the Python code, ensuring that the tests accurately validate the behavior of the `containsEmail` function.