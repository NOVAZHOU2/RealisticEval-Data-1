Sure! Below is the equivalent TypeScript code, including the necessary type definitions and adjustments for TypeScript's static type system:

```typescript
import { test } from 'node:re';

function containsEmail(text: string): boolean {
    /**
     * Check if the given text contains an email address.
     *
     * @param text - The string to search for an email address.
     * @returns True if an email address is found, False otherwise.
     */
    // Define a regex pattern for validating an email address
    const emailPattern = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}/;

    // Search for the email pattern in the text
    return test(emailPattern, text);
}

// Example usage
console.log(containsEmail("Hello, my email is example@example.com"));  // Should return true
console.log(containsEmail("No email here"));  // Should return false
```

### Explanation:
1. **Import Statement**: TypeScript does not have a built-in `re` module like Python. Instead, we use the `test` method directly from the RegExp object.
2. **Function Definition**: The function `containsEmail` is defined with the same signature as the Python function, specifying the input type (`string`) and return type (`boolean`).
3. **Regex Pattern**: The regex pattern remains the same, but it is defined using TypeScript's RegExp literal syntax.
4. **Regex Test**: The `test` method of the RegExp object is used to check if the pattern matches the text, which returns a boolean value directly.

This TypeScript code maintains the same functionality and logic as the original Python code.