Certainly! Below is the equivalent TypeScript code, including proper type annotations and JSDoc-style documentation comments:

```typescript
/**
 * Check if the given text contains an email address.
 *
 * @param text - The string to search for an email address.
 * @returns True if an email address is found, False otherwise.
 */
function containsEmail(text: string): boolean {
    // Define a regex pattern for validating an email address
    const emailPattern = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}/;

    // Search for the email pattern in the text
    return emailPattern.test(text);
}

// Example usage
console.log(containsEmail("Hello, my email is example@example.com"));  // Should return true
console.log(containsEmail("No email here"));  // Should return false
```

### Explanation:
1. **JSDoc Documentation Comments**:
   - The JSDoc-style comments are used to document the function parameters and return type.
   - The `@param` tag is used to describe the parameter `text`.
   - The `@returns` tag is used to describe the return value.

2. **Function Definition**:
   - The function `containsEmail` is defined with the same name and type annotations.
   - The input parameter `text` is annotated with the type `string`.
   - The return type is specified as `boolean`.

3. **Regex Pattern**:
   - The regex pattern is defined using TypeScript's RegExp literal syntax.
   - The `test` method of the RegExp object is used to check if the pattern matches the text, which returns a boolean value directly.

4. **Example Usage**:
   - Example calls to the function are included to demonstrate its usage.

This TypeScript code preserves the original functionality and structure of the Python code while adhering to TypeScript's static type system and documentation conventions.