Here's how you could translate your Python function into C and C++:

C Code:

```c
#include <stdio.h>
#include <string.h>

int contains_email(const char *text) {
    const char *email_pattern = "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b";
    
    if(strcasestr(text, email_pattern)) {
        return 1;
    } else {
        return 0;
    }
}

int main() {
    printf("%d\n", contains_email("Hello, my email is test@example.com"));
    printf("%d\n", contains_email("No emails here"));
    return 0;
}
```

C++ Code:

```cpp
#include <iostream>
#include <regex>

bool contains_email(std::string text) {
    std::regex pattern(R"(\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b)");

    if (std::regex_search(text, pattern)) {
        return true;
    } else {
        return false;
    }
}

int main() {
    std::cout << std::boolalpha; // Print boolean values as true/false instead of 1/0
    std::cout << contains_email("Hello, my email is test@example.com") << "\n";
    std::cout << contains_email("No emails here") << "\n";
    return 0;
}
```

In both versions, the `contains_email` function checks whether the input string contains any substring that matches the regular expression pattern for email addresses. If it does, the function returns 1 (true in C) or true (in C++), otherwise it returns 0 (false in C) or false (in C++).

Please note that these codes assume that the regex library is available in your environment. In C++, the `<regex>` header should be included, while in C, you need to use a third-party library like PCRE.