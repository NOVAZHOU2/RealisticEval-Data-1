Hereâ€™s the equivalent JavaScript code that maintains the same functionality, logic, and structure as the provided Python code:

```javascript
function findPrimes(lowerBound, upperBound) {
    const primeNumbers = [];
    for (let number = lowerBound; number <= upperBound; number++) {
        if (isPrime(number)) {
            primeNumbers.push(number);
        }
    }
    return primeNumbers;
}

function computeSumOfPrimes(primes) {
    const total = primes.reduce((acc, curr) => acc + curr, 0);
    return total;
}

function isPrime(num) {
    if (num <= 1) {
        return false;
    }
    if (num === 2 || num === 3) {
        return true;
    }
    if (num % 2 === 0 || num % 3 === 0) {
        return false;
    }
    let i = 5;
    while (i * i <= num) {
        if (num % i === 0 || num % (i + 2) === 0) {
            return false;
        }
        i += 6;
    }
    return true;
}
```

### Explanation:
- **Function Naming**: Function names have been converted to camelCase to follow JavaScript conventions.
- **Array Methods**: Used `Array.prototype.reduce()` for summing up primes, which is idiomatic in JavaScript.
- **Loop Structure**: The for loop structure is similar, with minor syntax changes (e.g., `let` instead of `for` in Python).
- **Logical Flow**: The logic and flow of the original code have been preserved.