Here’s the equivalent Java code organized within the package `org.real.temp` and the class `Answer`. The functionality, logic, and structure have been adapted to Java’s syntax and language features:

```java
package org.real.temp;

import java.nio.charset.Charset;
import java.nio.charset.CharacterCodingException;
import java.nio.charset.CharsetEncoder;

public class Answer {

    public static void main(String[] args) {
        String[] uniqueToShiftJis = findShiftJisNotGbk();
        for (String character : uniqueToShiftJis) {
            System.out.println(character);
        }
    }

    public static String[] findShiftJisNotGbk() {
        // List to store characters that are in Shift-JIS but not in GBK
        String[] uniqueToShiftJis = new String[65536];
        int count = 0;

        // Iterate over a range of Unicode code points
        // The BMP goes up to U+FFFF, which is 65535 in decimal
        for (int codepoint = 0; codepoint < 65536; codepoint++) {
            char character = (char) codepoint;

            try {
                // Try encoding the character in Shift-JIS
                if (isEncodable(character, "Shift_JIS")) {
                    try {
                        // Try encoding the character in GBK
                        if (!isEncodable(character, "GBK")) {
                            // If it fails, the character is not representable in GBK but is in Shift-JIS
                            uniqueToShiftJis[count++] = Character.toString(character);
                        }
                    } catch (CharacterCodingException e) {
                        // If it fails, the character is not representable in GBK but is in Shift-JIS
                        uniqueToShiftJis[count++] = Character.toString(character);
                    }
                }
            } catch (CharacterCodingException e) {
                // If it fails, the character is not representable in Shift-JIS, so we skip it
                continue;
            }
        }

        // Trim the array to the actual size
        return java.util.Arrays.copyOf(uniqueToShiftJis, count);
    }

    private static boolean isEncodable(char character, String charsetName) throws CharacterCodingException {
        CharsetEncoder encoder = Charset.forName(charsetName).newEncoder();
        return encoder.canEncode(character);
    }
}
```

### Explanation:
1. **Package and Class Definition**: The code is defined within the package `org.real.temp` and the class `Answer`.
2. **Main Method**: A `main` method is included to demonstrate how to call the `findShiftJisNotGbk` method.
3. **findShiftJisNotGbk Method**: This method iterates over Unicode code points and checks if each character can be encoded in Shift-JIS but not in GBK.
4. **isEncodable Method**: This helper method checks if a character can be encoded in a given charset using `CharsetEncoder`.
5. **Array Handling**: The resulting array is trimmed to the actual size of unique characters found.

This Java code maintains the same functionality as the original Python code while adhering to Java's syntax and best practices.