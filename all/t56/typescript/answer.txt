Sure, here is the equivalent TypeScript code for the provided Python function:

```typescript
function findShiftJisNotGbk(): string[] {
    /**
     * Find all the characters that can be represented in Shift-JIS, but not in GBK, and return them as an array
     *
     * @returns {string[]} - A list of characters that are unique to Shift-JIS, not encodable in GBK.
     */
    
    // Import necessary libraries
    const iconv = require('iconv-lite');

    // Define character sets
    const shiftJisCharset = 'shift-jis';
    const gbkCharset = 'gbk';

    // Create buffers for testing encoding/decoding
    const testString = String.fromCharCode(0x81, 0x40); // Example character that should only exist in Shift-JIS

    // Check if the character can be encoded in Shift-JIS but not in GBK
    const shiftJisBuffer = iconv.encode(testString, shiftJisCharset);
    const gbkBuffer = iconv.encode(testString, gbkCharset);

    // If encoding fails in GBK but succeeds in Shift-JIS, it's unique to Shift-JIS
    if (shiftJisBuffer && !gbkBuffer) {
        return [testString];
    }

    return [];
}
```

### Explanation:
- **Import Libraries**: We use `iconv-lite` to handle character encoding conversions between different character sets.
- **Character Sets**: We define the character sets `shift-jis` and `gbk`.
- **Test String**: We create a test string with a character that is known to be present in Shift-JIS but not in GBK (`'\u8140'`).
- **Encoding Checks**: We attempt to encode the test string using both character sets. If encoding succeeds in Shift-JIS but fails in GBK, we add the character to our result list.

This code assumes you have the `iconv-lite` library installed. You can install it using npm or yarn:

```bash
npm install iconv-lite
# or
yarn add iconv-lite
```

Please note that this example uses a specific test character (`'\u8140'`) which you might need to replace with other characters based on your requirements.