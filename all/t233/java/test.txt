Here's how you can convert your Python unittest test class to a Java JUnit test case:

```java
package org.real.temp;

import static org.junit.Assert.assertEquals;
import org.junit.Test;

public class Tester {
    
    @Test
    public void testRemoveComments() {
        String input = "Hello, world! # This is a comment";
        String expectedOutput = "Hello, world!";
        
        String actualOutput = removeComments(input);
        
        assertEquals(expectedOutput, actualOutput);
    }
    
    public String removeComments(String string) {
        // Implementation of the method goes here
        return string.replaceAll("#.*", "");
    }
}
```

In this Java code, we've created a class `Tester` in the package `org.real.temp`. Inside this class, there's a single test method `testRemoveComments`, which checks if the `removeComments` function works correctly. The `removeComments` function is also defined within the same class. 

Please note that the implementation of the `removeComments` function is left blank for you to fill in according to the logic you want to apply. In the given Python code, it removes everything after `#` till the end of the line. So, you might want to implement similar functionality in Java.