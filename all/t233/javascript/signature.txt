Certainly! Here is the equivalent JavaScript code with the function signature and JSDoc comments:

```javascript
/**
 * Removes comments from the provided string. Comments start with a '#' and end at the newline.
 * 
 * Example:
 *   Input: "Hello, world! # This is a comment"
 *   Output: "Hello, world!"
 * 
 * @param {string} string - The input string containing potential comments.
 * @returns {string} The string with all comments removed.
 */
function removeComments(string) {
    const lines = string.split('\n');  // Split the string into lines
    const cleanedLines = lines.map(line => line.split('#')[0].trim());  // Remove the comment part from each line and trim whitespace
    return cleanedLines.join('\n');  // Join the lines back into a single string
}
```

### Explanation:
1. **JSDoc Comments**:
   - The JSDoc comment block provides a description of the function's purpose.
   - An example is included to illustrate how the function works.
   - The `@param` tag specifies the parameter type and description.
   - The `@returns` tag specifies the return type and description.

2. **Function Implementation**:
   - The function `removeComments` takes a string as input.
   - It splits the string into lines using `\n`.
   - It maps over each line, removing the comment part by splitting on `#` and taking the first part.
   - It trims any trailing whitespace from each line.
   - Finally, it joins the cleaned lines back into a single string.

This JavaScript function preserves the functionality and structure of the original Python function.