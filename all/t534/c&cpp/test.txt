Sure! Below is the equivalent C++ Catch2 test case for the JavaScript Jest test function `removeElementInArray`.

```cpp
#include <catch2/catch.hpp>
#include <vector>

/**
 * Removes the first occurrence of a specified element from an array.
 *
 * @param {Array} array - The array from which to remove the element.
 * @param {*} element - The element to remove from the array.
 * @returns {Array} A new array with the element removed, or the original array if the element is not found.
 */
std::vector<int> removeElementInArray(const std::vector<int>& array, int element) {
    auto it = std::find(array.begin(), array.end(), element);
    if (it != array.end()) {
        std::vector<int> newArray(array.begin(), it);
        newArray.insert(newArray.end(), it + 1, array.end());
        return newArray;
    }
    return array;
}

TEST_CASE("Remove Element in Array", "[array]") {
    SECTION("Element exists") {
        std::vector<int> array = {1, 2, 3, 4, 5};
        int elementToRemove = 3;
        std::vector<int> expected = {1, 2, 4, 5};
        REQUIRE(removeElementInArray(array, elementToRemove) == expected);
    }

    SECTION("Element does not exist") {
        std::vector<int> array = {1, 2, 3, 4, 5};
        int elementToRemove = 6;
        std::vector<int> expected = {1, 2, 3, 4, 5};
        REQUIRE(removeElementInArray(array, elementToRemove) == expected);
    }

    SECTION("Empty array") {
        std::vector<int> array = {};
        int elementToRemove = 1;
        std::vector<int> expected = {};
        REQUIRE(removeElementInArray(array, elementToRemove) == expected);
    }

    SECTION("Single element array") {
        std::vector<int> array = {1};
        int elementToRemove = 1;
        std::vector<int> expected = {};
        REQUIRE(removeElementInArray(array, elementToRemove) == expected);
    }

    SECTION("Multiple occurrences of element") {
        std::vector<int> array = {1, 2, 3, 3, 4, 5};
        int elementToRemove = 3;
        std::vector<int> expected = {1, 2, 3, 4, 5};
        REQUIRE(removeElementInArray(array, elementToRemove) == expected);
    }
}
```

### Explanation:
1. **Function Definition**: The `removeElementInArray` function takes a vector of integers and an integer to remove. It returns a new vector with the element removed if found, otherwise, it returns the original vector.
2. **Catch2 Test Case**:
   - `TEST_CASE`: Defines a test case named "Remove Element in Array".
   - `SECTION`: Defines different scenarios within the test case.
     - **Element exists**: Tests removing an existing element.
     - **Element does not exist**: Tests removing an element that is not in the array.
     - **Empty array**: Tests removing an element from an empty array.
     - **Single element array**: Tests removing the only element in the array.
     - **Multiple occurrences of element**: Tests removing an element that appears multiple times.

This should give you a good starting point for your C++ unit tests using Catch2.