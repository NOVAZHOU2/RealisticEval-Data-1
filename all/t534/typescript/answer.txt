Here's the TypeScript version of your JavaScript function:

```typescript
/**
 * Removes the first occurrence of a specified element from an array.
 *
 * @param {T[]} array - The array from which to remove the element.
 * @param {T} element - The element to remove from the array.
 * @returns {T[]} A new array with the element removed, or the original array if the element is not found.
 */
function removeElementInArray<T>(array: T[], element: T): T[] {
    const index = array.indexOf(element);
    if (index !== -1) {
        return [...array.slice(0, index), ...array.slice(index + 1)];
    }
    return array;
}
```

This TypeScript version introduces type parameters (`<T>`) to allow the function to work with arrays of any type, and it uses TypeScript-specific features like the spread operator (`...`) for creating a new array without modifying the original one.