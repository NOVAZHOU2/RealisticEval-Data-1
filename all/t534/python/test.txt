Sure! Below is the equivalent Python unit test case using the `unittest` framework for the provided JavaScript Jest test case.

```python
import unittest

def remove_element_in_array(array, element):
    # Create a copy of the array to avoid modifying the original array
    new_array = array[:]
    
    try:
        # Remove the first occurrence of the element
        new_array.remove(element)
    except ValueError:
        # Element not found, return the original array
        pass
    
    return new_array

class TestRemoveElementFromArray(unittest.TestCase):

    def test_remove_existing_element(self):
        array = [1, 2, 3, 4, 5]
        element_to_remove = 3
        expected_result = [1, 2, 4, 5]
        
        result = remove_element_in_array(array, element_to_remove)
        
        self.assertEqual(result, expected_result)

    def test_remove_non_existing_element(self):
        array = [1, 2, 3, 4, 5]
        element_to_remove = 6
        expected_result = [1, 2, 3, 4, 5]
        
        result = remove_element_in_array(array, element_to_remove)
        
        self.assertEqual(result, expected_result)

if __name__ == '__main__':
    unittest.main()
```

### Explanation:

1. **Function Definition**:
   - The function `remove_element_in_array` takes an array and an element as arguments.
   - It creates a copy of the array to avoid modifying the original array.
   - It attempts to remove the first occurrence of the element using the `remove` method. If the element is not found, it catches the `ValueError` exception and returns the original array unchanged.

2. **Test Case Class**:
   - The class `TestRemoveElementFromArray` inherits from `unittest.TestCase`.
   - Two test methods are defined: `test_remove_existing_element` and `test_remove_non_existing_element`.

3. **Test Methods**:
   - `test_remove_existing_element`: Tests removing an existing element from the array.
   - `test_remove_non_existing_element`: Tests attempting to remove a non-existing element from the array.

4. **Running the Tests**:
   - The `if __name__ == '__main__':` block ensures that the tests are run when the script is executed directly.

This Python code should work similarly to your original Jest test case.