Here's the equivalent Java code for your JavaScript function:

```java
import java.util.ArrayList;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        ArrayList<String> list = new ArrayList<>(Arrays.asList("apple", "banana", "cherry"));
        String elementToRemove = "banana";
        
        ArrayList<String> result = removeElementInArray(list, elementToRemove);
        System.out.println(result);  // Output: [apple, cherry]
    }

    /**
     * Removes the first occurrence of a specified element from an array list.
     *
     * @param <T>       The type of elements in the list.
     * @param arrayList The array list from which to remove the element.
     * @param element   The element to remove from the array list.
     * @return An array list with the element removed, or the original array list if the element is not found.
     */
    public static <T> ArrayList<T> removeElementInArrayList(ArrayList<T> arrayList, T element) {
        int index = arrayList.indexOf(element);
        if (index != -1) {
            arrayList.remove(index);
        }
        return arrayList;
    }
}
```

### Explanation:
- **Java Generics**: The method `removeElementInArrayList` uses generics (`<T>`) to allow it to work with any type of objects stored in the `ArrayList`.
- **ArrayList**: Instead of using a plain JavaScript array, I used Java's `ArrayList`, which provides more functionality and safety compared to raw arrays.
- **indexOf**: This method finds the first occurrence of the specified element in the list.
- **remove**: If the element is found, it removes the element at that index.

This Java code will achieve the same functionality as your JavaScript function.