Here's the equivalent JavaScript code for the provided C++ function. This translation maintains the logic and functionality of the original code while adhering to JavaScript conventions.

```javascript
function minChangesToSymmetric(matrix) {
    const n = matrix.length;
    let minChanges = 0;

    // Traverse only the upper triangle of the matrix, excluding the diagonal
    for (let i = 0; i < n; i++) {
        for (let j = i + 1; j < n; j++) {
            // If the corresponding elements are not equal, they need to be changed
            if (matrix[i][j] !== matrix[j][i]) {
                minChanges++;
                // Optionally, you can change matrix[i][j] to matrix[j][i] or vice versa to make it symmetric
                // Uncomment the line below if you want to actually modify the matrix
                // matrix[i][j] = matrix[j][i];
            }
        }
    }

    return minChanges;
}
```

### Key Differences and Adaptations:
1. **Function Declaration**: In JavaScript, functions are declared using the `function` keyword.
2. **Array Length**: Instead of `matrix.size()`, we use `matrix.length` to get the number of rows in the matrix.
3. **Increment Operator**: The increment operator (`++`) remains the same in both languages.
4. **Strict Equality Check**: The C++ `!=` operator is replaced with the strict equality check (`!==`) in JavaScript to ensure type safety. 

You can call this function with a 2D array in JavaScript to get the minimum number of changes needed to make the matrix symmetric.