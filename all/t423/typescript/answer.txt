Here is your Python function converted into TypeScript:

```typescript
async function writeUniqueLineToFile(filename: string, lineContent: string): Promise<void> {
    /**
     * Writes a line to a text file only if the line with the same content does not already exist.
     *
     * @param {string} filename - The name of the file to write to.
     * @param {string} lineContent - The content of the line to write.
     *
     * @returns {Promise<void>}
     */
    
    try {
        const fs = require('fs').promises;
        let data = await fs.readFile(filename, 'utf8');
        
        if (!data.includes(lineContent)) {
            await fs.appendFile(filename, `${lineContent}\n`);
        }
    } catch (err) {
        console.error(err);
    }
}
```

This TypeScript function uses Node.js's built-in `fs` module to read and append files asynchronously. It first reads the contents of the specified file, checks if the desired line is present, and appends it if not. If an error occurs during any step, it logs the error to the console. Note that you'll need to call this function in an async context or use `.then()`/`.catch()` with promises.