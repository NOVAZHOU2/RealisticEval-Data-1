Hereâ€™s the Java equivalent for the given Python code, organized within the package `org.real.temp` and the class `Answer`. This Java code maintains the functionality of checking if a line already exists in a file before appending it:

```java
package org.real.temp;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class Answer {

    /**
     * Writes a line to a text file only if the line with the same content does not already exist.
     *
     * @param filename    The name of the file to write to.
     * @param lineContent The content of the line to write.
     */
    public static void writeUniqueLineToFile(String filename, String lineContent) {
        try (BufferedReader reader = new BufferedReader(new FileReader(filename))) {
            String currentLine;
            while ((currentLine = reader.readLine()) != null) {
                if (currentLine.equals(lineContent)) {
                    System.out.println("Line '" + lineContent + "' already exists in '" + filename + "'. Not writing again.");
                    return;
                }
            }

            // If lineContent is not found, append it to the file
            try (BufferedWriter writer = new BufferedWriter(new FileWriter(filename, true))) {
                writer.write(lineContent);
                writer.newLine();
                System.out.println("Line '" + lineContent + "' successfully written to '" + filename + "'.");
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        // Example usage
        writeUniqueLineToFile("example.txt", "This is a unique line.");
    }
}
```

### Key Points:
1. **File Handling**: Java uses `BufferedReader` and `BufferedWriter` for reading and writing files, respectively.
2. **Try-with-resources Statement**: Ensures that resources are automatically closed after use.
3. **IOException Handling**: Proper exception handling to manage file operations.
4. **Method Signature**: The method `writeUniqueLineToFile` is declared as `static` to match the example and can be called directly from the `main` method.

This Java code performs the same functionality as the provided Python code, ensuring that a line is appended to a file only if it does not already exist.