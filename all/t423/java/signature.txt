Certainly! Here is the equivalent Java code for the provided Python function, including proper Javadoc comments and Java conventions:

```java
package org.real.temp;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

/**
 * A utility class for writing unique lines to a text file.
 */
public class Answer {

    /**
     * Writes a line to a text file only if the line with the same content does not already exist.
     *
     * @param filename    The name of the file to write to.
     * @param lineContent The content of the line to write.
     */
    public static void writeUniqueLineToFile(String filename, String lineContent) {
        try (BufferedReader reader = new BufferedReader(new FileReader(filename))) {
            String currentLine;
            while ((currentLine = reader.readLine()) != null) {
                if (currentLine.equals(lineContent)) {
                    System.out.println("Line '" + lineContent + "' already exists in '" + filename + "'. Not writing again.");
                    return;
                }
            }
        } catch (IOException e) {
            System.err.println("Error reading the file: " + e.getMessage());
        }

        try (BufferedWriter writer = new BufferedWriter(new FileWriter(filename, true))) {
            writer.write(lineContent);
            writer.newLine();
            System.out.println("Line '" + lineContent + "' successfully written to '" + filename + "'.");
        } catch (IOException e) {
            System.err.println("Error writing to the file: " + e.getMessage());
        }
    }

    // Example usage
    public static void main(String[] args) {
        writeUniqueLineToFile("example.txt", "This is a test line.");
    }
}
```

### Explanation:
1. **Package Declaration**: The package `org.real.temp` is declared at the beginning.
2. **Class Definition**: The class `Answer` is defined with the necessary imports.
3. **Javadoc Comments**: The method `writeUniqueLineToFile` includes detailed Javadoc comments that describe the purpose, parameters, and behavior of the method.
4. **Method Signature**: The method `writeUniqueLineToFile` is defined as `static` and takes two parameters: `filename` and `lineContent`, both of type `String`.
5. **File Operations**:
   - **Reading the File**: Uses `BufferedReader` to read the file line by line.
   - **Writing to the File**: Uses `BufferedWriter` to append the line if it does not already exist.
6. **Exception Handling**: Proper exception handling is included to manage errors during file operations.
7. **Example Usage**: The `main` method demonstrates how to call the `writeUniqueLineToFile` method.

This Java code preserves the original functionality and structure of the Python code while adhering to Java conventions and best practices.