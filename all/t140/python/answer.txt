Here's the equivalent Python code for the provided TypeScript function. The function get_time_since_born_until_now calculates the time elapsed from a given birth date until the current time, returning the result as a tuple of years, months, days, hours, and minutes.
python
from datetime import datetime, timedelta

def get_time_since_born_until_now(birth_date: datetime) -> tuple[int, int, int, int, int]:
    now = datetime.now()
    
    # Calculate years
    years = now.year - birth_date.year
    
    # Calculate months
    months = now.month - birth_date.month
    if months < 0:
        years -= 1
        months += 12

    # Calculate days
    days = now.day - birth_date.day
    if days < 0:
        months -= 1
        # Set tempDate to the last day of the previous month
        previous_month = (now.replace(day=1) - timedelta(days=1)).day
        days += previous_month

    # Calculate hours
    hours = now.hour - birth_date.hour
    if hours < 0:
        days -= 1
        hours += 24

    # Calculate minutes
    minutes = now.minute - birth_date.minute
    if minutes < 0:
        hours -= 1
        minutes += 60

    return (years, months, days, hours, minutes)

# Example usage
birth_date = datetime(1990, 10, 1, 12, 30)  # Year, Month, Day, Hour, Minute
result = get_time_since_born_until_now(birth_date)
print(result)
Explanation:
Imports: The datetime module is imported to handle date and time operations. The timedelta class is used to manipulate dates.
Function Definition: The function get_time_since_born_until_now takes a datetime object as input and returns a tuple.
Current Date: The current date and time are obtained using datetime.now().
Calculating Years: The difference in years is calculated. If the current month is less than the birth month, it decrements the year.
Calculating Months: The difference in months is calculated. If it's negative, it adjusts the years and adds 12 to the months.
Calculating Days: The difference in days is calculated. If it's negative, it decrements the months and adjusts the days by determining the last day of the previous month.
Calculating Hours: The difference in hours is calculated. If it's negative, it decrements the days and adjusts the hours.
Calculating Minutes: The difference in minutes is calculated. If it's negative, it decrements the hours and adjusts the minutes.
Return: Finally, it returns a tuple containing years, months, days, hours, and minutes.
Usage:
You can replace the birth_date in the example usage with any desired date to get the elapsed time since that date until now.