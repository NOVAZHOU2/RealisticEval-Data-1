To convert the TypeScript code signature and comments to Python, we'll modify the function signature accordingly while preserving the comments. In Python, the type hints for the parameters and return types are structured differently. Below is the updated code snippet:
python
from datetime import datetime

def get_time_since_born_until_now(birth_date: datetime) -> tuple[int, int, int, int, int]:
    """ 
    Calculate the years, months, days, hours, and minutes that have passed 
    from the birth date to the current date and return them as a tuple. 
    The contents of the tuple are the values of these units.
    
    :param birth_date: The birth date as a datetime object.
    """
    now = datetime.now()
    
    # Calculate years
    years = now.year - birth_date.year
    
    # Calculate months
    months = now.month - birth_date.month
    if months < 0:
        years -= 1
        months += 12

    # Calculate days
    days = now.day - birth_date.day
    if days < 0:
        months -= 1
        previous_month = (now.replace(day=1) - timedelta(days=1)).day
        days += previous_month

    # Calculate hours
    hours = now.hour - birth_date.hour
    if hours < 0:
        days -= 1
        hours += 24

    # Calculate minutes
    minutes = now.minute - birth_date.minute
    if minutes < 0:
        hours -= 1
        minutes += 60

    return (years, months, days, hours, minutes)

# Example usage
birth_date = datetime(1990, 10, 1, 12, 30)  # Year, Month, Day, Hour, Minute
result = get_time_since_born_until_now(birth_date)
print(result)
Changes Made:
Function Name: The function name is changed to get_time_since_born_until_now, following Python's naming conventions (snake_case).
Parameter and Return Type:
birth_date: datetime is the equivalent of birthDate: Date.
The return type is specified as -> tuple[int, int, int, int, int], which corresponds to the TypeScript return type of [number, number, number, number, number].
Docstring: The comment style is converted into a docstring format (triple quotes) for Python. This includes