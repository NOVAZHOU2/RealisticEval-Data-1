Here's how you can translate the given Python code into Java. Note that Java doesn't have built-in support for YAML and JSON like Python does with `yaml` and `json` modules. Therefore, we will use libraries such as SnakeYAML for YAML parsing and Jackson or Gson for JSON generation.

First, add the necessary dependencies to your `pom.xml` if you're using Maven:

```xml
<dependencies>
    <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>1.29</version>
    </dependency>
    <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>2.13.0</version>
    </dependency>
</dependencies>
```

Then, here's the equivalent Java code in the package `org.real.temp` and class `Answer`:

```java
package org.real.temp;

import com.fasterxml.jackson.databind.ObjectMapper;
import org.yaml.snakeyaml.Yaml;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;

public class Answer {

    /**
     * Convert YAML format files to JSON format files
     *
     * @param yamlFile Path to the input YAML file.
     * @param jsonFile Path to the output JSON file.
     */
    public static void convertYamlToJson(String yamlFile, String jsonFile) {
        try (
                InputStream inputStream = new FileInputStream(yamlFile);
                OutputStream outputStream = new FileOutputStream(jsonFile)
        ) {
            Yaml yaml = new Yaml();
            Object obj = yaml.load(inputStream);

            ObjectMapper mapper = new ObjectMapper();
            mapper.writeValue(outputStream, obj);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Example usage
    public static void main(String[] args) {
        convertYamlToJson("input.yaml", "output.json");
    }
}
```

### Explanation:

1. **Dependencies**: We added the SnakeYAML library for YAML parsing and Jackson Databind for JSON serialization.
   
2. **Method Signature**: The method `convertYamlToJson` takes two parameters, both of type `String`, representing the paths to the input YAML file and the output JSON file.

3. **Reading YAML File**: We use `InputStream` to read the contents of the YAML file.

4. **Parsing YAML**: We create an instance of `Yaml` from the SnakeYAML library and use it to load the YAML content into an object (`Object obj`).

5. **Writing JSON File**: We use `OutputStream` to write the contents of the JSON file. We create an instance of `ObjectMapper` from the Jackson library and use it to serialize the object to JSON and write it to the output stream.

6. **Error Handling**: Any exceptions during file operations or JSON processing are caught and printed to the console.

7. **Example Usage**: A `main` method is provided to demonstrate how to call the `convertYamlToJson` method.

This Java code should provide similar functionality to your original Python code, converting YAML files to JSON files.