Certainly! Below is the equivalent TypeScript code for the provided Python function, including proper type annotations and JSDoc-style documentation comments.

### TypeScript Code

```typescript
import * as fs from 'fs';
import * as yaml from 'js-yaml';

/**
 * Converts a YAML file to a JSON file.
 * 
 * @param yamlFile - Path to the input YAML file.
 * @param jsonFile - Path to the output JSON file.
 */
function convertYamlToJson(yamlFile: string, jsonFile: string): void {
    // Read the YAML file
    const yamlData = fs.readFileSync(yamlFile, 'utf-8');
    const data = yaml.safeLoad(yamlData);

    // Write the data to a JSON file
    fs.writeFileSync(jsonFile, JSON.stringify(data, null, 4), 'utf-8');
}

// Example usage
convertYamlToJson('input.yaml', 'output.json');
```

### Explanation:

1. **Imports**:
   - `fs` is used for reading and writing files.
   - `js-yaml` is used for parsing YAML content.

2. **Function Definition**:
   - The function `convertYamlToJson` takes two parameters: `yamlFile` (path to the input YAML file) and `jsonFile` (path to the output JSON file).

3. **JSDoc Documentation**:
   - The JSDoc comment block provides a description of the function and its parameters.
   - The `@param` tags describe the parameters and their types.

4. **Reading the YAML File**:
   - `fs.readFileSync` reads the YAML file synchronously.
   - `yaml.safeLoad` parses the YAML content into a JavaScript object.

5. **Writing to the JSON File**:
   - `JSON.stringify` converts the JavaScript object to a JSON string with indentation.
   - `fs.writeFileSync` writes the JSON string to the specified JSON file.

6. **Example Usage**:
   - The function is called with example paths to demonstrate its usage.

### Full Code with JSDoc Comments

```typescript
import * as fs from 'fs';
import * as yaml from 'js-yaml';

/**
 * Converts a YAML file to a JSON file.
 * 
 * @param yamlFile - Path to the input YAML file.
 * @param jsonFile - Path to the output JSON file.
 */
function convertYamlToJson(yamlFile: string, jsonFile: string): void {
    // Read the YAML file
    const yamlData = fs.readFileSync(yamlFile, 'utf-8');
    const data = yaml.safeLoad(yamlData);

    // Write the data to a JSON file
    fs.writeFileSync(jsonFile, JSON.stringify(data, null, 4), 'utf-8');
}

// Example usage
convertYamlToJson('input.yaml', 'output.json');
```

This TypeScript code preserves the original functionality and structure of the Python code, including proper type annotations and JSDoc-style documentation comments.