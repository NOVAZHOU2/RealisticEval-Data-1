Certainly! Below is the equivalent JavaScript code that maintains the same functionality, logic, and structure as the provided Python code:

```javascript
function flattenArray(multiDimArray) {
    /**
     * Flattens a multi-dimensional array into a one-dimensional array.
     *
     * @param {Array} multiDimArray - A multi-dimensional array (nested array).
     * @returns {Array} A one-dimensional array containing all elements of the input.
     */
    let flatList = [];

    function flatten(subArray) {
        for (let item of subArray) {
            if (Array.isArray(item)) {
                flatten(item);  // Recursively flatten if the current item is an array
            } else {
                flatList.push(item);  // Append the non-array item to the flatList
            }
        }
    }

    flatten(multiDimArray);
    return flatList;
}
```

This JavaScript function `flattenArray` takes a multi-dimensional array as input and returns a one-dimensional array by recursively flattening any nested arrays it encounters. The helper function `flatten` is used to perform the recursive flattening process, similar to the Python version.