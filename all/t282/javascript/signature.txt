Certainly! Here is the equivalent JavaScript code with the function signature and comments rewritten to conform to JSDoc standards:

```javascript
/**
 * Converts a multi-dimensional array into a one-dimensional array.
 * 
 * @param {Array} multiDimArray - A multi-dimensional array (nested array).
 * @returns {Array} A one-dimensional array containing all elements of the input.
 */
function flattenArray(multiDimArray) {
    let flatList = [];

    function flatten(subArray) {
        for (let item of subArray) {
            if (Array.isArray(item)) {
                flatten(item);  // Recursively flatten if the current item is an array
            } else {
                flatList.push(item);  // Append the non-array item to the flatList
            }
        }
    }

    flatten(multiDimArray);
    return flatList;
}
```

### Explanation:
1. **JSDoc Comments**:
   - The JSDoc comment block at the beginning provides a brief description of the function's purpose.
   - It includes the `@param` tag to describe the parameter `multiDimArray`.
   - It includes the `@returns` tag to describe the return value.

2. **Function Signature**:
   - The function `flattenArray` takes a single argument `multiDimArray`.

3. **Implementation**:
   - The internal logic remains the same, using a helper function `flatten` to recursively flatten the array.

This ensures that the JavaScript code preserves the original functionality and adheres to JavaScript documentation standards.