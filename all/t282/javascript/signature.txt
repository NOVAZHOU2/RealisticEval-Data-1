Sure, here's the equivalent JavaScript function with JSDoc comments:

```javascript
/**
 * Converts a multi-dimensional array into a one-dimensional array.
 * @param {Array} multiDimArray - A multi-dimensional array (nested arrays).
 * @returns {Array} A one-dimensional array containing all elements of the input.
 */
function flattenArray(multiDimArray) {
    return multiDimArray.flat();
}
```

In this conversion:
- The `flatten_array` function is renamed to `flattenArray` to follow camelCase naming convention used in JavaScript.
- The Python type hints (`List`) are replaced with JSDoc annotations (`@param {Array}` and `@returns {Array}`) to describe the types of parameters and return values.
- The Python `list` type is equivalent to the JavaScript `Array` type.
- The Python comment block is converted to JSDoc format for better readability and standardization.