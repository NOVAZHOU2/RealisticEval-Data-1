Here's the equivalent TypeScript code for the given Python function:

```typescript
/**
 * Converts a multi-dimensional array into a one-dimensional array.
 * @param multiDimArray - A multi-dimensional array (nested array).
 * @returns A one-dimensional array containing all elements of the input.
 */
function flattenArray(multiDimArray: any[]): any[] {
    return multiDimArray.reduce((acc, val) => 
        Array.isArray(val) ? acc.concat(flattenArray(val)) : acc.concat(val), []);
}
```

In this TypeScript code:

- The function `flattenArray` has been defined with a parameter `multiDimArray` of type `any[]` to represent the multi-dimensional array.
- The JSDoc comment block is used to provide documentation similar to the Python docstring.
- The `reduce` method is used to flatten the array, checking if each element is an array itself and recursively flattening it if necessary.