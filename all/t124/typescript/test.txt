Hereâ€™s your JavaScript Jest test case converted to TypeScript:

```typescript
describe('shuffle function tests', () => {
    test('shuffles an array of numbers', () => {
        const array: number[] = [1, 2, 3, 4, 5];
        const shuffledArray = shuffle([...array]);
        expect(shuffledArray.length).toEqual(array.length);
        expect(shuffledArray.every(item => array.includes(item))).toBeTruthy();
        expect(new Set(shuffledArray).size).toEqual(new Set(array).size); // Ensure no duplicates
    });

    test('shuffles an array of strings', () => {
        const array: string[] = ["apple", "banana", "cherry", "date", "elderberry"];
        const shuffledArray = shuffle([...array]);
        expect(shuffledArray.length).toEqual(array.length);
        expect(shuffledArray.every(item => array.includes(item))).toBeTruthy();
    });

    test('shuffles an array with duplicate elements', () => {
        const array: number[] = [1, 1, 2, 2, 3, 3];
        const shuffledArray = shuffle([...array]);
        expect(shuffledArray.length).toEqual(array.length);
        expect(shuffledArray.every(item => array.includes(item))).toBeTruthy();
    });

    test('shuffles an array with a single element', () => {
        const array: number[] = [42];
        const shuffledArray = shuffle([...array]);
        expect(shuffledArray).toEqual(array);
    });

    test('shuffles an empty array', () => {
        const array: any[] = [];
        const shuffledArray = shuffle([...array]);
        expect(shuffledArray.length).toEqual(0);
    });
});
```

### Changes Made:
1. **Type Annotations**: Added type annotations for the `array` variables to specify the expected types (e.g., `number[]`, `string[]`).
2. **Generic Type for Empty Array**: Used `any[]` for the empty array test to accommodate any type of elements if needed.

This TypeScript version maintains the same structure and logic as the original JavaScript test cases!