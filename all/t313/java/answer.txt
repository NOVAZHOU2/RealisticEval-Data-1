Sure! Here's how you can convert that JavaScript function into Java:

```java
import org.apache.commons.lang3.StringUtils;

public class BackgroundDetector {
    private static final double DARKNESS_THRESHOLD = 0.2; // Adjust as needed
    private static final double BRIGHTNESS_THRESHOLD = 0.8; // Adjust as needed

    /**
     * Detects the light or dark state of the background element of a major element of a web page and returns the corresponding description string
     *
     * @param backgroundColor The background color in RGB format (e.g., "#FFFFFF")
     * @return Returns "dark" if the background is too dark, "bright" if it is too bright, or "normal" if it is neither.
     */
    public static String isBackgroundTooDarkOrBright(String backgroundColor) {
        if (StringUtils.isEmpty(backgroundColor)) {
            return "normal"; // Default value if input is empty or null
        }

        int red = Integer.parseInt(backgroundColor.substring(1, 3), 16);
        int green = Integer.parseInt(backgroundColor.substring(3, 5), 16);
        int blue = Integer.parseInt(backgroundColor.substring(5, 7), 16);

        double luminance = calculateLuminance(red, green, blue);

        if (luminance <= DARKNESS_THRESHOLD) {
            return "dark";
        } else if (luminance >= BRIGHTNESS_THRESHOLD) {
            return "bright";
        } else {
            return "normal";
        }
    }

    /**
     * Calculates the relative luminance of an sRGB color
     *
     * @param r Red component (0-255)
     * @param g Green component (0-255)
     * @param b Blue component (0-255)
     * @return Relative luminance value (0.0-1.0)
     */
    private static double calculateLuminance(int r, int g, int b) {
        double[] rgb = new double[]{r / 255.0, g / 255.0, b / 255.0};

        for (int i = 0; i < 3; i++) {
            if (rgb[i] <= 0.03928) {
                rgb[i] = rgb[i] / 12.92;
            } else {
                rgb[i] = Math.pow((rgb[i] + 0.055) / 1.055, 2.4);
            }
        }

        return 0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2];
    }

    public static void main(String[] args) {
        String backgroundColor = "#FFFFFF"; // Example usage
        System.out.println(isBackgroundTooDarkOrBright(backgroundColor));
    }
}
```

### Explanation:
1. **Thresholds**: The `DARKNESS_THRESHOLD` and `BRIGHTNESS_THRESHOLD` define what constitutes "dark" and "bright". You can adjust these values based on your requirements.
2. **Color Parsing**: The function parses the hex color string to extract the red, green, and blue components.
3. **Luminance Calculation**: The `calculateLuminance` method computes the relative luminance using the formula provided by W3C for sRGB colors.
4. **Return Value**: Based on the calculated luminance, the function returns "dark", "bright", or "normal".

This Java code should provide similar functionality to your original JavaScript function.