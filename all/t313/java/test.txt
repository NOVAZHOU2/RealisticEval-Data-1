Here's how you can translate the provided Jest test cases into JUnit 4 test cases in Java. This example assumes that you have the `isBackgroundTooDarkOrBright` method implemented in the `Tester` class:

```java
package org.real.temp;

import org.junit.Before;
import org.junit.After;
import org.junit.Test;
import java.awt.Color;

import static org.junit.Assert.assertEquals;

public class Tester {

    private Color backgroundColor;

    @Before
    public void setUp() {
        // Initialize or reset background color before each test
        backgroundColor = null;
    }

    @After
    public void tearDown() {
        // Clean up after each test if needed
        backgroundColor = null;
    }

    @Test
    public void shouldReturnDarkForDarkBackgroundColor() {
        // Set a dark background color
        backgroundColor = new Color(30, 30, 30);
        String result = isBackgroundTooDarkOrBright(backgroundColor);
        assertEquals("dark", result);
    }

    @Test
    public void shouldReturnBrightForBrightBackgroundColor() {
        // Set a bright background color
        backgroundColor = new Color(250, 250, 250);
        String result = isBackgroundTooDarkOrBright(backgroundColor);
        assertEquals("bright", result);
    }

    @Test
    public void shouldReturnNormalForNormalBrightness() {
        // Set a background color with normal brightness
        backgroundColor = new Color(150, 150, 150);
        String result = isBackgroundTooDarkOrBright(backgroundColor);
        assertEquals("normal", result);
    }

    @Test
    public void shouldHandleBrightColorWithHighRedComponent() {
        // Set a bright color with a high red component
        backgroundColor = new Color(255, 100, 100);
        String result = isBackgroundTooDarkOrBright(backgroundColor);
        assertEquals("normal", result);
    }

    @Test
    public void shouldHandleDarkColorWithLowGreenAndBlueComponents() {
        // Set a dark color with low green and blue components
        backgroundColor = new Color(10, 10, 100);
        String result = isBackgroundTooDarkOrBright(backgroundColor);
        assertEquals("dark", result);
    }

    // Example implementation of the method for testing
    public String isBackgroundTooDarkOrBright(Color backgroundColor) {
        int r = backgroundColor.getRed();
        int g = backgroundColor.getGreen();
        int b = backgroundColor.getBlue();
        double brightness = (r * 299 + g * 587 + b * 114) / 1000.0;

        final int darkThreshold = 125;
        final int brightThreshold = 200;

        if (brightness < darkThreshold) {
            return "dark";
        } else if (brightness > brightThreshold) {
            return "bright";
        } else {
            return "normal";
        }
    }
}
```

This Java code structure maintains the test cases and their logic while adapting to JUnit's format. Each test case checks the brightness of a specified `Color` object. Would you like to delve into any specific area further?