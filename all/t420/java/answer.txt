Sure, here's how you can translate the Python function `get_min_distance` into Java. The Java code will be placed inside the `Answer` class within the `org.real.temp` package.

```java
package org.real.temp;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class Answer {

    /**
     * Find the minimum distance between two specified words (word1 and word2) from the file and return in which line the distance occurred.
     *
     * @param filePath The path to the file.
     * @param word1 The first word.
     * @param word2 The second word.
     * @return A string containing the minimum distance and the line number where it occurred.
     */
    public static String getMinDistance(String filePath, String word1, String word2) {
        int minDistance = Integer.MAX_VALUE;
        int lineNumber = -1;
        int currentLine = 0;

        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = br.readLine()) != null) {
                currentLine++;
                String[] words = line.split("\\s+");
                for (int i = 0; i < words.length; i++) {
                    if (words[i].equalsIgnoreCase(word1)) {
                        for (int j = 0; j < words.length; j++) {
                            if (words[j].equalsIgnoreCase(word2) && Math.abs(i - j) < minDistance) {
                                minDistance = Math.abs(i - j);
                                lineNumber = currentLine;
                            }
                        }
                    }
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        return "Minimum Distance: " + minDistance + ", Line Number: " + lineNumber;
    }

    public static void main(String[] args) {
        // Example usage
        String filePath = "path/to/your/file.txt";
        String word1 = "example";
        String word2 = "sample";
        System.out.println(getMinDistance(filePath, word1, word2));
    }
}
```

### Explanation:
- **Package Declaration**: The `package org.real.temp;` declaration specifies the package name.
- **Class Definition**: The `public class Answer {` defines the class `Answer`.
- **Method Signature**: The `public static String getMinDistance(String filePath, String word1, String word2)` method matches the Python function signature.
- **File Reading**: The `BufferedReader` is used to read the file line by line.
- **String Splitting**: Each line is split into words using `split("\\s+")` to handle multiple spaces or tabs.
- **Word Matching and Distance Calculation**: Nested loops are used to find occurrences of `word1` and `word2`, and the minimum distance is calculated.
- **Exception Handling**: `IOException` is caught and handled appropriately.
- **Main Method**: An example usage of the `getMinDistance` method is provided in the `main` method.

Make sure to replace `"path/to/your/file.txt"` with the actual path to your text file when testing the code.