Here is how you can convert your Python function into TypeScript:

```typescript
function getMinDistance(filePath: string, word1: string, word2: string): {distance: number, line: number} {
    let fs = require('fs');
    let readline = require('readline');

    let rl = readline.createInterface({
        input: fs.createReadStream(filePath),
        crlfDelay: Infinity
    });

    let minDist = Number.MAX_SAFE_INTEGER;
    let lineNum = 0;

    rl.on('line', (line: string) => {
        let words = line.split(/\s+/);
        for(let i=0; i<words.length; i++) {
            if(words[i] === word1 || words[i] === word2) {
                for(let j=i+1; j<words.length; j++) {
                    if((words[j] === word1 && words[i] === word2) || (words[j] === word2 && words[i] === word1)) {
                        let dist = Math.abs(j-i);
                        if(dist < minDist) {
                            minDist = dist;
                            lineNum = rl.count;
                        }
                    }
                }
            }
        }
    });

    return {distance: minDist, line: lineNum};
}
```
This TypeScript function does the same thing as your Python function. It reads a file line by line, splits each line into words, then checks for the presence of `word1` and `word2`. If both words are found in consecutive positions, it calculates the distance between them and updates the minimum distance and line number if the current distance is smaller.

Please note that the TypeScript version uses Node.js's built-in modules (`fs` and `readline`) to read files and process lines, respectively. Make sure you have Node.js installed on your system before running this script.