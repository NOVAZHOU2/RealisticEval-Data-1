Certainly! Below is the equivalent JavaScript code for the provided Python code, maintaining the same functionality, logic, and structure:

```javascript
function readFileAsSequences(filePath) {
    // Read the file and convert each line into an array of words.
    const fs = require('fs');
    const fileContent = fs.readFileSync(filePath, 'utf8');
    const lines = fileContent.split('\n');
    return lines.map(line => line.trim().split(/\s+/));
}

function findClosestWordIndices(sequence, word1, word2) {
    // Find the indices of two words in a sequence and calculate their closest distances.
    let word1Indices = [];
    let word2Indices = [];
    let minDistance = Infinity;

    // Gather indices for both words
    for (let index = 0; index < sequence.length; index++) {
        const word = sequence[index];
        if (word === word1) {
            word1Indices.push(index);
        } else if (word === word2) {
            word2Indices.push(index);
        }
    }

    // Calculate the minimum distance between all pairs of indices
    for (const index1 of word1Indices) {
        for (const index2 of word2Indices) {
            const distance = Math.abs(index1 - index2);
            if (distance < minDistance) {
                minDistance = distance;
            }
        }
    }

    return minDistance;
}

function getMinDistance(filePath, word1, word2) {
    // Determine the minimum distance between two words in any line of a file.
    const sequences = readFileAsSequences(filePath);
    let minDistance = Infinity;
    let minSeqNum = null;

    for (let i = 0; i < sequences.length; i++) {
        const seq = sequences[i];
        const distance = findClosestWordIndices(seq, word1, word2);
        if (distance < minDistance) {
            minDistance = distance;
            minSeqNum = i;
        }
    }

    return minDistance !== Infinity ? [minSeqNum, minDistance] : [null, null];
}
```

### Explanation:
1. **readFileAsSequences**: This function reads the content of a file specified by `filePath`, splits it into lines, and then converts each line into an array of words using the `split` method with a regular expression to handle multiple spaces.

2. **findClosestWordIndices**: This function iterates through the given sequence to find the indices of `word1` and `word2`. It then calculates the minimum distance between any pair of these indices.

3. **getMinDistance**: This function calls `readFileAsSequences` to get the sequences from the file, and then uses `findClosestWordIndices` to determine the minimum distance between the two words across all sequences. It returns the index of the sequence and the minimum distance.

### Note:
- The `fs` module is required for reading files synchronously in Node.js. If you are using this in a browser environment, you will need to modify the file reading part accordingly.