Sure! Here is the JavaScript equivalent of your Python function `get_min_distance`:

```javascript
function getMinDistance(filePath, word1, word2) {
    /**
     * Find the minimum distance between two specified words (word1 and word2) from the file and return in which line the distance occurred
     *
     * @param {string} filePath - The path to the file.
     * @param {string} word1 - The first word to find.
     * @param {string} word2 - The second word to find.
     * @returns {Object|null} - An object containing the minimum distance and the line number where it occurred, or null if either word is not found.
     */
    
    const fs = require('fs');
    const readline = require('readline');

    let minDistance = Infinity;
    let lineWithMinDistance = null;

    const rl = readline.createInterface({
        input: fs.createReadStream(filePath),
        crlfDelay: Infinity
    });

    let lineNumber = 0;
    let indexWord1 = -1;
    let indexWord2 = -1;

    rl.on('line', (line) => {
        lineNumber++;
        const words = line.split(/\s+/);

        for (let i = 0; i < words.length; i++) {
            if (words[i] === word1) {
                indexWord1 = i;
            }
            if (words[i] === word2) {
                indexWord2 = i;
            }

            if (indexWord1 !== -1 && indexWord2 !== -1) {
                const distance = Math.abs(indexWord1 - indexWord2);
                if (distance < minDistance) {
                    minDistance = distance;
                    lineWithMinDistance = lineNumber;
                }
            }
        }
    });

    rl.on('close', () => {
        if (minDistance === Infinity) {
            console.log(`Either "${word1}" or "${word2}" was not found in the file.`);
            return null;
        } else {
            console.log(`Minimum distance between "${word1}" and "${word2}" is ${minDistance} at line ${lineWithMinDistance}.`);
            return { minDistance, lineWithMinDistance };
        }
    });
}

// Example usage:
const filePath = 'path/to/your/file.txt';
const word1 = 'example';
const word2 = 'sample';

getMinDistance(filePath, word1, word2);
```

This JavaScript function reads a file line by line using Node.js's `fs` and `readline` modules. It keeps track of the positions of `word1` and `word2` and calculates the distance between them. If both words are found, it updates the minimum distance and the corresponding line number. Finally, it returns an object containing the minimum distance and the line number, or logs a message if either word is not found.