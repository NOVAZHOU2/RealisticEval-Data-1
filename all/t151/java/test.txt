Hereâ€™s the equivalent JUnit 4 test case for your TypeScript Jest test code in Java:

```java
package org.real.temp;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class Tester {

    @Test
    public void testRgbToHslRed() {
        HSL result = ColorConverter.rgbToHsl(255, 0, 0);
        assertEquals(0, result.h);
        assertEquals(100, result.s);
        assertEquals(50, result.l);
    }

    @Test
    public void testRgbToHslMiddleGray() {
        HSL result = ColorConverter.rgbToHsl(128, 128, 128);
        assertEquals(0, result.h);
        assertEquals(0, result.s);
        assertEquals(50, result.l);
    }

    @Test
    public void testRgbToHslWhite() {
        HSL result = ColorConverter.rgbToHsl(255, 255, 255);
        assertEquals(0, result.h);
        assertEquals(0, result.s);
        assertEquals(100, result.l);
    }

    @Test
    public void testRgbToHslBlack() {
        HSL result = ColorConverter.rgbToHsl(0, 0, 0);
        assertEquals(0, result.h);
        assertEquals(0, result.s);
        assertEquals(0, result.l);
    }

    @Test
    public void testRgbToHslVibrantGreen() {
        HSL result = ColorConverter.rgbToHsl(0, 255, 0);
        assertEquals(120, result.h);
        assertEquals(100, result.s);
        assertEquals(50, result.l);
    }

    @Test
    public void testRgbToHslDeepBlue() {
        HSL result = ColorConverter.rgbToHsl(0, 0, 255);
        assertEquals(240, result.h);
        assertEquals(100, result.s);
        assertEquals(50, result.l);
    }
}
```

### Notes:
- The `HSL` class is assumed to be defined as previously shown.
- Each test case uses `assertEquals` to check that the expected HSL values match the actual values returned by the `rgbToHsl` method.
- JUnit 4 is used, which requires you to import necessary classes for annotations and assertions.