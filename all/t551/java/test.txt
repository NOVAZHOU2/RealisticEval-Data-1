Certainly! Hereâ€™s the equivalent Java test class using JUnit for the provided Python unittest class. The Java test class will be placed in the package `org.real.temp` and named `Tester`.

### Java Code

```java
package org.real.temp;

import org.junit.Test;
import static org.junit.Assert.assertArrayEquals;

/**
 * Test class for the getMidsFromEdges method.
 */
public class Tester {

    /**
     * Test with a standard range of edges.
     */
    @Test
    public void testBasicCase() {
        double[] edges = {1, 2, 3, 4};
        double[] expectedMids = {1.5, 2.5, 3.5};
        assertArrayEquals(expectedMids, getMidsFromEdges(edges), 0.001);
    }

    /**
     * Test with two edges (single interval).
     */
    @Test
    public void testSingleInterval() {
        double[] edges = {5, 10};
        double[] expectedMids = {7.5};
        assertArrayEquals(expectedMids, getMidsFromEdges(edges), 0.001);
    }

    /**
     * Test with multiple intervals.
     */
    @Test
    public void testMultipleIntervals() {
        double[] edges = {0, 1, 2, 3, 4, 5};
        double[] expectedMids = {0.5, 1.5, 2.5, 3.5, 4.5};
        assertArrayEquals(expectedMids, getMidsFromEdges(edges), 0.001);
    }

    /**
     * Test with negative edges.
     */
    @Test
    public void testNegativeEdges() {
        double[] edges = {-5, -3, -1, 1};
        double[] expectedMids = {-4.0, -2.0, 0.0};
        assertArrayEquals(expectedMids, getMidsFromEdges(edges), 0.001);
    }

    /**
     * Test with edges including zero.
     */
    @Test
    public void testZeroEdges() {
        double[] edges = {0, 1, 2};
        double[] expectedMids = {0.5, 1.5};
        assertArrayEquals(expectedMids, getMidsFromEdges(edges), 0.001);
    }

    /**
     * Test with floating-point edges.
     */
    @Test
    public void testFloatEdges() {
        double[] edges = {0.0, 1.5, 3.0};
        double[] expectedMids = {0.75, 2.25};
        assertArrayEquals(expectedMids, getMidsFromEdges(edges), 0.001);
    }

    /**
     * Test with an empty array.
     */
    @Test
    public void testEmptyArray() {
        double[] edges = {};
        double[] expectedMids = {};
        assertArrayEquals(expectedMids, getMidsFromEdges(edges), 0.001);
    }

    // Method to calculate midpoints from edges
    private double[] getMidsFromEdges(double[] edges) {
        if (edges == null || edges.length < 2) {
            throw new IllegalArgumentException("Edges array must have at least two elements.");
        }

        double[] mids = new double[edges.length - 1];
        for (int i = 0; i < edges.length - 1; i++) {
            mids[i] = (edges[i] + edges[i + 1]) / 2;
        }

        return mids;
    }
}
```

### Explanation:
1. **Package and Class Declaration**:
   - The package declaration `package org.real.temp;` ensures the code is organized under the specified package.
   - The class declaration `public class Tester` defines the test class name.

2. **JUnit Annotations**:
   - Each test method is annotated with `@Test` to indicate that it is a test case.

3. **JUnit Assertions**:
   - The `assertArrayEquals` method is used to compare arrays of doubles. The third parameter `0.001` is the delta value for floating-point comparisons.

4. **Test Methods**:
   - Each test method corresponds to a specific test case from the Python unittest class.
   - The test methods are named similarly to the Python test methods for clarity.

5. **Helper Method**:
   - The `getMidsFromEdges` method is defined within the test class to ensure it is accessible for testing. This method performs the same functionality as the Python function.

This Java code preserves the functionality and logic of the original Python unittest class while adhering to JUnit's syntax and conventions.