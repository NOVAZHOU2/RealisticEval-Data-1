Here is the equivalent TypeScript code:

```typescript
function getMidsFromEdges(edges: number[]): number[] {
    /**
     * Calculate the midpoints from a given array of edges.
     * For example:
     *      input: [0, 1, 2]
     *      output: [0.5, 1.5]
     *
     * @param {number[]} edges - An array of edge values.
     * @returns {number[]} An array of midpoints calculated from the edges.
     */
    
    return edges.map((edge, index) => 
        index === edges.length - 1 ? undefined : (edges[index] + edges[index + 1]) / 2);
}
```

Note that in TypeScript, arrays do not have built-in methods like `map` found in JavaScript/Python. Therefore, we use the `.map()` function which applies a function to each item in an array and returns a new array with the results. Also, TypeScript does not have a native `undefined` value for array indices, so if you want to indicate no next element, it's common to return `undefined`. 

Please adjust this code according to your specific needs or constraints.