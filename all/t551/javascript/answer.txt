Here is how you can write the equivalent JavaScript code using the built-in `Array` methods and the `map` function:

```javascript
function getMidsFromEdges(edges) {
    /*
    Calculate the midpoints from a given array of edges.
    For example:
        input: [0, 1, 2]
        output: [0.5, 1.5]

    Args:
        edges (Array): An array of edge values.

    Returns:
        Array: An array of midpoints calculated from the edges.
    */
    
    return edges.map((edge, index) => {
        if(index === edges.length - 1){
            return null;
        }
        return (edges[index] + edges[index+1]) / 2;
    });
}
```
Please note that in the original Python function, there is no check for the last element in the array, so I've added it in the JavaScript version to avoid errors when trying to access an undefined index. The returned array will have `null` at the end since there's no next element after the last one.