Sure! Below is the equivalent JavaScript code that maintains the same functionality, logic, and structure as the provided Python code:

```javascript
function getMidsFromEdges(edges) {
    /**
     * Calculate the midpoints from a given array of edges.
     *
     * @param {Array} edges - An array of edge values.
     * @returns {Array} - An array of midpoints calculated from the edges.
     */
    // Ensure edges is an array for consistency
    edges = Array.from(edges);

    // Calculate midpoints using array operations
    const mids = edges.slice(0, -1).map((edge, index) => {
        return (edge + edges[index + 1]) / 2;
    });

    return mids;
}
```

### Explanation:
1. **Function Definition**: The function `getMidsFromEdges` is defined with a docstring that describes its purpose, arguments, and return value.
2. **Input Consistency**: The input `edges` is converted to an array using `Array.from()` to ensure it is an array.
3. **Midpoint Calculation**:
   - `edges.slice(0, -1)` creates a new array excluding the last element.
   - `map` is used to iterate over this array and calculate the midpoint between each pair of adjacent elements.
4. **Return Value**: The function returns the array of midpoints.

This JavaScript code closely mirrors the functionality and logic of the original Python code.