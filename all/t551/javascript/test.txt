Certainly! Below is the equivalent Jest test suite for the given Python unittest class. The goal is to maintain the same functionality and logic while adapting to Jest's syntax and assertion methods.

### Python Code:
```python
import unittest
import numpy as np

class TestGetMidsFromEdges(unittest.TestCase):

    def test_basic_case(self):
        """Test with a standard range of edges."""
        edges = np.array([1, 2, 3, 4])
        expected_mids = np.array([1.5, 2.5, 3.5])
        np.testing.assert_array_equal(get_mids_from_edges(edges), expected_mids)

    def test_single_interval(self):
        """Test with two edges (single interval)."""
        edges = np.array([5, 10])
        expected_mids = np.array([7.5])
        np.testing.assert_array_equal(get_mids_from_edges(edges), expected_mids)

    def test_multiple_intervals(self):
        """Test with multiple intervals."""
        edges = np.array([0, 1, 2, 3, 4, 5])
        expected_mids = np.array([0.5, 1.5, 2.5, 3.5, 4.5])
        np.testing.assert_array_equal(get_mids_from_edges(edges), expected_mids)

    def test_negative_edges(self):
        """Test with negative edges."""
        edges = np.array([-5, -3, -1, 1])
        expected_mids = np.array([-4.0, -2.0, 0.0])
        np.testing.assert_array_equal(get_mids_from_edges(edges), expected_mids)

    def test_zero_edges(self):
        """Test with edges including zero."""
        edges = np.array([0, 1, 2])
        expected_mids = np.array([0.5, 1.5])
        np.testing.assert_array_equal(get_mids_from_edges(edges), expected_mids)

    def test_float_edges(self):
        """Test with floating-point edges."""
        edges = np.array([0.0, 1.5, 3.0])
        expected_mids = np.array([0.75, 2.25])
        np.testing.assert_array_equal(get_mids_from_edges(edges), expected_mids)

    def test_empty_array(self):
        """Test with an empty array."""
        edges = np.array([])
        expected_mids = np.array([])
        np.testing.assert_array_equal(get_mids_from_edges(edges), expected_mids)
```

### Equivalent Jest Test Suite:

```javascript
const expect = require('expect'); // Import expect from Jest

describe('TestGetMidsFromEdges', () => {
    const getMidsFromEdges = require('./getMidsFromEdges'); // Import the function to test

    describe('test_basic_case', () => {
        it('should handle a standard range of edges', () => {
            const edges = [1, 2, 3, 4];
            const expectedMids = [1.5, 2.5, 3.5];
            expect(getMidsFromEdges(edges)).toEqual(expectedMids);
        });
    });

    describe('test_single_interval', () => {
        it('should handle two edges (single interval)', () => {
            const edges = [5, 10];
            const expectedMids = [7.5];
            expect(getMidsFromEdges(edges)).toEqual(expectedMids);
        });
    });

    describe('test_multiple_intervals', () => {
        it('should handle multiple intervals', () => {
            const edges = [0, 1, 2, 3, 4, 5];
            const expectedMids = [0.5, 1.5, 2.5, 3.5, 4.5];
            expect(getMidsFromEdges(edges)).toEqual(expectedMids);
        });
    });

    describe('test_negative_edges', () => {
        it('should handle negative edges', () => {
            const edges = [-5, -3, -1, 1];
            const expectedMids = [-4.0, -2.0, 0.0];
            expect(getMidsFromEdges(edges)).toEqual(expectedMids);
        });
    });

    describe('test_zero_edges', () => {
        it('should handle edges including zero', () => {
            const edges = [0, 1, 2];
            const expectedMids = [0.5, 1.5];
            expect(getMidsFromEdges(edges)).toEqual(expectedMids);
        });
    });

    describe('test_float_edges', () => {
        it('should handle floating-point edges', () => {
            const edges = [0.0, 1.5, 3.0];
            const expectedMids = [0.75, 2.25];
            expect(getMidsFromEdges(edges)).toEqual(expectedMids);
        });
    });

    describe('test_empty_array', () => {
        it('should handle an empty array', () => {
            const edges = [];
            const expectedMids = [];
            expect(getMidsFromEdges(edges)).toEqual(expectedMids);
        });
    });
});
```

### Explanation:
1. **Import Statements**:
   - `const expect = require('expect');` imports the `expect` function from Jest.
   - `const getMidsFromEdges = require('./getMidsFromEdges');` imports the function to be tested.

2. **Describe Blocks**:
   - Each `describe` block groups related tests together.
   - Each `it` block defines a specific test case with a descriptive message.

3. **Assertions**:
   - `expect(getMidsFromEdges(edges)).toEqual(expectedMids);` is used to assert that the result of `getMidsFromEdges` matches the expected midpoints.
   - `toEqual` is used to perform deep equality checks, similar to `np.testing.assert_array_equal`.

This Jest test suite maintains the same functionality and logic as the original Python unittest class, ensuring that all test cases are covered and assertions are appropriately mapped.