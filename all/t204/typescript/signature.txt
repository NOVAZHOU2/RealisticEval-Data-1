Hereâ€™s the C++ function signature converted into TypeScript, along with the comments adapted to TypeScript style:

```typescript
/**
 * Split a string into multiple substrings based on spaces and return an array containing these substrings.
 *
 * @param str The input string to be split into words.
 * @returns An array of strings, each representing a word from the input string. Returns an empty array if the input string is empty or contains only spaces.
 */
function splitString(str: string): string[] {
    // Implementation goes here
}
```

### Explanation:
- **Function Declaration**: The C++ function signature is transformed into a TypeScript function signature.
- **Type Annotations**: The parameter type is specified as `string`, and the return type is specified as `string[]` (array of strings).
- **Comments**: The C++ comments are converted into JSDoc format, which is commonly used in TypeScript for documentation.
- **Memory Management**: TypeScript handles memory management automatically, so there's no need for manual memory management as in C++.