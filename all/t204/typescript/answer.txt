Hereâ€™s the C++ code translated into TypeScript, ensuring that the logic and functionality remain consistent while adapting to TypeScript conventions:

```typescript
function splitString(str: string): string[] {
    const result: string[] = [];
    const words = str.split(/\s+/); // Split by whitespace

    for (const word of words) {
        if (word) { // Avoid pushing empty strings
            result.push(word);
        }
    }

    return result;
}
```

### Explanation:
- **Function Definition**: TypeScript uses `function` for defining functions, similar to C++.
- **Type Annotations**: Added type annotations for the parameter and return type.
- **String Splitting**: Used `split(/\s+/)` to split the string by whitespace, which mimics the behavior of `istringstream` in C++.
- **Avoiding Empty Strings**: A check to avoid adding empty strings to the result array, similar to how `iss >> word` skips whitespace in C++.