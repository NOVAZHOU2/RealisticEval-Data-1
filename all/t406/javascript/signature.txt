Certainly! I’ll convert the given Python class into equivalent JavaScript code, including the function signatures and comments rewritten in JSDoc format. Here’s the JavaScript version:

```javascript
class Colors {
  /**
   * Returns the given text in red color.
   * @param {string} text - The text to be colored.
   * @returns {string} - The colored text.
   */
  static red(text) {
    // Implementation goes here
    pass;
  }

  /**
   * Returns the given text in green color.
   * @param {string} text - The text to be colored.
   * @returns {string} - The colored text.
   */
  static green(text) {
    // Implementation goes here
    pass;
  }

  /**
   * Returns the given text in blue color.
   * @param {string} text - The text to be colored.
   * @returns {string} - The colored text.
   */
  static blue(text) {
    // Implementation goes here
    pass;
  }

  /**
   * Returns the given text in yellow color.
   * @param {string} text - The text to be colored.
   * @returns {string} - The colored text.
   */
  static yellow(text) {
    // Implementation goes here
    pass;
  }

  /**
   * Returns the given text in magenta color.
   * @param {string} text - The text to be colored.
   * @returns {string} - The colored text.
   */
  static magenta(text) {
    // Implementation goes here
    pass;
  }

  /**
   * Returns the given text in cyan color.
   * @param {string} text - The text to be colored.
   * @returns {string} - The colored text.
   */
  static cyan(text) {
    // Implementation goes here
    pass;
  }
}
```

### Explanation:
1. **Class Definition**: The `class` keyword is used to define a class in JavaScript.
2. **Static Methods**: The `static` keyword is used to define static methods within the class.
3. **JSDoc Comments**:
   - Each method is documented using JSDoc comments.
   - The `@param` tag specifies the parameter type and description.
   - The `@returns` tag specifies the return type and description.
4. **Implementation Placeholder**: The `pass;` statement is a placeholder indicating where the implementation should go.

This JavaScript code preserves the structure and purpose of the original Python code, including the function signatures and comments rewritten in JSDoc format.