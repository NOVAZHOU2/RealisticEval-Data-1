Sure! I'll convert the given Python code into equivalent JavaScript code while maintaining the functionality, logic, and structure. The Python code defines a `Colors` class with static methods for coloring text using ANSI escape codes.

Hereâ€™s the equivalent JavaScript code:

```javascript
class Colors {
  static red(text) {
    /** text in red color */
    return `\x1b[91m${text}\x1b[0m`;
  }

  static green(text) {
    /** text in green color */
    return `\x1b[92m${text}\x1b[0m`;
  }

  static blue(text) {
    /** text in blue color */
    return `\x1b[94m${text}\x1b[0m`;
  }

  static yellow(text) {
    /** text in yellow color */
    return `\x1b[93m${text}\x1b[0m`;
  }

  static magenta(text) {
    /** text in magenta color */
    return `\x1b[95m${text}\x1b[0m`;
  }

  static cyan(text) {
    /** text in cyan color */
    return `\x1b[96m${text}\x1b[0m`;
  }
}
```

### Explanation:
- In JavaScript, we use backticks (`\x1b`) to represent escape sequences.
- The `static` keyword is used to define static methods in JavaScript classes.
- The `@staticmethod` decorator in Python is equivalent to defining static methods in JavaScript.
- The ANSI escape codes are represented using `\x1b` followed by `[code]m` where `code` is the specific color code.

This JavaScript code will function similarly to the provided Python code, allowing you to color text in various colors using ANSI escape codes.