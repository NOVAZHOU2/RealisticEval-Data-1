Sure! Below is the equivalent TypeScript code for the provided Python class `Colors`.

```typescript
class Colors {
    static red(text: string): string {
        // Implement the logic to return text in red color
        return `\x1b[31m${text}\x1b[0m`;
    }

    static green(text: string): string {
        // Implement the logic to return text in green color
        return `\x1b[32m${text}\x1b[0m`;
    }

    static blue(text: string): string {
        // Implement the logic to return text in blue color
        return `\x1b[34m${text}\x1b[0m`;
    }

    static yellow(text: string): string {
        // Implement the logic to return text in yellow color
        return `\x1b[33m${text}\x1b[0m`;
    }

    static magenta(text: string): string {
        // Implement the logic to return text in magenta color
        return `\x1b[35m${text}\x1b[0m`;
    }

    static cyan(text: string): string {
        // Implement the logic to return text in cyan color
        return `\x1b[36m${text}\x1b[0m`;
    }
}
```

In this TypeScript code, each method (`red`, `green`, etc.) takes a string input and returns a string with the specified ANSI escape codes to change the text color in the terminal. The `\x1b[0m` at the end resets the color back to default.

To use these methods, you can simply call them like so:

```typescript
console.log(Colors.red("This is red text"));
console.log(Colors.green("This is green text"));
console.log(Colors.blue("This is blue text"));
console.log(Colors.yellow("This is yellow text"));
console.log(Colors.magenta("This is magenta text"));
console.log(Colors.cyan("This is cyan text"));
```