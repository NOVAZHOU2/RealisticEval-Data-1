Certainly! Below is the Java code equivalent to the provided Python code, including appropriate Java-style comments and method signatures. The Python function `create_rot_matrix` is translated into a Java method, and the Python type annotations are converted to Java types.

```java
package org.real.temp;

/**
 * Class to create rotation matrices.
 */
public class Answer {

    /**
     * Creates a pose matrix representing a rotation about a given axis.
     *
     * @param angleDeg the rotation angle in degrees
     * @param axis the axis to rotate about, must be one of 'X', 'Y', or 'Z'
     * @return a 4x4 pose matrix representing the rotation
     */
    public static double[][] createRotationMatrix(double angleDeg, String axis) {
        // Convert angle from degrees to radians
        double angleRad = Math.toRadians(angleDeg);

        // Define the rotation matrix based on the specified axis
        if ("X".equalsIgnoreCase(axis)) {
            return new double[][]{
                {1, 0, 0, 0},
                {0, Math.cos(angleRad), -Math.sin(angleRad), 0},
                {0, Math.sin(angleRad), Math.cos(angleRad), 0},
                {0, 0, 0, 1}
            };
        } else if ("Y".equalsIgnoreCase(axis)) {
            return new double[][]{
                {Math.cos(angleRad), 0, Math.sin(angleRad), 0},
                {0, 1, 0, 0},
                {-Math.sin(angleRad), 0, Math.cos(angleRad), 0},
                {0, 0, 0, 1}
            };
        } else if ("Z".equalsIgnoreCase(axis)) {
            return new double[][]{
                {Math.cos(angleRad), -Math.sin(angleRad), 0, 0},
                {Math.sin(angleRad), Math.cos(angleRad), 0, 0},
                {0, 0, 1, 0},
                {0, 0, 0, 1}
            };
        } else {
            throw new IllegalArgumentException("Invalid axis. Must be one of 'X', 'Y', or 'Z'.");
        }
    }

    public static void main(String[] args) {
        double[][] rotationMatrix = createRotationMatrix(45, "X");
        for (double[] row : rotationMatrix) {
            System.out.println(Arrays.toString(row));
        }
    }
}
```

### Explanation:
1. **Package and Class Definition**:
   - The Java code starts with the package definition `package org.real.temp;`.
   - The class `Answer` is defined within this package.

2. **Javadoc Comments**:
   - The method `createRotationMatrix` includes a detailed Javadoc comment block describing the method, its parameters, and its return value.

3. **Method Signature**:
   - The method `createRotationMatrix` is defined with the signature `public static double[][] createRotationMatrix(double angleDeg, String axis)`.

4. **Type Conversions**:
   - The Python type `numpy.ndarray` is translated to a 2D array of `double` in Java (`double[][]`).

5. **Trigonometric Calculations**:
   - The conversion from degrees to radians is done using `Math.toRadians(angleDeg)`.

6. **Axis Validation**:
   - The method checks the axis parameter using `equalsIgnoreCase` to handle case-insensitive comparisons.

7. **Main Method**:
   - A simple `main` method is included to demonstrate the usage of the `createRotationMatrix` method.

8. **Exception Handling**:
   - An `IllegalArgumentException` is thrown if the axis is not one of 'X', 'Y', or 'Z'.

This Java code preserves the functionality and structure of the original Python code while adhering to Java's conventions and best practices.