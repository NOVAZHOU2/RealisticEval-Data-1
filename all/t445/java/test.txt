Certainly! Below is the Java code equivalent to the provided Python unittest test class, using JUnit for testing the `createRotationMatrix` method. The Java test class will be placed in the package `org.real.temp` and named `Tester`.

### Java Code

```java
package org.real.temp;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
 * Test class for the createRotationMatrix method.
 */
public class Tester {

    /**
     * Tests the creation of a rotation matrix around the X-axis.
     */
    @Test
    public void testCreateRotationMatrixX() {
        double angleDeg = 45;
        String axis = "X";
        double[][] expectedMatrix = {
            {1, 0, 0, 0},
            {0, Math.cos(Math.toRadians(angleDeg)), -Math.sin(Math.toRadians(angleDeg)), 0},
            {0, Math.sin(Math.toRadians(angleDeg)), Math.cos(Math.toRadians(angleDeg)), 0},
            {0, 0, 0, 1}
        };

        double[][] actualMatrix = Answer.createRotationMatrix(angleDeg, axis);

        assertArrayEquals(expectedMatrix, actualMatrix, 0.0001);
    }

    /**
     * Tests the creation of a rotation matrix around the Y-axis.
     */
    @Test
    public void testCreateRotationMatrixY() {
        double angleDeg = 45;
        String axis = "Y";
        double[][] expectedMatrix = {
            {Math.cos(Math.toRadians(angleDeg)), 0, Math.sin(Math.toRadians(angleDeg)), 0},
            {0, 1, 0, 0},
            {-Math.sin(Math.toRadians(angleDeg)), 0, Math.cos(Math.toRadians(angleDeg)), 0},
            {0, 0, 0, 1}
        };

        double[][] actualMatrix = Answer.createRotationMatrix(angleDeg, axis);

        assertArrayEquals(expectedMatrix, actualMatrix, 0.0001);
    }

    /**
     * Tests the creation of a rotation matrix around the Z-axis.
     */
    @Test
    public void testCreateRotationMatrixZ() {
        double angleDeg = 45;
        String axis = "Z";
        double[][] expectedMatrix = {
            {Math.cos(Math.toRadians(angleDeg)), -Math.sin(Math.toRadians(angleDeg)), 0, 0},
            {Math.sin(Math.toRadians(angleDeg)), Math.cos(Math.toRadians(angleDeg)), 0, 0},
            {0, 0, 1, 0},
            {0, 0, 0, 1}
        };

        double[][] actualMatrix = Answer.createRotationMatrix(angleDeg, axis);

        assertArrayEquals(expectedMatrix, actualMatrix, 0.0001);
    }

    /**
     * Tests the creation of a rotation matrix with an invalid axis.
     */
    @Test
    public void testCreateRotationMatrixInvalidAxis() {
        double angleDeg = 45;
        String axis = "A";

        assertThrows(IllegalArgumentException.class, () -> {
            Answer.createRotationMatrix(angleDeg, axis);
        });
    }
}
```

### Explanation:
1. **Package and Class Definition**:
   - The Java test class is placed in the package `org.real.temp`.
   - The class `Tester` is defined within this package.

2. **JUnit Annotations**:
   - Each test method is annotated with `@Test` to indicate that it is a test method.

3. **Assertion Methods**:
   - `assertArrayEquals` is used to compare the expected and actual matrices with a tolerance of `0.0001` to account for floating-point precision issues.

4. **Test Methods**:
   - `testCreateRotationMatrixX`: Tests the creation of a rotation matrix around the X-axis.
   - `testCreateRotationMatrixY`: Tests the creation of a rotation matrix around the Y-axis.
   - `testCreateRotationMatrixZ`: Tests the creation of a rotation matrix around the Z-axis.
   - `testCreateRotationMatrixInvalidAxis`: Tests the creation of a rotation matrix with an invalid axis.

5. **Expected Matrices**:
   - The expected matrices are defined based on the trigonometric functions and the given angle in degrees.

6. **Exception Handling**:
   - `assertThrows` is used to verify that an `IllegalArgumentException` is thrown when an invalid axis is provided.

This Java code preserves the functionality and logic of the original Python unittest tests while adhering to JUnit's conventions and best practices.