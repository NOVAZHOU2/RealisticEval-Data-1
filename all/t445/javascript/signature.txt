Certainly! Below is the equivalent JavaScript code for the provided Python function, including JSDoc comments to maintain the documentation standards:

```javascript
/**
 * Create a pose matrix representing a rotation about a given axis.
 *
 * @param {number} angleDeg - Rotation angle in degrees.
 * @param {string} axis - Axis to rotate about, must be one of 'X', 'Y', or 'Z'.
 * @returns {Array<Array<number>>} - 4x4 pose matrix representing the rotation.
 */
function createRotMatrix(angleDeg, axis) {
    // Convert angle from degrees to radians
    const angleRad = angleDeg * (Math.PI / 180);

    // Define the rotation matrix based on the specified axis
    let rotationMatrix;
    if (axis.toLowerCase() === 'x') {
        rotationMatrix = [
            [1, 0, 0, 0],
            [0, Math.cos(angleRad), -Math.sin(angleRad), 0],
            [0, Math.sin(angleRad), Math.cos(angleRad), 0],
            [0, 0, 0, 1]
        ];
    } else if (axis.toLowerCase() === 'y') {
        rotationMatrix = [
            [Math.cos(angleRad), 0, Math.sin(angleRad), 0],
            [0, 1, 0, 0],
            [-Math.sin(angleRad), 0, Math.cos(angleRad), 0],
            [0, 0, 0, 1]
        ];
    } else if (axis.toLowerCase() === 'z') {
        rotationMatrix = [
            [Math.cos(angleRad), -Math.sin(angleRad), 0, 0],
            [Math.sin(angleRad), Math.cos(angleRad), 0, 0],
            [0, 0, 1, 0],
            [0, 0, 0, 1]
        ];
    } else {
        throw new Error("Invalid axis. Must be one of 'X', 'Y', or 'Z'.");
    }

    return rotationMatrix;
}
```

### Explanation:
1. **JSDoc Comments**: The JSDoc comments are added at the beginning of the function to document the parameters and return type.
2. **Parameter Types**: The parameter types (`angleDeg` and `axis`) are documented using JSDoc tags.
3. **Return Type**: The return type (`Array<Array<number>>`) is documented using JSDoc tags.
4. **Function Implementation**: The function implementation remains the same, converting the angle from degrees to radians and constructing the rotation matrix based on the specified axis.
5. **Error Handling**: The function throws an error if the axis is not one of `'X'`, `'Y'`, or `'Z'`.

This ensures that the JavaScript code is well-documented and follows the same logic and structure as the original Python code.