Certainly! Below is the equivalent JavaScript code for the provided Python function, including the function signature and JSDoc comments:

```javascript
/**
 * Create a pose matrix representing a rotation about a given axis.
 *
 * @param {number} angleDeg - Rotation angle in degrees.
 * @param {string} axis - Axis to rotate about, must be one of 'X', 'Y', or 'Z'.
 * @returns {Array} 4x4 pose matrix representing the rotation.
 */
function createRotMatrix(angleDeg, axis) {
    // Convert angle from degrees to radians
    const angleRad = (angleDeg * Math.PI) / 180;

    // Define the rotation matrix based on the specified axis
    let rotationMatrix;
    if (axis.toLowerCase() === 'x') {
        rotationMatrix = [
            [1, 0, 0, 0],
            [0, Math.cos(angleRad), -Math.sin(angleRad), 0],
            [0, Math.sin(angleRad), Math.cos(angleRad), 0],
            [0, 0, 0, 1]
        ];
    } else if (axis.toLowerCase() === 'y') {
        rotationMatrix = [
            [Math.cos(angleRad), 0, Math.sin(angleRad), 0],
            [0, 1, 0, 0],
            [-Math.sin(angleRad), 0, Math.cos(angleRad), 0],
            [0, 0, 0, 1]
        ];
    } else if (axis.toLowerCase() === 'z') {
        rotationMatrix = [
            [Math.cos(angleRad), -Math.sin(angleRad), 0, 0],
            [Math.sin(angleRad), Math.cos(angleRad), 0, 0],
            [0, 0, 1, 0],
            [0, 0, 0, 1]
        ];
    } else {
        throw new Error("Invalid axis. Must be one of 'X', 'Y', or 'Z'.");
    }

    return rotationMatrix;
}

// Example usage:
console.log(createRotMatrix(45, 'X'));
```

### Explanation:
1. **JSDoc Comments**:
   - The function is documented using JSDoc format.
   - The `@param` tags specify the types and descriptions of the parameters.
   - The `@returns` tag specifies the type and description of the return value.

2. **Function Signature**:
   - The function `createRotMatrix` takes two parameters: `angleDeg` and `axis`.

3. **Conversion from Degrees to Radians**:
   - The `angleDeg` is converted to radians using `(angleDeg * Math.PI) / 180`.

4. **Rotation Matrix Construction**:
   - The rotation matrix is constructed based on the specified axis.
   - The `toLowerCase()` method is used to handle case-insensitive axis values.

5. **Error Handling**:
   - If an invalid axis is provided, an error is thrown.

6. **Example Usage**:
   - Demonstrates how to call the `createRotMatrix` function with a 45-degree rotation around the X-axis.

This JavaScript code preserves the functionality, structure, and documentation of the original Python code.