Certainly! Here is the equivalent TypeScript code for the provided Python function, including proper type annotations and JSDoc-style documentation:

```typescript
import * as math from 'mathjs';

/**
 * Create a pose matrix representing a rotation about a given axis.
 *
 * @param angleDeg - Rotation angle in degrees.
 * @param axis - Axis to rotate about, must be one of 'X', 'Y', or 'Z'.
 * @returns A 4x4 pose matrix representing the rotation.
 */
function createRotMatrix(angleDeg: number, axis: 'X' | 'Y' | 'Z'): number[][] {
    // Convert angle from degrees to radians
    const angleRad = math.unit(angleDeg, 'deg').toNumber('rad');

    // Define the rotation matrix based on the specified axis
    let rotationMatrix: number[][];

    if (axis === 'X') {
        rotationMatrix = [
            [1, 0, 0, 0],
            [0, math.cos(angleRad), -math.sin(angleRad), 0],
            [0, math.sin(angleRad), math.cos(angleRad), 0],
            [0, 0, 0, 1]
        ];
    } else if (axis === 'Y') {
        rotationMatrix = [
            [math.cos(angleRad), 0, math.sin(angleRad), 0],
            [0, 1, 0, 0],
            [-math.sin(angleRad), 0, math.cos(angleRad), 0],
            [0, 0, 0, 1]
        ];
    } else if (axis === 'Z') {
        rotationMatrix = [
            [math.cos(angleRad), -math.sin(angleRad), 0, 0],
            [math.sin(angleRad), math.cos(angleRad), 0, 0],
            [0, 0, 1, 0],
            [0, 0, 0, 1]
        ];
    } else {
        throw new Error("Invalid axis. Must be one of 'X', 'Y', or 'Z'.");
    }

    return rotationMatrix;
}

// Example usage
const angleDeg = 45;
const axis = 'X';
console.log(createRotMatrix(angleDeg, axis));
```

### Explanation:
1. **Import `mathjs`**: The `mathjs` library is used to handle mathematical operations like trigonometric functions and unit conversions.
2. **JSDoc Documentation**: The function is documented using JSDoc-style comments.
3. **Type Annotations**: The function parameters and return type are annotated with TypeScript types.
4. **Axis Validation**: The function checks if the `axis` parameter is one of `'X'`, `'Y'`, or `'Z'`.
5. **Rotation Matrix Construction**: The rotation matrix is constructed based on the specified axis using the `mathjs` library for trigonometric functions.
6. **Error Handling**: An error is thrown if the `axis` is not valid.

This TypeScript code preserves the original functionality and structure of the Python code, with appropriate adjustments for TypeScript's static type system and documentation conventions.