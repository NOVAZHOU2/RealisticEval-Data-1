Here's the equivalent Java code for your JavaScript function that calculates the great-circle distance using the Haversine formula:

```java
public class DistanceCalculator {

    /**
     * Calculates the great-circle distance between two points on the Earth
     * using their latitude and longitude based on the Haversine formula.
     *
     * @param lat1 Latitude of the first point in degrees.
     * @param lon1 Longitude of the first point in degrees.
     * @param lat2 Latitude of the second point in degrees.
     * @param lon2 Longitude of the second point in degrees.
     * @return The distance between the two points in kilometers.
     */
    public static double calculateDistance(double lat1, double lon1, double lat2, double lon2) {
        final double earthRadiusKm = 6371; // Radius of the Earth in kilometers

        // Helper function to convert degrees to radians
        double toRadians(double degrees) {
            return (Math.PI * degrees) / 180;
        }

        // Convert all degrees to radians
        double lat1Rad = toRadians(lat1);
        double lon1Rad = toRadians(lon1);
        double lat2Rad = toRadians(lat2);
        double lon2Rad = toRadians(lon2);

        // Differences in coordinates
        double deltaLat = lat2Rad - lat1Rad;
        double deltaLon = lon2Rad - lon1Rad;

        // Haversine formula
        double a = Math.sin(deltaLat / 2) * Math.sin(deltaLat / 2) +
                   Math.cos(lat1Rad) * Math.cos(lat2Rad) *
                   Math.sin(deltaLon / 2) * Math.sin(deltaLon / 2);

        double c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));

        // Distance in kilometers
        return earthRadiusKm * c;
    }

    public static void main(String[] args) {
        // Example usage
        double distance = calculateDistance(52.5200, 13.4050, 48.8566, 2.3522); // Berlin to Paris
        System.out.println("Distance: " + distance + " km");
    }
}
```

### Key Points:
1. The `calculateDistance` method is a static method that can be called without creating an instance of `DistanceCalculator`.
2. The inner function `toRadians` is defined as a method inside `calculateDistance`. If you prefer, you can make it a separate static method.
3. The method calculates and returns the distance in kilometers.