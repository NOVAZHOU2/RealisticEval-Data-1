Hereâ€™s the equivalent Catch2 test case in C++ for the provided JavaScript Jest test cases:

```cpp
#define CATCH_CONFIG_MAIN
#include <catch2/catch.hpp>

// Assume calculateDistance is declared somewhere

TEST_CASE("calculateDistance", "[distance]") {
    SECTION("calculates distance between two points in the same city") {
        double distance = calculateDistance(34.052235, -118.243683, 34.052236, -118.243684);
        REQUIRE(distance == Catch::Approx(0.00013).epsilon(0.00001);
    }

    SECTION("calculates distance between two major cities") {
        double distance = calculateDistance(34.052235, -118.243683, 40.712776, -74.005974);
        double expectedDistance = 3940;  // Known distance
        double tolerance = 30;  // Tolerance
        REQUIRE(distance > expectedDistance - tolerance);
        REQUIRE(distance < expectedDistance + tolerance);
    }

    SECTION("calculates distance between two points in different continents") {
        double distance = calculateDistance(40.712776, -74.005974, 51.507351, -0.127758);
        double expectedDistance = 5567;  // Known distance
        double tolerance = 30;  // Tolerance
        REQUIRE(distance > expectedDistance - tolerance);
        REQUIRE(distance < expectedDistance + tolerance);
    }

    SECTION("handles zero distance when the same coordinates are given") {
        double distance = calculateDistance(48.8566, 2.3522, 48.8566, 2.3522);
        REQUIRE(distance == 0);  // Distance should be zero
    }

    SECTION("calculates correct distance with negative and positive longitude and latitude") {
        double distance = calculateDistance(-33.8688, 151.2093, -36.8485, 174.7633);
        double expectedDistance = 2159;  // Known distance
        double tolerance = 30;  // Tolerance
        REQUIRE(distance > expectedDistance - tolerance);
        REQUIRE(distance < expectedDistance + tolerance);
    }
}
```

Let me know if you need any adjustments or additional tests!