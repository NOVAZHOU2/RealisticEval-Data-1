To convert the JavaScript function signature and comments to Python, you can follow this structure:
JavaScript Signature:
javascript
/**
 * Computing PI (π) Using Gauss-Legendre Algorithm with High-precision Arithmetic Library decimal.js
 * 
 * @param {number} digits - The number of decimal digits to compute π to.
 * @returns {string} - The value of π to the specified number of digits.
 */
function computePi(digits) {}
Python Equivalent:
python
def compute_pi(digits: int) -> str:
    """
    Computing PI (π) Using Gauss-Legendre Algorithm with High-precision Arithmetic Library.
    
    Args:
        digits (int): The number of decimal digits to compute π to.
    
    Returns:
        str: The value of π to the specified number of digits.
    """
    pass
Explanation:
Function Name: In Python, it is conventional to use snake_case, so computePi becomes compute_pi.
Type Annotations:
digits: int specifies that the digits parameter is an integer, matching {number} in JavaScript.
-> str indicates that the function will return a str (string).
Docstring:
Python uses triple quotes (""") for multi-line docstrings.
The parameter description is included with Args, and the return type is described with Returns.
This Python signature mirrors the functionality described in the JavaScript version while adhering to Python's syntax and conventions.