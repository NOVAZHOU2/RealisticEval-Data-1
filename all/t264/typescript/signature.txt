Certainly! Below is the equivalent TypeScript code for the given Python function signature and documentation:

```typescript
/**
 * Extract log entries from a log file for WARNING, ERROR, CRITICAL, and ALERT levels
 * and save each type of log entry to a different file.
 * 
 * @param logFilepath - Path to the log file.
 */
function extractLogEntries(logFilepath: string): void {
    // Implementation goes here
}
```

Here's how the conversion works:

1. **Function Signature**:
   - The Python `def` statement translates to the TypeScript `function` keyword.
   - The parameter type annotation `log_file_path: str` is translated to `logFilepath: string`.

2. **Documentation Comments**:
   - The Python docstring is converted to TypeScript JSDoc comments using the `/** */` format.
   - The `Args` section is translated to `@param`, and the type and description are included.

3. **Return Type**:
   - Since the Python function does not explicitly return anything (`None`), the TypeScript function uses the `void` return type. 

This ensures that the TypeScript function has the same structure and documentation as the original Python function.