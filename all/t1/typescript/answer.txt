Sure! Here is the equivalent TypeScript code for the provided Python function:

```typescript
function numericalStrConvert(value: string): number | string {
    const intValue = parseInt(value);
    if (!isNaN(intValue)) {
        return intValue;
    }

    const floatValue = parseFloat(value);
    if (!isNaN(floatValue)) {
        return floatValue;
    }

    return value;
}
```

### Explanation:
1. **Function Signature**:
   - The function `numericalStrConvert` takes a `string` as an argument and returns either a `number` or a `string`.

2. **Type Conversion**:
   - `parseInt(value)` attempts to parse the string as an integer.
   - `parseFloat(value)` attempts to parse the string as a floating-point number.
   - `isNaN()` checks if the parsed values are not numbers.

3. **Return Values**:
   - If the string can be parsed as an integer, it returns the integer value.
   - If the string can be parsed as a floating-point number, it returns the floating-point value.
   - If the string cannot be parsed as either an integer or a floating-point number, it returns the original string.

This TypeScript function maintains the same functionality and logic as the Python function, ensuring proper type handling and error checking.