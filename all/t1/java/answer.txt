Here's the equivalent Java code for the provided Python function. This code defines a method `numericalStrConvert` in the `Answer` class under the `org.real.temp` package.

```java
package org.real.temp;

public class Answer {

    /**
     * Convert the input string. First, check if it is an integer; if it is, convert to an integer.
     * If it is not, check if it is a floating-point number; if yes, convert to a floating-point number.
     * If neither, return the original string.
     *
     * @param value input value string
     * @return converted value as Integer, Double, or String
     */
    public static Object numericalStrConvert(String value) {
        try {
            // Try to parse as an integer
            return Integer.parseInt(value);
        } catch (NumberFormatException e1) {
            try {
                // Try to parse as a double
                return Double.parseDouble(value);
            } catch (NumberFormatException e2) {
                // If neither, return the original string
                return value;
            }
        }
    }
}
```

### Explanation:
- The method `numericalStrConvert` tries to convert the input string to an `Integer` first.
- If it fails (throws a `NumberFormatException`), it attempts to convert it to a `Double`.
- If both conversions fail, it returns the original string.
- The method returns an `Object` type since it can return either `Integer`, `Double`, or `String`. You can cast it to the appropriate type when using it.