Sure! Below is the equivalent C++ unit test case using Catch2 for the provided Python function `numerical_str_convert`.

```cpp
#include <catch2/catch.hpp>
#include <string>

// Function declaration
int numerical_str_convert(const std::string& value);

// Test cases
TEST_CASE("Test numerical_str_convert function", "[numerical_str_convert]") {
    // Test case 1: Input is an integer
    REQUIRE(numerical_str_convert("42") == 42);
    
    // Test case 2: Input is a floating-point number
    REQUIRE(numerical_str_convert("3.14") == 3.14);
    
    // Test case 3: Input is a non-numeric string
    REQUIRE(numerical_str_convert("abc") == "abc");
}

// Function definition
int numerical_str_convert(const std::string& value) {
    try {
        // Try converting to integer
        int intValue = std::stoi(value);
        return intValue;
    } catch (const std::invalid_argument& e) {
        try {
            // Try converting to double
            double doubleValue = std::stod(value);
            return static_cast<int>(doubleValue); // Return as int for simplicity
        } catch (const std::invalid_argument& e) {
            // If both conversions fail, return the original string
            return static_cast<int>(value);
        }
    }
}
```

### Explanation:
1. **Function Declaration and Definition**: The function `numerical_str_convert` is declared and defined in the same file. This function attempts to convert the input string to an integer or a double. If both conversions fail, it returns the original string as an integer.

2. **Catch2 Test Cases**:
   - **Test Case 1**: Tests that the function correctly converts a numeric string to an integer.
   - **Test Case 2**: Tests that the function correctly converts a numeric string to a double.
   - **Test Case 3**: Tests that the function returns the original string when it cannot be converted to either an integer or a double.

3. **Catch2 Macros**:
   - `TEST_CASE`: Defines a test case with a name and tags.
   - `REQUIRE`: Asserts that the condition is true; if false, the test fails.

Make sure you have Catch2 installed and properly configured in your development environment to compile and run these tests.