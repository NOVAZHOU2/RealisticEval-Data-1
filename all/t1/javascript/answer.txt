Sure, here is the equivalent JavaScript code for the provided Python function:

```javascript
function numericalStrConvert(value) {
    /**
     * Convert the input string. First, check if it is an integer. If it is, convert it to an integer.
     * If not, check if it is a floating-point number. If it is, convert it to a floating-point number.
     * If it is neither, return the original string.
     * 
     * @param {string} value - The input value as a string.
     * @returns {number|string} - The converted value or the original string.
     */
    
    // Attempt to parse the string as an integer
    const intValue = parseInt(value);
    if (!isNaN(intValue) && intValue.toString() === value) {
        return intValue;
    }

    // If not an integer, attempt to parse the string as a floating-point number
    const floatValue = parseFloat(value);
    if (!isNaN(floatValue) && floatValue.toString() === value) {
        return floatValue;
    }

    // If not an integer or a floating-point number, return the original string
    return value;
}
```

### Explanation:
1. **parseInt and parseFloat**: These functions are used to convert strings to integers and floating-point numbers, respectively.
2. **isNaN**: This function checks if the parsed value is `NaN` (Not-a-Number).
3. **toString Comparison**: We compare the string representation of the parsed value with the original string to ensure that the conversion is valid.

This JavaScript function maintains the same functionality, logic, and structure as the provided Python code.