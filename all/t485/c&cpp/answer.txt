Here's how you can convert the Python code to C++:

```cpp
#include <string>
#include <vector>
#include <map>
#include <regex>

std::pair<std::string, std::vector<std::string>> prepareQuery(const std::string& sql, const std::map<std::string, std::string>& params) {
    std::regex reg("\\$([a-zA-Z0-9_]+)");
    std::smatch matches;
    std::string result = sql;
    int i = 1;

    while(std::regex_search(result, matches, reg)) {
        auto it = params.find(matches.str(1));
        if(it != params.end()) {
            std::string posParam = "$" + std::to_string(i);
            result.replace(matches.position(), matches.length(), posParam);
            paramsVector.push_back(it->second);
            ++i;
        } else {
            throw std::runtime_error("Parameter " + matches.str(1) + " not found");
        }
    }

    return {result, paramsVector};
}
```

This C++ function works similarly to your Python one. It uses regular expressions to find all occurrences of named parameters in the SQL string, replaces them with positional parameters ($1, $2, etc.), and adds the corresponding values from the `params` map to the `paramsVector`. If a named parameter is not found in the `params` map, it throws an exception. 

Note that in C++, we use `std::map` instead of Python's `dict`, and `std::pair` instead of Python's `tuple`. Also, we use `std::string` instead of Python's `str`.

Please note that the above C++ code assumes that all parameters in the SQL string exist in the `params` map. If that is not the case, you might want to add some error handling.