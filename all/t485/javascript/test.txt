Sure! Below is the equivalent JavaScript test case using Jest for the provided Python unittest test class:

```javascript
const { prepareQuery } = require('./path-to-your-module'); // Adjust the path accordingly

describe('prepareQuery', () => {
    it('should modify a SQL query string with named parameters to use positional parameters', () => {
        const sql = "SELECT * FROM users WHERE id = $user_id AND status = $status";
        const params = { user_id: 42, status: 'active' };

        const [modifiedSql, paramValues] = prepareQuery(sql, params);

        expect(modifiedSql).toBe("SELECT * FROM users WHERE id = $1 AND status = $2");
        expect(paramValues).toEqual([42, 'active']);
    });
});
```

In this JavaScript test case:

- We use `describe` to group related tests together.
- Inside the `describe`, we use `it` to define individual tests.
- We call the `prepareQuery` function and pass the SQL query and parameters.
- We then use `expect` to assert that the returned `modifiedSql` matches the expected value and that the `paramValues` array contains the correct values.

Make sure to adjust the path to your module (`./path-to-your-module`) correctly so that Jest can find and load the `prepareQuery` function.