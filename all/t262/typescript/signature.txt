Sure, here is the equivalent TypeScript code with type signatures and comments:

```typescript
/**
 * Definition for a binary tree node.
 */
class TreeNode {
    val: number;
    left: TreeNode | null;
    right: TreeNode | null;

    constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {
        this.val = (val===undefined ? 0 : val);
        this.left = (left===undefined ? null : left);
        this.right = (right===undefined ? null : right);
    }
}

/**
 * Calculates the average value of the nodes on each level in a binary tree.
 *
 * @param {TreeNode | null} root - The root of the binary tree.
 * @returns {number[]} An array containing the average values of each level.
 */
function averageOfLevels(root: TreeNode | null): number[] {
    // Your implementation goes here
}
```

This TypeScript code maintains the structure and comments of your original Python code while adapting it to TypeScript syntax and type annotations.