Certainly! Here is the equivalent Java code for the given Python code, including the class and method signatures, along with appropriate Javadoc comments and type translations:

```java
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;

/**
 * Represents a node in a binary tree.
 */
class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;

    TreeNode(int val) {
        this.val = val;
    }

    TreeNode(int val, TreeNode left, TreeNode right) {
        this.val = val;
        this.left = left;
        this.right = right;
    }
}

/**
 * Calculates the average value of nodes at each level in a binary tree.
 */
public class Answer {

    /**
     * Given the root of a binary tree, returns the average value of the nodes on each level in the form of an array.
     *
     * @param root The root of the binary tree.
     * @return A list containing the average values of each level.
     */
    public static List<Double> averageOfLevels(TreeNode root) {
        if (root == null) {
            return new ArrayList<>();
        }

        List<Double> result = new ArrayList<>();
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);

        while (!queue.isEmpty()) {
            int levelSize = queue.size();
            double currentLevelSum = 0;
            int currentLevelCount = 0;

            for (int i = 0; i < levelSize; i++) {
                TreeNode node = queue.poll();
                currentLevelSum += node.val;
                currentLevelCount++;

                if (node.left != null) {
                    queue.offer(node.left);
                }
                if (node.right != null) {
                    queue.offer(node.right);
                }
            }

            // Calculate the average for the current level
            double levelAverage = currentLevelSum / currentLevelCount;
            result.add(levelAverage);
        }

        return result;
    }

    public static void main(String[] args) {
        // Example usage
        TreeNode root = new TreeNode(3,
                new TreeNode(9),
                new TreeNode(20, new TreeNode(15), new TreeNode(7)));
        List<Double> averages = averageOfLevels(root);
        System.out.println(averages);
    }
}
```

### Explanation:
1. **TreeNode Class**:
   - The `TreeNode` class is defined with fields `val`, `left`, and `right`.
   - It has two constructors for creating nodes.

2. **averageOfLevels Method**:
   - The method signature is translated to `public static List<Double> averageOfLevels(TreeNode root)`.
   - The method includes Javadoc comments explaining its purpose, parameters, and return type.
   - The logic remains the same, using a `Queue` to perform a level-order traversal and calculate the average values.

3. **Main Method**:
   - An example usage is provided in the `main` method to demonstrate how to use the `averageOfLevels` method.

This Java code preserves the functionality and structure of the original Python code while adhering to Java's syntax and conventions.