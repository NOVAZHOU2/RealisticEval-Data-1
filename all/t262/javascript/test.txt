Sure! Below is the equivalent JavaScript test case using Jest for the provided Python unittest test class. Note that I'll assume you have a basic implementation of the `average_of_levels` function in JavaScript and will focus on writing the Jest tests.

```javascript
// Assuming the TreeNode class and average_of_levels function are defined as follows:

class TreeNode {
  constructor(val = 0, left = null, right = null) {
    this.val = val;
    this.left = left;
    this.right = right;
  }
}

function averageOfLevels(root) {
  if (!root) return [];

  const result = [];
  const queue = [root];

  while (queue.length > 0) {
    const levelSize = queue.length;
    let levelSum = 0;

    for (let i = 0; i < levelSize; i++) {
      const currentNode = queue.shift();
      levelSum += currentNode.val;

      if (currentNode.left) queue.push(currentNode.left);
      if (currentNode.right) queue.push(currentNode.right);
    }

    result.push(levelSum / levelSize);
  }

  return result;
}

// Jest test cases

describe('averageOfLevels', () => {
  it('should return the average values of each level in a binary tree', () => {
    // Constructing the following binary tree:
    //       3
    //      / \
    //     9   20
    //        /  \
    //       15   7
    const root = new TreeNode(3);
    root.left = new TreeNode(9);
    root.right = new TreeNode(20);
    root.right.left = new TreeNode(15);
    root.right.right = new TreeNode(7);

    expect(averageOfLevels(root)).toEqual([3, 14.5, 11]);
  });

  it('should handle an empty tree', () => {
    expect(averageOfLevels(null)).toEqual([]);
  });

  it('should handle a single node tree', () => {
    const root = new TreeNode(5);
    expect(averageOfLevels(root)).toEqual([5]);
  });
});
```

### Explanation:
1. **TreeNode Class**: This is the same as in the Python code.
2. **averageOfLevels Function**: This is a JavaScript implementation of the function that calculates the average values of each level in a binary tree.
3. **Jest Test Cases**:
   - **it('should return the average values of each level in a binary tree')**: This test constructs a sample binary tree and checks if the `averageOfLevels` function returns the correct averages for each level.
   - **it('should handle an empty tree')**: This test checks if the function correctly handles an empty tree.
   - **it('should handle a single node tree')**: This test checks if the function correctly handles a tree with only one node.

Make sure you have Jest installed in your project. If not, you can install it using npm or yarn:

```sh
npm install --save-dev jest
# or
yarn add --dev jest
```

Then, you can run the tests using:

```sh
npx jest
# or
yarn jest
```