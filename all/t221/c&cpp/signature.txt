Here is your requested C++ code signature with the same functionality:

```cpp
#include <string>
#include <vector>
#include <map>

/**
 * Extract and parse strings containing Python dictionary syntax from a given file
 *
 * @param file_path The path to the file from which to extract dictionary strings.
 * @return A vector of maps representing the dictionaries extracted and parsed from the file.
 */
std::vector<std::map<std::string, std::string>> extractParseDictionaries(const std::string& file_path);
```

This function signature in C++ does the following:

- It includes necessary headers for string operations and container types.
- It defines a docstring similar to the Python one, explaining what the function does, its parameters, and return type.
- It specifies that the function takes a `const std::string&` as an argument (`file_path`) which represents the path to the input file.
- It returns a `std::vector<std::map<std::string, std::string>>`, which corresponds to the Python's `List[Dict]`. Each map in the vector can be thought of as a dictionary, where keys and values are both strings, matching Python's dictionary key-value pairs.