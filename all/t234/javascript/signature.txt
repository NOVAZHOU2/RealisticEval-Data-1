Certainly! Below is the equivalent JavaScript function with JSDoc comments that preserve the purpose and structure of the Python code:

```javascript
/**
 * Appends a new row to a CSV file if there isn't a row with matching values in the first three columns.
 *
 * @param {fs.WriteStream} fileHandler - File handler of the CSV file opened in read-plus mode ('r+').
 * @param {csvParser} reader - CSV reader object for reading existing rows.
 * @param {Array} rowCandidate - Array containing the new row to be appended.
 */
function appendOrSkipRow(fileHandler, reader, rowCandidate) {
    // Read existing rows into an array
    const existingRows = [];

    reader.on('data', (row) => {
        existingRows.push(row);
    });

    reader.on('end', () => {
        // Check if a matching row exists in the first three columns
        let skipAppend = false;
        for (let row of existingRows) {
            if (
                row['0'] === rowCandidate[0] &&
                row['1'] === rowCandidate[1] &&
                row['2'] === rowCandidate[2]
            ) {
                console.log("Row already exists. Skipping append.");
                skipAppend = true;
                break;  // Skip appending if a match is found
            }
        }

        if (!skipAppend) {
            // Append the new row if no matching row is found
            fileHandler.write('\n');  // Ensure there's a newline before appending
            const writer = csvWriter({
                path: fileHandler.path,
                header: [
                    { id: '0', title: 'Column0' },
                    { id: '1', title: 'Column1' },
                    { id: '2', title: 'Column2' },
                    // Add more columns if needed
                ]
            });

            writer.writeRecords([rowCandidate])
                .then(() => console.log("Row appended successfully"))
                .catch((error) => console.error("Error appending row:", error));
        }
    });
}

// Example usage
const fs = require('fs');
const csvParser = require('csv-parser');
const csvWriter = require('csv-writer').createObjectCsvWriter;

const filePath = 'example.csv';
const fileHandler = fs.createReadStream(filePath).pipe(csvParser());
const writerStream = fs.createWriteStream(filePath, { flags: 'a+' });

appendOrSkipRow(writerStream, fileHandler, ['new_value_1', 'new_value_2', 'new_value_3']);
```

### Explanation:
1. **JSDoc Comments**: The function is documented using JSDoc comments to describe the parameters and purpose of the function.
2. **Function Definition**: The function `appendOrSkipRow` is defined with the same parameters and logic as the Python function.
3. **Reading Existing Rows**: The `reader` listens for `'data'` events to collect all existing rows into an array.
4. **Checking for Matching Rows**: It checks if any existing row matches the first three columns of the candidate row.
5. **Appending New Row**: If no matching row is found, it appends the new row using `csv-writer`.

### Dependencies:
Ensure you have the required dependencies installed:
```sh
npm install csv-parser csv-writer
```

This JavaScript code preserves the functionality and structure of the original Python code while adhering to JavaScript documentation standards.