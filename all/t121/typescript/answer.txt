Hereâ€™s how you can convert your JavaScript function to TypeScript:

```typescript
function adjustArrayLength<T>(targetLength: number, array: T[]): T[] {
    const arrayLength = array.length;

    if (arrayLength === targetLength) {
        return array;
    }

    if (arrayLength < targetLength) {
        const repeatedArray = Array(Math.ceil(targetLength / arrayLength)).fill(array).flat();
        return repeatedArray.slice(0, targetLength);
    }

    return array.slice(0, targetLength);
}
```

### Changes Made:
1. **Type Parameters**: Added a generic type parameter `<T>` to allow the function to handle arrays of any type.
2. **Type Annotations**: Added type annotations for `targetLength` (number) and `array` (T[]).
3. **Return Type**: Specified the return type as `T[]`.

This version of the function maintains type safety and can be used with arrays of any data type.