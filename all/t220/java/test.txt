Sure! Below is the equivalent Java JUnit test case for the provided Python `UniqueDeque` class. The package is `org.real.temp`, and the class name is `Tester`.

```java
package org.real.temp;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class Tester {

    private UniqueDeque<String> deque;

    @BeforeEach
    public void setUp() {
        deque = new UniqueDeque<>();
    }

    @Test
    public void testAdd() {
        assertTrue(deque.add("item1"));
        assertFalse(deque.add("item1")); // Should not be added again
    }

    @Test
    public void testDelete() {
        deque.add("item1");
        assertTrue(deque.delete("item1"));
        assertFalse(deque.delete("item1")); // Should not be deleted again
    }

    @Test
    public void testContains() {
        deque.add("item1");
        assertTrue(deque.contains("item1"));
        deque.delete("item1");
        assertFalse(deque.contains("item1"));
    }

    @Test
    public void testLength() {
        assertEquals(0, deque.size());
        deque.add("item1");
        assertEquals(1, deque.size());
        deque.add("item2");
        assertEquals(2, deque.size());
        deque.delete("item1");
        assertEquals(1, deque.size());
    }

    @Test
    public void testIterator() {
        deque.add("item1");
        deque.add("item2");
        deque.add("item3");

        int count = 0;
        for (String item : deque) {
            count++;
        }
        assertEquals(3, count);
    }
}
```

### Explanation:
- **Package Declaration**: The package is declared at the top of the file using `package org.real.temp;`.
- **Class Declaration**: The class `Tester` extends `junit5.jupiter.api.Test`. This indicates that it is a JUnit test class.
- **Setup Method**: The `@BeforeEach` annotation marks the `setUp` method to run before each test method. It initializes a new instance of `UniqueDeque`.
- **Test Methods**: Each method annotated with `@Test` represents a separate test case.
  - `testAdd`: Tests adding items to the deque.
  - `testDelete`: Tests deleting items from the deque.
  - `testContains`: Tests checking if an item is in the deque.
  - `testLength`: Tests getting the size of the deque.
  - `testIterator`: Tests iterating over the deque.

Make sure you have the necessary imports and the implementation of the `UniqueDeque` class in your project.