Here's how you could write your `UniqueDeque` class in JavaScript using Jest for testing:

```javascript
// Import required packages
const { Deque } = require('collections/deque');

class UniqueDeque {
  constructor() {
    this.deque = new Deque();
  }

  add(item) {
    if (!this.contains(item)) {
      this.deque.pushBack(item);
      return true;
    }
    return false;
  }

  delete(item) {
    const index = this.deque.toArray().indexOf(item);
    if (index !== -1) {
      this.deque.removeAt(index);
      return true;
    }
    return false;
  }

  contains(item) {
    return this.deque.toArray().includes(item);
  }

  get size() {
    return this.deque.size();
  }

  [Symbol.iterator]() {
    let i = 0;
    const array = this.deque.toArray();
    return {
      next: () => ({
        value: array[i++],
        done: i > array.length,
      }),
    };
  }
}

module.exports = UniqueDeque;

// Test file: UniqueDeque.test.js
const UniqueDeque = require('./UniqueDeque');
const { expect } = require('@jest/globals');

describe('UniqueDeque', () => {
  let uniqueDeque;

  beforeEach(() => {
    uniqueDeque = new UniqueDeque();
  });

  describe('add method', () => {
    test('adds an item when it is not present', () => {
      expect(uniqueDeque.add(1)).toBe(true);
      expect(uniqueDeque.add(2)).toBe(true);
    });

    test('does not add an item when it is already present', () => {
      uniqueDeque.add(1);
      expect(uniqueDeque.add(1)).toBe(false);
    });
  });

  // Similarly, implement tests for other methods...
});
```

Note that I've used the `collections/deque` package from npm to provide a deque implementation in Node.js. If you're running this code in another environment or prefer not to use an external package, you would need to implement the deque functionality yourself or find an alternative solution. Also, please note that the `contains` and `delete` methods have been simplified here since JavaScript does not support built-in deques with these exact methods. Instead, we convert the deque to an array and perform operations on that array.