Hereâ€™s the equivalent C++ function signature, including the converted comments and type annotations:

```cpp
/**
 * Copies the contents of the source file to the destination file using a buffered stream
 * and measures the time it takes to complete the operation.
 *
 * @param source_file_path The path to the source file.
 * @param destination_file_path The path to the destination file.
 * @return The time taken to copy the file in milliseconds.
 */
int copy_file_with_buffered_stream(const std::string& source_file_path, const std::string& destination_file_path);
```

### Key Changes:
1. **Function Signature**: The return type is specified as `int`, and the parameters are defined using `const std::string&` for the string inputs.
2. **Documentation Style**: The docstring is converted to a C++ style comment using `/* */` for multi-line comments.
3. **Type Annotations**: Python's type annotations are translated into C++ types, specifically using `std::string` for string parameters. 

This signature maintains the original function's purpose and structure.