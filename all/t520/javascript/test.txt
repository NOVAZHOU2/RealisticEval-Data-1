Here is how you can convert your Python unittest test case to Jest test case:

```javascript
const { describe, it, expect } = require('@jest/globals');

function computeOutputIndex(idx_1, idx_2) {
    return parseInt((idx_1.toString(2) ^ idx_2.toString(2)).toString(2), 2);
}

describe('computeOutputIndex', () => {
    it('should correctly compute the output index', () => {
        expect(computeOutputIndex(0b1101, 0b1011)).toBe(0b0110);
        expect(computeOutputIndex(0b1000, 0b1100)).toBe(0b0100);
        // Add more tests here...
    });
});
```

In this JavaScript test case, we first import `describe`, `it`, and `expect` functions from the `@jest/globals`. Then we define our `computeOutputIndex` function which performs the same operation as the Python version.

Next, we create a `describe` block that contains all of our test cases for `computeOutputIndex`. Inside the `describe` block, we create an `it` block for each test case. We use the `expect` function to assert that the result of calling `computeOutputIndex` with certain arguments is equal to what we expect.