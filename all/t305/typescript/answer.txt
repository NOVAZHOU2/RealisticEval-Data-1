Certainly! Below is the TypeScript version of your JavaScript code:

```typescript
/**
 * Define a class called SeededRandom for generating pseudorandom numbers with a specific seed
 */
class SeededRandom {
    private seed: number;

    /**
     * Initializes a new instance of the SeededRandom class with a given seed.
     * @param {number} seed - The initial seed value for the random number generator.
     */
    constructor(seed: number) {
        this.seed = seed;
    }

    /**
     * Generates a random number between 0 and 1 using a Linear Congruential Generator (LCG) algorithm.
     * @returns {number} A pseudo-random number between 0 (inclusive) and 1 (exclusive).
     */
    rand(): number {
        const m = 4294967296; // 2^32
        const a = 1664525;
        const c = 1013904223;

        this.seed = (a * this.seed + c) % m;
        return this.seed / m;
    }
}
```

### Explanation:
- **Type Annotations**: I added type annotations to the `seed` parameter in the constructor and the return type of the `rand` method.
- **Private Property**: I made the `seed` property private to encapsulate it within the class.
- **LCG Algorithm Implementation**: I implemented the Linear Congruential Generator (LCG) algorithm in the `rand` method to generate pseudo-random numbers.

This TypeScript code should work similarly to your original JavaScript code but with the benefits of static typing provided by TypeScript.