Sure! Below is the TypeScript version of your Jest test case, wrapped in a `describe` block:

```typescript
import { SeededRandom } from './SeededRandom'; // Adjust the import path accordingly

describe('SeededRandom', () => {
    it('should generate a random number between 0 and 1', () => {
        const seed = 42;
        const seededRandom = new SeededRandom(seed);
        const randomNumber = seededRandom.rand();

        expect(randomNumber).toBeGreaterThanOrEqual(0);
        expect(randomNumber).toBeLessThan(1);
    });

    it('should produce different results with different seeds', () => {
        const seed1 = 42;
        const seed2 = 99;
        const seededRandom1 = new SeededRandom(seed1);
        const seededRandom2 = new SeededRandom(seed2);

        const randomNumber1 = seededRandom1.rand();
        const randomNumber2 = seededRandom2.rand();

        expect(randomNumber1).not.toEqual(randomNumber2);
    });
});
```

### Explanation:
1. **Import Statement**: Ensure you have the correct import statement at the top of your file. Adjust the path according to where your `SeededRandom` class is located.

2. **Describe Block**: The `describe` block groups related tests together. In this case, all tests related to the `SeededRandom` class are grouped under the "SeededRandom" description.

3. **First Test Case**: This test checks if the `rand()` method generates a number between 0 (inclusive) and 1 (exclusive).

4. **Second Test Case**: This test ensures that two instances of `SeededRandom` with different seeds produce different results.

Make sure to implement the `SeededRandom` class methods (`constructor` and `rand`) before running these tests.