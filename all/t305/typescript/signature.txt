Sure! Here's how you can convert your JavaScript code to TypeScript, while keeping the comments intact:

```typescript
/**
 * Define a class called SeededRandom for generating pseudorandom numbers with a specific seed
 */
class SeededRandom {
    private seed: number;

    /**
     * Initializes a new instance of the SeededRandom class with a given seed.
     * @param {number} seed - The initial seed value for the random number generator.
     */
    constructor(seed: number) {
        this.seed = seed;
    }

    /**
     * Generates a random number between 0 and 1 using a Linear Congruential Generator (LCG) algorithm.
     * @returns {number} A pseudo-random number between 0 (inclusive) and 1 (exclusive).
     */
    rand(): number {
        const m = 4294967296; // 2^32
        const a = 1664525;
        const c = 1013904223;
        
        this.seed = (a * this.seed + c) % m;
        return this.seed / m;
    }
}
```

In this TypeScript version:
- I've added type annotations to the `seed` parameter in the constructor and the return type of the `rand` method.
- I've made the `seed` field private to encapsulate it within the class.
- The constants `m`, `a`, and `c` are also typed appropriately.

This should give you a robust TypeScript implementation of the `SeededRandom` class.