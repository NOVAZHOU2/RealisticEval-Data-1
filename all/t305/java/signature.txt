Sure! Below is the equivalent Java code signature for the provided JavaScript class `SeededRandom`, keeping the same method names and comments:

```java
/**
 * Define a class called SeededRandom for generating pseudorandom numbers with a specific seed
 */
public class SeededRandom {
    /**
     * Initializes a new instance of the SeededRandom class with a given seed.
     * @param seed - The initial seed value for the random number generator.
     */
    public SeededRandom(long seed) {

    }

    /**
     * Generates a random number between 0 and 1 using a Linear Congruential Generator (LCG) algorithm.
     * @return A pseudo-random number between 0 (inclusive) and 1 (exclusive).
     */
    public double rand() {

    }
}
```

### Explanation:
- **Class Definition**: In Java, classes are defined using the `public` access modifier if they need to be accessible from other packages.
- **Constructor**: The constructor in Java takes parameters and initializes the object's state. Here, it takes a `long` parameter named `seed`.
- **Method Return Types**: In Java, methods must specify their return type. For example, `rand()` returns a `double`.

This Java code maintains the structure and functionality of the original JavaScript class while adhering to Java syntax and conventions.