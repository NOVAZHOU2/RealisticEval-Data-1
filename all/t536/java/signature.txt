Sure! Below is the equivalent Java code with the same functionality and comments:

```java
/**
 * Gets the current date formatted as 'Month Day, Year'.
 *
 * @return The formatted date string.
 */
public String getDate() {
    // Your implementation here
}
```

In Java, you would typically use the `java.time` package to format dates. Here's an example of how you might implement the `getDate()` method using `java.time.LocalDate` and `DateTimeFormatter`:

```java
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

/**
 * Gets the current date formatted as 'Month Day, Year'.
 *
 * @return The formatted date string.
 */
public String getDate() {
    LocalDate currentDate = LocalDate.now();
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MMMM dd, yyyy");
    return currentDate.format(formatter);
}
```

This implementation will give you the current date in the format "Month Day, Year" (e.g., "September 21, 2023").