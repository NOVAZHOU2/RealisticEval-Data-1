Sure! Here is the equivalent TypeScript code for your Python function:

```typescript
import { DataFrame } from 'pandas-js';

interface DataFrameToMarkdownOptions {
    df: DataFrame;
    mdPath: string;
}

function dataframeToMarkdown({ df, mdPath }: DataFrameToMarkdownOptions): string {
    /**
     * Convert a DataFrame object to a table in markdown format.
     * For example:
     *      Input: dataframe {'Name': ['Alice', 'Bob'], 'Age': [25, 30]}
     *      Output: | Name | Age |
     *              | --- | --- |
     *              | Alice | 25 |
     *              | Bob | 30 |
     *
     * @param {DataFrame} df - The DataFrame to convert.
     * @param {string} mdPath - The output markdown file path.
     * @returns {string} - The markdown file content.
     */
    
    // Convert DataFrame to Markdown
    const columns = df.columns.map(col => `| ${col} |`).join('\n');
    const separator = '|'.padEnd(columns.length, '-');
    const rows = df.values.map(row => row.map(cell => `| ${cell} |`).join('')).join('\n');

    const markdownContent = `${columns}\n${separator}\n${rows}`;

    // Optionally, write the markdown content to a file if needed
    // fs.writeFileSync(mdPath, markdownContent);

    return markdownContent;
}
```

Please note that `pandas-js` is a fictional package for demonstration purposes since there isn't an official TypeScript version of pandas available at the moment. If you need to work with DataFrames in TypeScript, you might want to use libraries like `dataframe-js`, but be aware that these are not officially supported and may require additional setup.

If you have any specific requirements or issues with this code, feel free to let me know!