Sure! Below is the equivalent Java JUnit test case for the provided JavaScript Jest test function `incrementNumber`.

First, let's define the `incrementNumber` method in a class called `Calculator`. Then, we'll write the corresponding JUnit test case in a class named `Tester`.

### Calculator.java
```java
public class Calculator {
    /**
     * Increments the entered number.
     * If the number is non-positive (<= 0), returns the original value.
     * If the number is positive, returns the value plus 1.
     *
     * @param num - The number to increment.
     * @return - The incremented value or the original number.
     */
    public int incrementNumber(int num) {
        if (num <= 0) {
            return num;
        } else {
            return num + 1;
        }
    }
}
```

### Tester.java
```java
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class Tester {
    private Calculator calculator;

    @BeforeEach
    public void setUp() {
        calculator = new Calculator();
    }

    @Test
    public void testIncrementNumberNonPositive() {
        assertEquals(0, calculator.incrementNumber(0));
        assertEquals(-5, calculator.incrementNumber(-5));
    }

    @Test
    public void testIncrementNumberPositive() {
        assertEquals(2, calculator.incrementNumber(1));
        assertEquals(10, calculator.incrementNumber(9));
    }
}
```

### Explanation:
1. **Calculator Class**:
   - The `incrementNumber` method takes an integer `num` and increments it if it is positive. Otherwise, it returns the original number.

2. **Tester Class**:
   - We use JUnit 5 annotations (`@BeforeEach`, `@Test`) to set up and run our tests.
   - The `setUp` method initializes a new instance of `Calculator` before each test.
   - The `testIncrementNumberNonPositive` method checks that non-positive numbers remain unchanged.
   - The `testIncrementNumberPositive` method checks that positive numbers are incremented correctly.

This setup ensures that your Java code behaves similarly to the JavaScript code you provided.