Sure! Here's how you can translate the JavaScript function into Java:

```java
public class Main {
    public static void main(String[] args) {
        // Example usage:
        int result = incrementNumber(5);
        System.out.println(result); // Output: 6

        result = incrementNumber(-3);
        System.out.println(result); // Output: -3
    }

    /**
     * Increments the entered number.
     * If the number is non-positive (<= 0), returns the original value.
     * If the number is positive, returns the value plus 1.
     *
     * @param num - The number to increment.
     * @return The incremented value or the original number.
     */
    public static int incrementNumber(int num) {
        if (num <= 0) {
            return num;
        } else {
            return num + 1;
        }
    }
}
```

### Explanation:
- **Class and Method**: In Java, functions are part of classes. I've wrapped your function inside a `Main` class.
- **Return Type**: Since Java requires explicit return types, I've changed the return type of `incrementNumber` to `int`.
- **Parameter Type**: Similarly, I've changed the parameter type from `{number}` to `int`, which is the most common numeric type in Java for integers.
- **Conditional Statements**: The conditional logic remains the same, checking if the number is less than or equal to zero and returning the appropriate value.

This Java version should work similarly to your JavaScript function.