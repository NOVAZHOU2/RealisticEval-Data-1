Certainly! Below is the equivalent C++ code for the provided Python function. This code will convert a hexadecimal color code to an ANSI escape code, ensuring that the functionality and logic remain consistent with the original Python implementation:

```cpp
#include <iostream>
#include <string>
#include <stdexcept>

// Function to convert a hexadecimal color code to an ANSI escape code
std::string hex_to_ansi(const std::string& hex_color) {
    // Check if the input is a valid hex color
    if (hex_color.length() != 7 || hex_color[0] != '#') {
        throw std::invalid_argument("Invalid hex color format. Use '#RRGGBB'.");
    }

    // Extract the red, green, and blue components from the hex string
    int r = std::stoi(hex_color.substr(1, 2), nullptr, 16);
    int g = std::stoi(hex_color.substr(3, 2), nullptr, 16);
    int b = std::stoi(hex_color.substr(5, 2), nullptr, 16);

    // Create the ANSI escape code
    std::string ansi_code = "\x1b[38;2;" + std::to_string(r) + ";" + std::to_string(g) + ";" + std::to_string(b) + "m";

    return ansi_code;
}

int main() {
    try {
        std::string hex_color = "#FF5733";
        std::string ansi_code = hex_to_ansi(hex_color);
        std::cout << "ANSI Code: " << ansi_code << std::endl;
    } catch (const std::exception& e) {
        std::cerr << "Error: " << e.what() << std::endl;
    }

    return 0;
}
```

### Explanation:
1. **Validation**: The function checks if the input string is a valid hexadecimal color code by verifying its length and the presence of the `#` character at the beginning.
2. **Conversion**: It extracts the red (`R`), green (`G`), and blue (`B`) components from the hexadecimal string using `std::stoi` with base 16.
3. **ANSI Escape Code Creation**: It constructs the ANSI escape code by concatenating the extracted values into a formatted string.
4. **Exception Handling**: In the `main` function, it catches any exceptions thrown during the conversion process and prints an error message.

This C++ code maintains the same functionality and logic as the original Python code.