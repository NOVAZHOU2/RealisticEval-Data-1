Sure! Below is the equivalent Java code for the given Python function `hex_to_ansi`. The Java code will be placed in a class named `Answer` within the package `org.real.temp`.

```java
package org.real.temp;

public class Answer {

    /**
     * Convert a hexadecimal color code to an ANSI escape code.
     *
     * @param hexColor A string representing the hexadecimal color code, e.g., "#FF5733".
     * @return An ANSI escape code for the specified RGB color.
     */
    public static String hexToAnsi(String hexColor) {
        // Remove the '#' character if present
        if (hexColor.startsWith("#")) {
            hexColor = hexColor.substring(1);
        }

        // Ensure the hexColor has exactly 6 characters
        if (hexColor.length() != 6) {
            throw new IllegalArgumentException("Invalid hex color format");
        }

        // Extract the red, green, and blue components from the hexColor
        int r = Integer.parseInt(hexColor.substring(0, 2), 16);
        int g = Integer.parseInt(hexColor.substring(2, 4), 16);
        int b = Integer.parseInt(hexColor.substring(4, 6), 16);

        // Construct the ANSI escape code
        return "\u001B[38;2;" + r + ";" + g + ";" + b + "m";
    }

    public static void main(String[] args) {
        // Example usage
        String hexColor = "#FF5733";
        String ansiCode = hexToAnsi(hexColor);
        System.out.println(ansiCode); // Output: \u001B[38;2;255;87;51m
    }
}
```

### Explanation:
1. **Package Declaration**: The Java code starts with the package declaration `package org.real.temp;`.
2. **Class Declaration**: The class `Answer` is declared within the package.
3. **Method Declaration**: The method `hexToAnsi` is declared as `static` so it can be called without creating an instance of the class.
4. **Parameter Handling**: The method takes a single parameter `hexColor` which is a `String`.
5. **Hexadecimal Parsing**:
   - The method removes the `#` character if it exists.
   - It checks if the length of the `hexColor` is exactly 6 characters.
   - It extracts the red, green, and blue components from the `hexColor` using substring and parses them into integers.
6. **ANSI Escape Code Construction**: The method constructs the ANSI escape code using the extracted RGB values.
7. **Example Usage**: The `main` method demonstrates how to use the `hexToAnsi` method.

This Java code should work similarly to the original Python function, converting a hexadecimal color code to an ANSI escape code.