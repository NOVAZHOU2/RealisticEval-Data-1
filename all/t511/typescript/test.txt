Sure! Below is the equivalent TypeScript test case using Jest:

```typescript
import { describe, it, expect } from '@jest/globals';

describe('hex_to_ansi', () => {
  it('should convert a hexadecimal color code to an ANSI escape code', () => {
    const hexToAnsi = (hexColor: string): string => {
      // Implementation of the function goes here
      // For example:
      const r = parseInt(hexColor.slice(1, 3), 16);
      const g = parseInt(hexColor.slice(3, 5), 16);
      const b = parseInt(hexColor.slice(5, 7), 16);
      return `\x1b[38;2;${r};${g};${b}m`;
    };

    expect(hexToAnsi('#FF5733')).toBe('\x1b[38;2;255;87;51m');
    expect(hexToAnsi('#000000')).toBe('\x1b[38;2;0;0;0m');
    expect(hexToAnsi('#FFFFFF')).toBe('\x1b[38;2;255;255;255m');
  });
});
```

In this TypeScript test case, we define a `describe` block with the name 'hex_to_ansi' and an `it` block with the description 'should convert a hexadecimal color code to an ANSI escape code'. Inside the `it` block, we use the `expect` function to assert that the output of the `hexToAnsi` function matches the expected ANSI escape codes for different hexadecimal color values.