Sure, here is how you can convert the JavaScript function to C++:

```cpp
#include <iostream>
#include <chrono>
#include <ctime>

/**
 * Calculate age based on the birth date string entered by the user.
 * Input birthDateString format such as 2000-01-01
 * @param birthDateString
 * @return int
 */
int calculateAge(const std::string& birthDateString) {
    // Convert the input string to a time_t object
    tm tm = {};
    strptime(birthDateString.c_str(), "%Y-%m-%d", &tm);

    // Get the current time
    auto now = std::chrono::system_clock::now();
    auto now_c = std::chrono::system_clock::to_time_t(now);
    tm now_tm = *std::localtime(&now_c);

    // Calculate the difference in years
    int age = now_tm.tm_year - tm.tm_year;

    // Adjust if the birthday has not occurred yet this year
    if (now_tm.tm_mon < tm.tm_mon || 
        (now_tm.tm_mon == tm.tm_mon && now_tm.tm_mday < tm.tm_mday)) {
        --age;
    }

    return age;
}

int main() {
    std::string birthDateString = "2000-01-01";
    std::cout << "Age: " << calculateAge(birthDateString) << std::endl;
    return 0;
}
```

This C++ code does the following:
1. Converts the input string (`birthDateString`) into a `tm` structure using `strptime`.
2. Retrieves the current date and time using `std::chrono::system_clock::now()` and converts it to a `tm` structure.
3. Calculates the preliminary age by subtracting the birth year from the current year.
4. Adjusts the age if the birthday hasn't occurred yet this year.

Make sure to include the necessary headers for handling dates and times in C++. The `main` function demonstrates how to use the `calculateAge` function with an example birth date string.