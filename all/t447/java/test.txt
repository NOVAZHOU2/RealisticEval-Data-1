Here’s how you can convert your JavaScript Jest test cases into JUnit 4 test cases in Java:

```java
package org.real.temp;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class Tester {

    @Test
    public void testCalculateAgeForBirthDateInThePast() {
        assertEquals(new Date().getYear() + 1900 - 2000, Integer.parseInt(calculateAge("2000-01-01")));
    }

    @Test
    public void testCalculateAgeForBirthDateInTheLongPast() {
        assertEquals(new Date().getYear() + 1900 - 1000, Integer.parseInt(calculateAge("1000-01-01")));
    }

    @Test
    public void testCalculateAgeForBirthDateToday() {
        String today = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
        assertEquals(0, Integer.parseInt(calculateAge(today)));
    }

    @Test
    public void testCalculateAgeForPersonBornYesterday() {
        Calendar yesterday = Calendar.getInstance();
        yesterday.add(Calendar.DAY_OF_MONTH, -1); // Set to yesterday
        String birthDateString = new SimpleDateFormat("yyyy-MM-dd").format(yesterday.getTime());
        assertEquals(0, Integer.parseInt(calculateAge(birthDateString)));
    }

    // Assuming this method exists in the same class or is imported
    public static String calculateAge(String birthDateString) {
        // Your calculateAge method implementation here
        // ...
        return "age"; // Placeholder return
    }
}
```

### Notes:
1. **Assertions**: In Java, we use `assertEquals` for assertions. The expected and actual values are specified accordingly.
2. **Date Handling**: In the tests, the current year is retrieved using `new Date().getYear() + 1900` to correctly get the year, since `getYear()` returns the year minus 1900.
3. **Date Formatting**: Used `SimpleDateFormat` to format dates for comparison.
4. **Integer Parsing**: Used `Integer.parseInt` to convert the return value of `calculateAge` from `String` to `int` for the assertions. 

You’ll need to implement the `calculateAge` method in the same class or import it if it’s defined elsewhere.