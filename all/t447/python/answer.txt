Sure! Here's how you can convert the given JavaScript function into Python:

```python
from datetime import datetime

def calculate_age(birth_date_string):
    try:
        # Parse the birth date string into a datetime object
        birth_date = datetime.strptime(birth_date_string, "%Y-%m-%d")
        
        # Get today's date
        today = datetime.today()
        
        # Calculate the difference in years
        age = today.year - birth_date.year
        
        # Adjust the age if the current date is before the birthday in the current year
        if (today.month, today.day) < (birth_date.month, birth_date.day):
            age -= 1
        
        return age
    except ValueError:
        return "Invalid date format. Please enter the date in YYYY-MM-DD format."

# Example usage:
# print(calculate_age("2000-01-01"))
```

### Explanation:
1. **Importing `datetime`**: We use Python's built-in `datetime` module to handle dates.
2. **Parsing the Date**: The `strptime` method from the `datetime` class is used to parse the input date string into a `datetime` object.
3. **Calculating Age**: We calculate the age by subtracting the birth year from the current year and adjusting for whether the current date has passed the birthdate in the current year.
4. **Error Handling**: If the input date string is not in the correct format (`YYYY-MM-DD`), a `ValueError` will be raised, and an error message is returned.

This Python function should work similarly to your original JavaScript function.