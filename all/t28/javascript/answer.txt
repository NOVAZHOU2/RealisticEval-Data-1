Here is the equivalent JavaScript function for your Python code:

```javascript
function printMemoryBits(memorySection) {
    /*
    Prints the status of each bit (0 or 1) in the given section of memory.
    For example:
        input: 0b10101010
        output: 10101010
    If have multiple bytes use \n split
    For example:
        input: [0b11001100, 0b11110000]
        output: 11001100\n11110000

    Args:
        memorySection (ArrayBuffer): An ArrayBuffer object representing the section of memory to be read.

    Returns:
        void
    */

    let binaryString = '';
    let view = new DataView(memorySection);
    
    for(let i=0; i < view.byteLength; i++) {
        let byte = view.getUint8(i).toString(2).padStart(8, '0');
        binaryString += byte + '\n';
    }
    
    console.log(binaryString.trim());
}
```

This JavaScript function uses `DataView` to access and interpret the bytes in the provided `ArrayBuffer`. The `getUint8()` method reads an 8-bit unsigned integer from the specified byte offset of the `ArrayBuffer`, and then converts it to a binary string with leading zeros if necessary using `padStart()`. These strings are concatenated together with newline characters (`\n`) between them, and finally printed to the console using `console.log()`.