Sure, I can help you convert the given Python code into JavaScript while maintaining the same functionality, logic, and structure. Hereâ€™s how you can achieve this:

```javascript
function printMemoryBits(memorySection) {
    /**
     * Prints the status of each bit (0 or 1) in the given section of memory.
     *
     * @param {Uint8Array} memorySection - An Uint8Array representing the section of memory to be read.
     */
    for (let byte of memorySection) {
        let bits = '';
        for (let i = 7; i >= 0; i--) {
            bits += (byte >> i) & 1;
        }
        console.log(bits);
    }
}

// Example usage:
const memorySection = new Uint8Array([255, 128, 64, 32, 16, 8, 4, 2, 1, 0]);
printMemoryBits(memorySection);
```

### Explanation:
1. **Function Definition**: The function `printMemoryBits` takes an `Uint8Array` as an argument, which represents the section of memory to be read.
2. **Loop Through Bytes**: The outer loop iterates through each byte in the `memorySection`.
3. **Bit Extraction**: For each byte, the inner loop extracts each bit from the most significant bit (MSB) to the least significant bit (LSB).
4. **Concatenation**: The bits are concatenated into a string.
5. **Print**: The resulting string of bits is printed to the console.

This JavaScript code will behave similarly to the provided Python code by printing the bits of each byte in the `memorySection`.