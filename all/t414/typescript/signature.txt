Here's the equivalent TypeScript code for the given Python function, including the documentation comments:

```typescript
/**
 * Extracts the title, author, and year from a BibTeX file.
 * Example BibTeX file content:
 * 
 * @article{sample2024,
 *   author = {John Doe and Jane Smith},
 *   title = {A Comprehensive Study on AI},
 *   year = {2024}
 * }
 * 
 * @param bibFile - The path to the BibTeX file.
 * @returns An array of objects, each containing title, author, and year for each article.
 */
function extractBibInfo(bibFile: string): { title: string; author: string; year: string }[] {
    // Function implementation would go here
}
```

In this TypeScript code:

- The function `extract_bib_info` is renamed to `extractBibInfo` to follow the camelCase naming convention commonly used in TypeScript.
- The parameter `bib_file` is renamed to `bibFile` for consistency with camelCase naming.
- The return type annotation `{ title: string; author: string; year: string }[]` specifies an array of objects with properties `title`, `author`, and `year`.
- The Python docstring is converted to JSDoc-style comments, which are commonly used in TypeScript for documentation and type checking.

You can fill in the actual implementation of the function within the body of `extractBibInfo`.