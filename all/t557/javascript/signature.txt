Certainly! Here is the equivalent JavaScript code with the function signature and JSDoc comments:

```javascript
/**
 * Convert an angle from radians to degrees.
 * 
 * @param {number} radians - The angle in radians to convert.
 * @return {number} The angle in degrees.
 */
function radiansToDegrees(radians) {
    const degrees = radians * (180 / Math.PI);
    return degrees;
}
```

In this JavaScript code:
- The function `radiansToDegrees` is defined with a single parameter `radians`.
- The JSDoc comment block provides detailed documentation for the function, including the parameter type and description, as well as the return type and description.
- The logic inside the function remains the same, converting radians to degrees using the formula `radians * (180 / Math.PI)`.

If you need the return type to be explicitly an integer, you can modify the function as follows:

```javascript
/**
 * Convert an angle from radians to degrees.
 * 
 * @param {number} radians - The angle in radians to convert.
 * @return {number} The angle in degrees, rounded to the nearest integer.
 */
function radiansToDegrees(radians) {
    const degrees = Math.round(radians * (180 / Math.PI));
    return degrees;
}
```

This version uses `Math.round` to round the result to the nearest integer, ensuring the return type is an integer.