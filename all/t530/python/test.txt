Sure! Here is the equivalent Python unit test case using the `unittest` framework:

```python
import unittest

def create_matrix(rows, columns, initial_value):
    return [[initial_value for _ in range(columns)] for _ in range(rows)]

class TestCreateMatrix(unittest.TestCase):

    def test_create_matrix_with_integers(self):
        result = create_matrix(2, 3, 5)
        expected = [[5, 5, 5], [5, 5, 5]]
        self.assertEqual(result, expected)

    def test_create_matrix_with_strings(self):
        result = create_matrix(3, 2, "hello")
        expected = [["hello", "hello"], ["hello", "hello"], ["hello", "hello"]]
        self.assertEqual(result, expected)

    def test_create_matrix_with_floats(self):
        result = create_matrix(1, 4, 3.14)
        expected = [[3.14, 3.14, 3.14, 3.14]]
        self.assertEqual(result, expected)

if __name__ == '__main__':
    unittest.main()
```

This Python script defines a function `create_matrix` that creates a two-dimensional list (matrix) filled with the specified initial value. It then includes a set of unit tests to verify the functionality of the `create_matrix` function with different types of initial values (integers, strings, floats).