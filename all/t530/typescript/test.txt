Certainly! Below is the TypeScript version of your JavaScript Jest test case using `describe`:

```typescript
import { createMatrix } from './createMatrix'; // Adjust the import path accordingly

describe('createMatrix', () => {
  it('should create a matrix with the specified number of rows and columns, filled with the given initial value', () => {
    const rows = 3;
    const columns = 4;
    const initialValue = 'test';

    const matrix = createMatrix(rows, columns, initialValue);

    expect(matrix).toBeInstanceOf(Array);
    expect(matrix.length).toBe(rows);

    for (let i = 0; i < rows; i++) {
      expect(matrix[i]).toBeInstanceOf(Array);
      expect(matrix[i].length).toBe(columns);

      for (let j = 0; j < columns; j++) {
        expect(matrix[i][j]).toBe(initialValue);
      }
    }
  });

  it('should handle edge cases', () => {
    const rows = 0;
    const columns = 0;
    const initialValue = true;

    const matrix = createMatrix(rows, columns, initialValue);

    expect(matrix).toEqual([]);
  });
});
```

### Explanation:
1. **Import Statement**: The `createMatrix` function is imported at the top of the file. Adjust the import path according to where your function is located.

2. **Describe Block**: The `describe` block groups related tests together under a common name, which in this case is `'createMatrix'`.

3. **First Test Case**:
   - **Test Description**: The first test checks if the `createMatrix` function correctly creates a matrix with the specified dimensions and fills it with the given initial value.
   - **Assertions**:
     - `expect(matrix).toBeInstanceOf(Array);`: Ensures that the returned value is an array.
     - `expect(matrix.length).toBe(rows);`: Checks that the number of rows matches the expected value.
     - Nested loops iterate over each element in the matrix to ensure they all contain the initial value.

4. **Second Test Case**:
   - **Test Description**: This test handles edge cases, such as creating a matrix with zero rows or columns.
   - **Assertion**: `expect(matrix).toEqual([]);`: Ensures that an empty array is returned when both rows and columns are zero.

Make sure you have TypeScript and Jest set up in your project before running these tests. If you need further assistance, feel free to ask!