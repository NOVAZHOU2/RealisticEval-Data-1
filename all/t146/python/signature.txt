Hereâ€™s how you can convert the given TypeScript function signature to a Python function signature while keeping the comments intact:
python
def format_bytes(bytes: int, options: dict = None) -> str:
    """
    Formats a given number of bytes into a human-readable string representation,
    using either the SI (decimal) or binary (accurate) size notation.

    :param bytes: The number of bytes to format.
    :param options: Optional settings to customize the output.
    :param options['decimals']: Number of decimal places to include in the result.
    :param options['sizeType']: Specifies whether to use binary ("accurate") or 
        decimal ("normal") units.
        "accurate" uses units like KiB, MiB (base 1024).
        "normal" uses units like KB, MB (base 1000).
    :returns: A string representation of the byte size in a human-readable format.
    """
Key Changes Made:
Function Name and Parameters: The function keyword was removed, and function_name was changed to format_bytes to follow Python naming conventions.
Types:
Changed number to int for the bytes parameter, as Python uses int for integers.
Changed Object to dict for options, and set a default value of None.
The TypeScript string return type was changed to str.
Docstring: Transformed the comment block into a Python docstring format using triple quotes.
Parameter Descriptions: Updated the parameter descriptions to fit the Python style.
This retains the essence of the original TypeScript code while adapting it to Python syntax and conventions.