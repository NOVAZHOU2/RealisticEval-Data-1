import math

# input file: the exported measurement csv file directly from Measuralyze application. No changes needed.
FILE_PATH = "question/measurements_20240430_104703_d2_p1.csv"


def haversine(lat1, lon1, lat2, lon2):
    """
    uses Haversine formula to calculate distance between two points on the Earth's surface
    given their latitude and longitude, accounting for earth's curvature.
    Code mostly generated by chatgpt but after further research, clearly taken from
    https://stackoverflow.com/a/4913653/23678851 during training process.
    """
    # Convert latitude and longitude from degrees to radians
    lat1, lon1, lat2, lon2 = map(math.radians, [lat1, lon1, lat2, lon2])

    # Haversine formula
    deltaLon = lon2 - lon1
    deltaLat = lat2 - lat1
    a = math.sin(deltaLat / 2) ** 2 + math.cos(lat1) * math.cos(lat2) * math.sin(deltaLon / 2) ** 2
    c = 2 * math.atan2(math.sqrt(a), math.sqrt(1 - a))

    """ 
    according to https://rechneronline.de/earth-radius/, the earth radius for an elevation of 
    425m above sea level and a latitude of 47 (most of Switzerland) is 6367.168 km, instead of the
    rounded 6371 that would be standard in calculations like these.
    This will VERY marginally improve distance error for Switzerland.
    """
    r = 6367.168  # Radius of Earth in kilometers
    return r * c * 1000  # Convert to meters
