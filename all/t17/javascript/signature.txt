Certainly! Below is the equivalent JavaScript code with the function signature and comments rewritten to conform to JavaScript documentation standards using JSDoc format:

```javascript
/**
 * Calculate the distance between two points on the Earth based on their latitude and longitude.
 * 
 * @param {number} lat1 - Latitude of the first point in degrees.
 * @param {number} lon1 - Longitude of the first point in degrees.
 * @param {number} lat2 - Latitude of the second point in degrees.
 * @param {number} lon2 - Longitude of the second point in degrees.
 * @returns {number} Distance between the two points in kilometers.
 */
function haversineDistance(lat1, lon1, lat2, lon2) {
    // Radius of the Earth in kilometers
    const R = 6371.0;

    // Convert latitude and longitude from degrees to radians
    const lat1Rad = (lat1 * Math.PI) / 180;
    const lon1Rad = (lon1 * Math.PI) / 180;
    const lat2Rad = (lat2 * Math.PI) / 180;
    const lon2Rad = (lon2 * Math.PI) / 180;

    // Differences in coordinates
    const dlat = lat2Rad - lat1Rad;
    const dlon = lon2Rad - lon1Rad;

    // Haversine formula
    const a = Math.sin(dlat / 2) ** 2 + Math.cos(lat1Rad) * Math.cos(lat2Rad) * Math.sin(dlon / 2) ** 2;
    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));

    // Distance in kilometers
    const distance = R * c;

    return distance;
}
```

In this JavaScript code:
- The function signature is defined with parameters `lat1`, `lon1`, `lat2`, and `lon2`.
- The JSDoc comments provide clear documentation for the function, including parameter descriptions and the return value.
- The implementation remains the same as the original Python code, ensuring the functionality is preserved.