Sure! Below is the equivalent JavaScript code for the provided Python function:

```javascript
function haversineDistance(lat1, lon1, lat2, lon2) {
    /**
     * Calculate the distance between two points on the Earth based on their latitude and longitude.
     * @param {number} lat1 - Latitude of the first point in degrees.
     * @param {number} lon1 - Longitude of the first point in degrees.
     * @param {number} lat2 - Latitude of the second point in degrees.
     * @param {number} lon2 - Longitude of the second point in degrees.
     * @returns {number} Distance between the two points in kilometers.
     */

    const R = 6371; // Radius of the Earth in kilometers

    function toRadians(degrees) {
        return degrees * Math.PI / 180;
    }

    const dLat = toRadians(lat2 - lat1);
    const dLon = toRadians(lon2 - lon1);

    const a =
        Math.sin(dLat / 2) * Math.sin(dLat / 2) +
        Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) *
        Math.sin(dLon / 2) * Math.sin(dLon / 2)
    ;

    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));

    return R * c; // Distance in kilometers
}
```

This JavaScript function `haversineDistance` takes four parameters representing the latitude and longitude of two points and returns the distance between them in kilometers using the Haversine formula.