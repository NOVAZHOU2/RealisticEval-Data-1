Here is how you could translate your Python unittest test class into a Jest test case in TypeScript:

```typescript
import { describe, it, expect } from '@jest/globals';

describe('haversine_distance', () => {
  it('should return correct distance for given coordinates', () => {
    const result = haversine_distance(52.2296756, 21.0122287, 41.8919300, 12.5113300);
    expect(result).toBeCloseTo(1317.504); // Replace with actual expected value
  });

  function haversine_distance(lat1: number, lon1: number, lat2: number, lon2: number): number {
    // Implement your haversine_distance logic here
    // ...
    return 0; // Replace with actual implementation
  }
});
```

In this example, we're using `@jest/globals` package which provides global functions like `describe`, `it`, and `expect`. The `describe` function groups related tests together, while `it` is used to define an individual test case. The `expect` function is used to assert that the output of the `haversine_distance` function matches the expected value.

Please replace the placeholders with your actual implementation of the `haversine_distance` function and the expected values.