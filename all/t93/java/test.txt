Hereâ€™s the equivalent JUnit 4 test case in Java for the provided Jest test code:

```java
package org.real.temp;

import org.junit.Test;
import static org.junit.Assert.*;

public class Tester {

    @Test
    public void testGetAllAlphabetsLength() {
        char[] result = AlphabetUtil.getAllAlphabets();
        assertEquals(52, result.length);
    }

    @Test
    public void testGetAllAlphabetsLowercase() {
        char[] result = AlphabetUtil.getAllAlphabets();
        char[] lowercaseAlphabets = new char[26];
        System.arraycopy(result, 0, lowercaseAlphabets, 0, 26);
        
        char[] expected = {
            'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 
            'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 
            'u', 'v', 'w', 'x', 'y', 'z'
        };
        
        assertArrayEquals(expected, lowercaseAlphabets);
    }

    @Test
    public void testGetAllAlphabetsUppercase() {
        char[] result = AlphabetUtil.getAllAlphabets();
        char[] uppercaseAlphabets = new char[26];
        System.arraycopy(result, 26, uppercaseAlphabets, 0, 26);
        
        char[] expected = {
            'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 
            'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 
            'U', 'V', 'W', 'X', 'Y', 'Z'
        };
        
        assertArrayEquals(expected, uppercaseAlphabets);
    }

    @Test
    public void testGetAllAlphabetsFirstElement() {
        char[] result = AlphabetUtil.getAllAlphabets();
        assertEquals('a', result[0]);
    }

    @Test
    public void testGetAllAlphabetsLastElement() {
        char[] result = AlphabetUtil.getAllAlphabets();
        assertEquals('Z', result[result.length - 1]);
    }
}
```

### Explanation:
- Each test method corresponds to a specific test case from the original Jest code.
- `assertEquals` and `assertArrayEquals` are used for assertions to check the expected results.
- The `System.arraycopy` method is used to extract the lowercase and uppercase letters from the result.