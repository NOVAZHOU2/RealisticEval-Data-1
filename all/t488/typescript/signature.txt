Sure, here's the TypeScript code signature with the same comments:

```typescript
import { exec } from 'child_process';
import * as re from 're';

/**
 * Retrieve the local IP address of the specified network interface on Windows.
 *
 * @param {string} [interface='Wi-Fi'] - The name of the network interface to check (default is 'Wi-Fi').
 * @returns {Promise<string | null>} A promise that resolves to the local IP address if found, otherwise null.
 */
async function getLocalIP(interface: string = 'Wi-Fi'): Promise<string | null> {
```

Note that in TypeScript, we use `Promise` instead of `Optional` for asynchronous operations like retrieving an IP address. Also, TypeScript doesn't have a direct equivalent to Python's `typing.Optional`, so we use `| null` to indicate that the return type can be either a string or `null`.