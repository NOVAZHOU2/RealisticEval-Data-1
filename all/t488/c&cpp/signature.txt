Here's the C++ code signature with similar functionality:

```cpp
#include <string>
#include <optional>

/**
 * Retrieve the local IP address of the specified network interface on Windows.
 *
 * @param interface The name of the network interface to check (default is 'Wi-Fi').
 * @return The local IP address if found, otherwise std::nullopt.
 */
std::optional<std::string> getLocalIP(const std::string& interface = "Wi-Fi");
```

This C++ function signature uses `std::optional` instead of Python's `Optional`, and it takes a `const std::string&` for the interface parameter. The return type is also `std::optional<std::string>` to represent an optional string value.