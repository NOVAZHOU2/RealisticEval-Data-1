To convert the provided Python unittest test class to a C++ test case using Catch2, you'll need to create a new C++ source file and include the necessary headers for Catch2 and your function. Below is an example of how you might write the equivalent C++ test case:

1. **Install Catch2**: If you haven't already installed Catch2, you can do so via vcpkg or manually download it from its GitHub repository.

2. **Create a C++ Source File**: Let's call it `test_classify_files.cpp`.

3. **Write the Test Case**:

```cpp
#include <catch2/catch.hpp>
#include "classify_files.h" // Assuming your function is in a header file named classify_files.h

// Function declaration if not included in classify_files.h
std::map<std::string, std::vector<std::string>> classify_files_by_extension(const std::vector<std::string>& file_names);

TEST_CASE("Classify files by extension", "[classify_files]") {
    SECTION("Empty list") {
        std::vector<std::string> empty_list = {};
        auto result = classify_files_by_extension(empty_list);
        REQUIRE(result.empty());
    }

    SECTION("List with one file") {
        std::vector<std::string> single_file = {"example.txt"};
        auto result = classify_files_by_extension(single_file);
        REQUIRE(result.size() == 1);
        REQUIRE(result["txt"] == std::vector<std::string>{"example.txt"});
    }

    SECTION("List with multiple files") {
        std::vector<std::string> multiple_files = {"image.png", "document.pdf", "script.py", "data.csv"};
        auto result = classify_files_by_extension(multiple_files);
        REQUIRE(result.size() == 4);
        REQUIRE(result["png"] == std::vector<std::string>{"image.png"});
        REQUIRE(result["pdf"] == std::vector<std::string>{"document.pdf"});
        REQUIRE(result["py"] == std::vector<std::string>{"script.py"});
        REQUIRE(result["csv"] == std::vector<std::string>{"data.csv"});
    }
}
```

### Explanation:

- **Include Headers**: The `#include <catch2/catch.hpp>` directive includes the Catch2 library.
- **Function Declaration**: Ensure that the function `classify_files_by_extension` is declared either in the same file or in a header file that is included (`classify_files.h`).
- **Test Cases**:
  - **Empty List**: Checks if the function returns an empty map when given an empty list of file names.
  - **Single File**: Verifies that a single file name is correctly classified into its extension category.
  - **Multiple Files**: Ensures that multiple file names are correctly grouped by their respective extensions.

### Running the Tests:

To run the tests, you need to compile your C++ code with the Catch2 library. Hereâ€™s an example command using g++:

```sh
g++ -o test_classify_files test_classify_files.cpp -I/path/to/catch2/single_include
./test_classify_files
```

Make sure to replace `/path/to/catch2/single_include` with the actual path where the Catch2 header files are located on your system.

This should give you a good starting point for converting your Python unittest test cases to C++ using Catch2.