Here is how you can convert your Python unittest test class into a Jest test case using JavaScript:

```javascript
const { classifyFilesByExtension } = require('./classifyFilesByExtension'); // Adjust the path accordingly

describe('classifyFilesByExtension', () => {
  it('should return an empty object for an empty list', () => {
    expect(classifyFilesByExtension([])).toEqual({});
  });

  it('should group files by extension', () => {
    const fileNames = ['file1.txt', 'file2.png', 'file3.txt'];
    const expectedOutput = { txt: ['file1.txt', 'file3.txt'], png: ['file2.png'] };
    expect(classifyFilesByExtension(fileNames)).toEqual(expectedOutput);
  });
});
```

In this example, we're assuming that `classifyFilesByExtension` function is exported from a module named `classifyFilesByExtension`. If it's in a different location, adjust the `require` statement accordingly. The `describe` function groups related tests together, while `it` defines individual test cases. The `expect` function is used to assert the output of the function against the expected result.