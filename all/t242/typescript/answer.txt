Here is the equivalent TypeScript code:

```typescript
interface FileNamesByExtension {
  [key: string]: string[];
}

function classifyFilesByExtension(fileNames: string[]): FileNamesByExtension {
  let result: FileNamesByExtension = {};

  for(let fileName of fileNames) {
    let extension = fileName.split('.').pop();
    if(!result[extension]) {
      result[extension] = [];
    }
    result[extension].push(fileName);
  }

  return result;
}
```

This function works similarly to your Python version. It iterates over each file name in the input array, extracts its extension (assuming it's separated from the filename by a period), and adds it to the output dictionary under the appropriate key. If the key does not yet exist in the dictionary, it is created first.