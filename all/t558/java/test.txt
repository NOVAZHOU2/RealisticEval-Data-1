Here's how you can convert the given Python unittest test class to Java using JUnit:

```java
import static org.junit.Assert.assertEquals;
import org.junit.Test;

public class Tester {
    
    @Test
    public void testDegreesToRadians() {
        // Test case 1: 0 degrees should be 0 radians
        assertEquals(0.0, degreesToRadians(0), 0.0001);
        
        // Test case 2: 90 degrees should be π/2 radians
        assertEquals(Math.PI / 2, degreesToRadians(90), 0.0001);
        
        // Test case 3: 180 degrees should be π radians
        assertEquals(Math.PI, degreesToRadians(180), 0.0001);
        
        // Test case 4: -90 degrees should be -π/2 radians
        assertEquals(-Math.PI / 2, degreesToRadians(-90), 0.0001);
    }
    
    /**
     * Convert an angle from degrees to radians.
     *
     * @param degrees The angle in degrees to convert.
     * @return The angle in radians.
     */
    private double degreesToRadians(int degrees) {
        return Math.toRadians(degrees);
    }
}
```

In this Java version, I've used `assertEquals` from JUnit to check if the results of `degreesToRadians` match expected values within a small tolerance (`0.0001`). Also, I've added some basic test cases for the method. Note that Java uses `double` instead of `float`, and `Math.toRadians` is used to perform the conversion, which is equivalent to your Python function.