Certainly! Below is the equivalent TypeScript code for the provided Python function:

```typescript
import { PI } from "mathjs";

function degreesToRadians(degrees: number): number {
    /**
     * Convert an angle from degrees to radians.
     *
     * @param degrees - The angle in degrees to convert.
     * @returns The angle in radians.
     */
    const radians = degrees * (PI / 180);
    return radians;
}

// Example usage
console.log(degreesToRadians(90)); // Should output approximately 1.5707963267948966
```

### Explanation:
1. **Import Statement**: In TypeScript, we use `import` statements similar to Python's `import`. Since TypeScript does not have a built-in `math` module like Python, we can use `mathjs` or another library that provides mathematical constants and functions. For simplicity, I've used `mathjs` which is a popular math library for JavaScript/TypeScript.

2. **Function Definition**: The function `degreesToRadians` is defined with a parameter type of `number` and a return type of `number`.

3. **Documentation**: The docstring in Python is converted to JSDoc comments in TypeScript, which provide similar documentation benefits.

4. **Mathematical Calculation**: The calculation remains the same as in the Python version.

5. **Example Usage**: An example call to the function is included to demonstrate its usage.

This conversion ensures that the functionality and logic are preserved while adapting to TypeScript's syntax and type system.