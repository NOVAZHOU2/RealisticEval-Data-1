Certainly! Below is the equivalent TypeScript code for the provided Python function, including proper type annotations and JSDoc comments:

```typescript
/**
 * Convert an angle from degrees to radians.
 *
 * @param degrees - The angle in degrees to convert.
 * @returns The angle in radians.
 */
function degreesToRadians(degrees: number): number {
    const radians = degrees * (Math.PI / 180);
    return radians;
}

// Example usage
console.log(degreesToRadians(90)); // Should output approximately 1.5707963267948966
```

### Explanation:
1. **Function Definition**:
   - The function `degrees_to_radians` is renamed to `degreesToRadians` to follow TypeScript naming conventions.
   - The parameter `degrees` is typed as `number` in TypeScript, which is equivalent to `int` in Python.
   - The return type is specified as `number`, which corresponds to `float` in Python.

2. **JSDoc Comments**:
   - The Python docstring is converted to JSDoc comments using the `/** */` style.
   - The `Args` section is translated to `@param`, and the `Returns` section is translated to `@returns`.

3. **Mathematical Calculation**:
   - The calculation remains the same, using `Math.PI` which is the equivalent of `math.pi` in Python.

4. **Example Usage**:
   - An example call to the function is included to demonstrate its usage.

Here is the complete TypeScript code with proper documentation and type annotations:

```typescript
/**
 * Convert an angle from degrees to radians.
 *
 * @param degrees - The angle in degrees to convert.
 * @returns The angle in radians.
 */
function degreesToRadians(degrees: number): number {
    const radians = degrees * (Math.PI / 180);
    return radians;
}

// Example usage
console.log(degreesToRadians(90)); // Should output approximately 1.5707963267948966
```

This conversion preserves the original functionality and structure while adapting it to TypeScript's syntax and type system.