Sure! Below is the equivalent TypeScript test case using Jest for the given Python unittest test class:

```typescript
import { describe, it, expect } from '@jest/globals';

function degreesToRadians(degrees: number): number {
    /**
     * Convert an angle from degrees to radians.
     *
     * @param degrees - The angle in degrees to convert.
     * @returns The angle in radians.
     */
    return degrees * (Math.PI / 180);
}

describe('degreesToRadians', () => {
    it('converts 0 degrees to 0 radians', () => {
        expect(degreesToRadians(0)).toBe(0);
    });

    it('converts 180 degrees to π radians', () => {
        expect(degreesToRadians(180)).toBe(Math.PI);
    });

    it('converts 360 degrees to 2π radians', () => {
        expect(degreesToRadians(360)).toBe(2 * Math.PI);
    });

    it('converts 45 degrees to π/4 radians', () => {
        expect(degreesToRadians(45)).toBeCloseTo(Math.PI / 4);
    });
});
```

In this TypeScript code:
- We import `describe`, `it`, and `expect` from `@jest/globals`.
- We define the `degreesToRadians` function, which performs the same conversion as in your Python code.
- We use `describe` to group related tests together.
- We use `it` to create individual test cases.
- We use `expect` to assert that the output of `degreesToRadians` matches the expected result.

This setup ensures that your TypeScript code behaves as expected when converting degrees to radians.