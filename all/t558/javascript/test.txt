Sure! Below is the equivalent JavaScript test case using Jest for the provided Python `degrees_to_radians` function:

```javascript
const { degreesToRadians } = require('./path/to/your/module'); // Adjust the path accordingly

describe('degreesToRadians', () => {
  it('should convert 0 degrees to 0 radians', () => {
    expect(degreesToRadians(0)).toBeCloseTo(0);
  });

  it('should convert 180 degrees to π radians', () => {
    expect(degreesToRadians(180)).toBe(Math.PI);
  });

  it('should convert 90 degrees to π/2 radians', () => {
    expect(degreesToRadians(90)).toBe(Math.PI / 2);
  });

  it('should convert -90 degrees to -π/2 radians', () => {
    expect(degreesToRadians(-90)).toBe(-Math.PI / 2);
  });
});
```

Make sure to replace `'./path/to/your/module'` with the actual path to your module where the `degreesToRadians` function is defined.

Here's the implementation of the `degreesToRadians` function in JavaScript:

```javascript
function degreesToRadians(degrees) {
  return degrees * (Math.PI / 180);
}

module.exports = { degreesToRadians };
```

This JavaScript code defines the `degreesToRadians` function and exports it so that it can be imported in the test file. The Jest tests check various cases, including positive and negative angles, to ensure the function works correctly.