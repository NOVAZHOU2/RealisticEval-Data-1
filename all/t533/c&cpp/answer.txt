Sure! Here is the equivalent C++ code for shuffling the characters in a given string randomly:

```cpp
#include <iostream>
#include <algorithm>
#include <random>

/**
 * Shuffles the characters in a given string randomly.
 *
 * @param inputString - The string to shuffle.
 * @return A new string with the characters shuffled.
 */
std::string shuffleString(const std::string& inputString) {
    std::string shuffled = inputString;
    std::shuffle(shuffled.begin(), shuffled.end(), std::default_random_engine{});
    return shuffled;
}

int main() {
    std::string inputString = "example";
    std::string shuffledString = shuffleString(inputString);
    std::cout << "Original: " << inputString << "\nShuffled: " << shuffledString << std::endl;
    return 0;
}
```

### Explanation:
1. **Include Necessary Headers**: We include `<iostream>` for input/output operations, `<algorithm>` for the `std::shuffle` function, and `<random>` for generating random numbers.
2. **Function Definition**: The `shuffleString` function takes a constant reference to a `std::string` as its parameter and returns a `std::string`.
3. **Shuffling**: We create a copy of the input string (`shuffled`) and use `std::shuffle` to shuffle its characters. The `std::shuffle` function requires a random number generator, which we provide using `std::default_random_engine{}`.
4. **Main Function**: In the `main` function, we demonstrate how to use the `shuffleString` function by passing an example string and printing both the original and shuffled strings.

This C++ code will produce a shuffled version of the input string each time it is run.