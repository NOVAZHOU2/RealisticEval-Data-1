Sure! Below is the equivalent Java code for the provided JavaScript function `shuffleString`. This Java method shuffles the characters in a given string randomly and returns a new shuffled string.

```java
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;

public class StringShuffler {

    /**
     * Shuffles the characters in a given string randomly.
     *
     * @param inputString - The string to shuffle.
     * @return A new string with the characters shuffled.
     */
    public static String shuffleString(String inputString) {
        // Convert the input string into a list of characters
        List<Character> charList = new ArrayList<>();
        for (char c : inputString.toCharArray()) {
            charList.add(c);
        }

        // Shuffle the list of characters
        Collections.shuffle(charList);

        // Build and return the shuffled string
        StringBuilder shuffledString = new StringBuilder();
        for (Character c : charList) {
            shuffledString.append(c);
        }

        return shuffledString.toString();
    }

    public static void main(String[] args) {
        // Example usage
        String originalString = "hello";
        String shuffledString = shuffleString(originalString);
        System.out.println("Original: " + originalString);
        System.out.println("Shuffled: " + shuffledString);
    }
}
```

### Explanation:
1. **Convert the Input String to a List of Characters**: We first convert the input string into a list of characters so that we can easily shuffle them.
2. **Shuffle the List**: We use `Collections.shuffle()` to shuffle the list of characters randomly.
3. **Build the Shuffled String**: We then build a new string from the shuffled list of characters using a `StringBuilder`.
4. **Return the Shuffled String**: Finally, we return the newly shuffled string.

This Java code should work similarly to your JavaScript function, shuffling the characters in a given string randomly.