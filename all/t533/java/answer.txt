Sure! Below is the equivalent Java code for the provided JavaScript function `shuffleString`:

```java
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class StringShuffler {

    /**
     * Shuffles the characters in a given string randomly.
     *
     * @param inputString - The string to shuffle.
     * @return A new string with the characters shuffled.
     */
    public static String shuffleString(String inputString) {
        List<Character> charList = inputString.chars()
                                             .mapToObj(c -> (char) c)
                                             .collect(Collectors.toList());

        Collections.shuffle(charList);

        return charList.stream()
                        .map(String::valueOf)
                        .collect(Collectors.joining());
    }

    public static void main(String[] args) {
        String originalString = "example";
        String shuffledString = shuffleString(originalString);
        System.out.println("Original: " + originalString);
        System.out.println("Shuffled: " + shuffledString);
    }
}
```

### Explanation:
1. **Import Statements**: Import necessary classes from the `java.util` package.
2. **Class and Method Declaration**: Define a class `StringShuffler` with a static method `shuffleString`.
3. **Character List Creation**: Convert the input string into a list of characters using `IntStream` and `mapToObj`.
4. **Shuffling**: Use `Collections.shuffle` to shuffle the list of characters.
5. **Joining Characters**: Convert the list of characters back into a single string using `stream`, `map`, and `Collectors.joining`.

This Java code will achieve the same functionality as the provided JavaScript function.