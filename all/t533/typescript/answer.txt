Sure! Here's the TypeScript version of your JavaScript function:

```typescript
/**
 * Shuffles the characters in a given string randomly.
 *
 * @param {string} inputString - The string to shuffle.
 * @returns {string} A new string with the characters shuffled.
 */
function shuffleString(inputString: string): string {
    let result = inputString.split('');
    for (let i = result.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [result[i], result[j]] = [result[j], result[i]];
    }
    return result.join('');
}
```

### Explanation:
- **Type Annotations**: 
  - `inputString: string` specifies that the `inputString` parameter must be a string.
  - The function returns a `string`.

- **Array Operations**:
  - `split('')`: Converts the string into an array of characters.
  - `Math.random()`: Generates a random number between 0 (inclusive) and 1 (exclusive).
  - `[result[i], result[j]] = [result[j], result[i]]`: Swaps elements at indices `i` and `j` using destructuring assignment.

- **Joining Back**:
  - `join('')`: Combines the array back into a single string.

This TypeScript function maintains the functionality of shuffling the characters in a string while ensuring type safety.