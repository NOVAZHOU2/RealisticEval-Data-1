Here's the equivalent Jest test cases for the provided C++ Catch2 tests:

```typescript
import { sortNames } from './yourModule'; // Adjust the import based on your module structure

describe("sortNames Test Cases", () => {
    // Test Case 2: Same numbers, different names
    test("Same numbers, different names", () => {
        const arr2 = ["Alice10", "Charlie10", "Bob10"];
        const expected2 = ["Alice10", "Bob10", "Charlie10"];
        expect(sortNames(arr2)).toEqual(expected2);
    });

    // Test Case 3: Mixed case with different names and numbers
    test("Mixed case with different names and numbers", () => {
        const arr3 = ["Alice3", "Bob2", "Charlie3", "Bob1"];
        const expected3 = ["Bob1", "Bob2", "Alice3", "Charlie3"];
        expect(sortNames(arr3)).toEqual(expected3);
    });

    // Test Case 4: Single element
    test("Single element", () => {
        const arr4 = ["Alice5"];
        const expected4 = ["Alice5"];
        expect(sortNames(arr4)).toEqual(expected4);
    });

    // Test Case 5: Empty array
    test("Empty array", () => {
        const arr5: string[] = [];
        const expected5: string[] = [];
        expect(sortNames(arr5)).toEqual(expected5);
    });
});
```

Make sure to replace `'./yourModule'` with the actual path to the module where `sortNames` is defined. Let me know if you need further adjustments!