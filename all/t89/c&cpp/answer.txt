Hereâ€™s the equivalent C++ code for the provided JavaScript function:

```cpp
#include <iostream>
#include <chrono>
#include <iomanip>
#include <sstream>

std::string timePassed(long long startTimeInMillis) {
    // Get the current time in milliseconds
    auto currentTimeInMillis = std::chrono::duration_cast<std::chrono::milliseconds>(
        std::chrono::system_clock::now().time_since_epoch()).count();

    // Calculate the difference in milliseconds
    long long timeDifference = currentTimeInMillis - startTimeInMillis;

    // Convert the difference to seconds
    long long totalSeconds = timeDifference / 1000;

    // Calculate minutes and seconds
    long long minutes = totalSeconds / 60;
    long long seconds = totalSeconds % 60;

    // Format the string
    std::ostringstream oss;
    oss << minutes << ":" << std::setw(2) << std::setfill('0') << seconds;

    return oss.str();
}

int main() {
    // Example usage
    long long startTimeInMillis = 1672531200000; // Example start time
    std::cout << "Time passed: " << timePassed(startTimeInMillis) << std::endl;
    return 0;
}
```

### Explanation:
1. **Chrono Library**: This C++ code uses the `<chrono>` library to handle time.
2. **Time Calculation**: It calculates the current time in milliseconds since epoch and computes the time difference.
3. **String Formatting**: The code formats the output string using `std::ostringstream` to ensure the seconds are always two digits. 

Make sure to replace the `startTimeInMillis` variable in `main` with an appropriate timestamp in milliseconds to test the function.