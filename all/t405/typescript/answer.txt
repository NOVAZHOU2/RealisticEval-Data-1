Certainly! Below is the TypeScript code that replicates the functionality of the provided Python code:

```typescript
function removePartsOfString(...strings: string[]): string[] {
    const results: string[] = [];
    for (const string of strings) {
        try {
            // Remove all characters before the first uppercase letter
            const upperIndex = string.split('').findIndex(char => char.toUpperCase() !== char.toLowerCase());
            let modifiedString = string.substring(upperIndex);

            // Remove all characters before the first lowercase letter
            const lowerIndex = modifiedString.split('').findIndex(char => char.toLowerCase() !== char.toUpperCase());
            modifiedString = modifiedString.substring(lowerIndex - 1);

            results.push(modifiedString);
        } catch (error) {
            // Handle cases where no uppercase or lowercase letters are found
            results.push(string);  // You may decide to push an empty string or an error message
        }
    }

    return results;
}

// Example usage
console.log(removePartsOfString("HelloWorld", "testExample", "123ABC", "noUPPERCASE"));
```

### Explanation:
1. **Function Definition**: The function `removePartsOfString` takes a spread of string arguments (`...strings: string[]`) and returns an array of strings.
2. **Array Initialization**: The `results` array is initialized to store the processed strings.
3. **Loop Through Strings**: The function iterates over each string using a `for...of` loop.
4. **Finding Indices**:
   - **Uppercase Index**: Uses `split('')` to create an array of characters, then `findIndex` to find the first index where the character is uppercase.
   - **Lowercase Index**: Similarly, finds the first index where the character is lowercase.
5. **Substring Extraction**:
   - For the uppercase index, it extracts the substring from the found index.
   - For the lowercase index, it extracts the substring starting one position before the found index.
6. **Error Handling**: If there are no uppercase or lowercase letters, it appends the original string to the results array.
7. **Return Results**: Finally, the function returns the `results` array.

This TypeScript code follows the same logic as the Python code but adapts to TypeScript syntax and best practices.