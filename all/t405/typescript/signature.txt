Here's the equivalent TypeScript code for the given Python function, including the appropriate documentation using JSDoc style comments:

```typescript
/**
 * Remove the part before the first upper case letter and the first lower case letter from the string.
 *
 * For example:
 *     input: 1234AbCde5678
 *     output: AbCde5678
 *
 * @param {...string[]} strings - Accepts one or more strings as variable arguments.
 * @returns {string[]} An array of modified strings.
 */
function removePartsOfString(...strings: string[]): string[] {
    return strings.map((str) => {
        const firstUpperCaseIndex = str.search(/[A-Z]/);
        const firstLowerCaseIndex = str.search(/[a-z]/);
        const minIndex = Math.min(firstUpperCaseIndex, firstLowerCaseIndex);
        return minIndex >= 0 ? str.substring(minIndex) : str;
    });
}
```

### Explanation:

1. **Function Definition**:
   - The Python `def` keyword is replaced with the TypeScript `function` keyword.
   - The `*strings` parameter in Python (indicating variadic arguments) is represented in TypeScript using the rest parameter syntax `...strings: string[]`.

2. **Documentation Comments**:
   - The Python docstring is converted to JSDoc style comments enclosed in `/** */`.
   - The `Args` section is converted to a JSDoc `@param` tag.
   - The `Returns` section is converted to a JSDoc `@returns` tag.

3. **Implementation**:
   - The function body is translated to TypeScript, maintaining the same logic.
   - The `search` method is used to find the index of the first uppercase and lowercase letters.
   - The `substring` method is used to extract the part of the string starting from the minimum index found.

This TypeScript code preserves the functionality and structure of the original Python function while adhering to TypeScript syntax and best practices for documentation.