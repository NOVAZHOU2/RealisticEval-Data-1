Sure, here is the equivalent Java method for the given Python function:

```java
public class StringUtil {

    /**
     * Remove the part before the first upper case letter and the first lower case letter from the string.
     * 
     * For example:
     *      input: 1234AbCde5678
     *      output: AbCde5678
     * 
     * @param strings Accepts one or more strings as variable arguments
     * @return An array of modified strings
     */
    public static String[] removePartsOfString(String... strings) {
        String[] results = new String[strings.length];
        for (int i = 0; i < strings.length; i++) {
            results[i] = modifyString(strings[i]);
        }
        return results;
    }

    private static String modifyString(String s) {
        int indexUpper = -1;
        int indexLower = -1;

        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (Character.isUpperCase(c) && indexUpper == -1) {
                indexUpper = i;
            }
            if (Character.isLowerCase(c) && indexLower == -1) {
                indexLower = i;
            }

            // Find the earliest occurrence of an uppercase or lowercase character
            if (indexUpper != -1 || indexLower != -1) {
                break;
            }
        }

        // Determine the earliest index
        int index = Math.min(indexUpper, indexLower);

        // If no uppercase or lowercase character is found, return the original string
        if (index == -1) {
            return s;
        }

        // Return the substring starting from the earliest index
        return s.substring(index);
    }

    // Example usage
    public static void main(String[] args) {
        String[] modifiedStrings = removePartsOfString("1234AbCde5678", "abcDEFghi", "noUPPERCASE");
        for (String str : modifiedStrings) {
            System.out.println(str);
        }
    }
}
```

This Java code defines a `StringUtil` class with a `removePartsOfString` method that takes a varargs parameter of type `String`. It also includes a helper method `modifyString` that performs the actual string modification based on the criteria provided in the Python function's docstring. The main method demonstrates how to use this method with some example strings.