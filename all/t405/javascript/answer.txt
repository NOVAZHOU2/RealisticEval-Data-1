Given the Python code, we need to convert it to JavaScript while maintaining the same functionality and logic. The goal is to remove all characters before the first uppercase letter and then remove all characters before the first lowercase letter from the remaining string.

Here is the equivalent JavaScript code:

```javascript
function removePartsOfStrings(...strings) {
    const results = [];
    for (const string of strings) {
        try {
            // Remove all characters before the first uppercase letter
            const upperIndex = [...string].findIndex(char => char === char.toUpperCase() && char !== char.toLowerCase());
            const updatedString = string.slice(upperIndex);

            // Remove all characters before the first lowercase letter
            const lowerIndex = [...updatedString].findIndex(char => char === char.toLowerCase() && char !== char.toUpperCase());
            const finalString = updatedString.slice(lowerIndex - 1);

            results.push(finalString);
        } catch (error) {
            // Handle cases where no uppercase or lowercase letters are found
            results.push(string);  // You can also push an empty string or an error message
        }
    }

    return results;
}
```

### Explanation:
1. **Function Definition**: 
   - The function `removePartsOfStrings` takes a variable number of string arguments using the spread operator (`...strings`).

2. **Results Array**:
   - An array `results` is initialized to store the processed strings.

3. **Loop Through Strings**:
   - A `for...of` loop iterates through each string in the input arguments.

4. **Try-Catch Block**:
   - A `try-catch` block is used to handle any potential errors that might occur during processing.

5. **Find Indexes**:
   - The `findIndex` method is used to find the index of the first uppercase character (`upperIndex`) and the first lowercase character (`lowerIndex`).
     - `findIndex` returns the index of the first element in the array that satisfies the provided testing function.
     - The condition `char === char.toUpperCase() && char !== char.toLowerCase()` checks if the character is uppercase and not lowercase.
     - Similarly, `char === char.toLowerCase() && char !== char.toUpperCase()` checks if the character is lowercase and not uppercase.

6. **Update String**:
   - Using the `slice` method, the string is updated to remove all characters before the identified indexes.
     - `updatedString` removes all characters before the first uppercase character.
     - `finalString` removes all characters before the first lowercase character from the `updatedString`.

7. **Push Result**:
   - The processed string is pushed into the `results` array.

8. **Catch Error**:
   - If an error occurs (e.g., no uppercase or lowercase characters are found), the original string is pushed into the `results` array.

9. **Return Results**:
   - Finally, the `results` array is returned with all processed strings.

This JavaScript code should provide the same functionality as the given Python code.