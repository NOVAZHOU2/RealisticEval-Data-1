To convert the provided Python unittest test class to TypeScript using Jest, you first need to have the necessary dependencies installed. You can install `@types/jest` if it's not already included in your project:

```sh
npm install --save-dev @types/jest
```

Below is an example of how you might write a corresponding Jest test case for the given Python function `convert_image_to_bits`. Note that I'll assume you have a JavaScript/TypeScript implementation of the same functionality since no actual implementation was provided in the original Python code snippet.

```typescript
import { describe, expect, it } from '@jest/globals';
import { convertImageToBits } from './path-to-your-module'; // Adjust the import according to your module structure

describe('convertImageToBits', () => {
  it('should convert a simple 2x2 black and white image to bits', () => {
    const imagePath = 'path/to/test/black-and-white-image.png'; // Replace with a valid path to a black and white image
    const expectedBits = [0, 0, 0, 0]; // Expected bits for a 2x2 black image

    const result = convertImageToBits(imagePath);

    expect(result).toEqual(expectedBits);
  });

  it('should convert a simple 2x2 image with one white and three black pixels to bits', () => {
    const imagePath = 'path/to/test/one-white-three-black-image.png'; // Replace with a valid path to such an image
    const expectedBits = [1, 0, 0, 0]; // Expected bits for a 2x2 image with one white pixel

    const result = convertImageToBits(imagePath);

    expect(result).toEqual(expectedBits);
  });
});
```

### Explanation:

1. **Import Statements**: We import the necessary functions (`describe`, `expect`, `it`) from Jest and the `convertImageToBits` function from your module.

2. **Describe Block**: We use `describe` to group related tests together. In this case, all tests are related to the `convertImageToBits` function.

3. **It Blocks**: Each `it` block represents a single test case. The first test checks a simple 2x2 black image, and the second test checks a 2x2 image with one white and three black pixels.

4. **Expectations**: Inside each `it` block, we call `convertImageToBits` with a specific image path and then use `expect` to assert that the returned bits match the expected values.

Make sure to replace `'path/to/test/black-and-white-image.png'` and `'path/to/test/one-white-three-black-image.png'` with the actual paths to your test images. Additionally, ensure that the `convertImageToBits` function is correctly implemented in your TypeScript module.