Hereâ€™s the equivalent Jest test class based on the provided Python unittest code, maintaining functionality and logic:

```javascript
describe('parseExpression', () => {
    
    test('simple addition', () => {
        const expression = "2 + 2";
        const result = parseExpression(expression);
        expect(result).toEqual(["2", "+", "2"]);
    });

    test('complex expression', () => {
        const expression = "3 + 5 * (2 - 8)";
        const result = parseExpression(expression);
        expect(result).toEqual(["3", "+", "5", "*", "(", "2", "-", "8", ")"]);
    });

    test('negative numbers', () => {
        const expression = "-1 + 4 - 5";
        const result = parseExpression(expression);
        expect(result).toEqual(["-", "1", "+", "4", "-", "5"]);
    });

    test('decimals', () => {
        const expression = "3.5 + 2.1";
        const result = parseExpression(expression);
        expect(result).toEqual(["3.5", "+", "2.1"]);
    });

    test('operators only', () => {
        const expression = "+ - * /";
        const result = parseExpression(expression);
        expect(result).toEqual(["+", "-", "*", "/"]);
    });

    test('empty expression', () => {
        const expression = "";
        const result = parseExpression(expression);
        expect(result.length).toBe(0);
    });

    test('single number', () => {
        const expression = "42";
        const result = parseExpression(expression);
        expect(result).toEqual(["42"]);
    });
});
```

### Key Changes and Notes:
1. **Test Structure**: The `unittest.TestCase` class is replaced by Jest's `describe` and `test` functions.
2. **Assertions**: 
   - `self.assertEqual` is replaced with `expect(...).toEqual(...)`.
   - `self.assertTrue(len(result) == 0)` is replaced with `expect(result.length).toBe(0)`.
3. **Function Invocation**: The function `parse_expression` remains the same, assuming it has been defined previously in your JavaScript codebase as `parseExpression`. 

This structure provides clear, maintainable tests for the `parseExpression` function in Jest.