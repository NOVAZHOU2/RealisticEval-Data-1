Hereâ€™s the C++ equivalent of the provided Python function signature, including comments and type annotations:

```cpp
#include <vector>
#include <string>

/* 
 * Parses a mathematical expression string into a list of tokens. 
 * This function identifies both operands (numbers) and operators (+, -, *, /, etc.) 
 * in the provided expression and returns them in a list format.
 *
 * Args:
 *     expression (std::string): The mathematical expression to be parsed.
 *
 * Returns:
 *     std::vector<std::string>: A list containing the tokens identified in the expression.
 *                                The list will include both operands and operators in the order they appear.
 */
std::vector<std::string> parse_expression(const std::string& expression);
```

This code preserves the purpose and structure while adapting to C++ standards for types and comments.