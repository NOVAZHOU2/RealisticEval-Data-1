Hereâ€™s the equivalent C++ Catch2 test case for the provided JavaScript Jest test case:

```cpp
#define CATCH_CONFIG_MAIN
#include <catch2/catch.hpp>
#include <string>

// Function prototype
bool isValidEmail(const std::string& email);

TEST_CASE("isValidEmail") {
    SECTION("should return true for a valid simple email") {
        REQUIRE(isValidEmail("test@example.com") == true); // 'test@example.com' is a valid email
    }

    SECTION("should return true for a valid email with subdomain") {
        REQUIRE(isValidEmail("user@mail.example.com") == true); // 'user@mail.example.com' is a valid email
    }

    SECTION("should return false for an email missing the @ symbol") {
        REQUIRE(isValidEmail("invalid-email.com") == false); // 'invalid-email.com' is missing the @ symbol
    }

    SECTION("should return false for an email missing the domain part") {
        REQUIRE(isValidEmail("user@.com") == false); // 'user@.com' is missing a valid domain name
    }

    SECTION("should return false for an email with spaces") {
        REQUIRE(isValidEmail("user name@example.com") == false); // 'user name@example.com' contains spaces
    }
}
```

Make sure to include the Catch2 header and link against the Catch2 library when compiling your code. This test suite maintains the structure and intent of the original Jest tests.