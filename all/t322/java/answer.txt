Certainly! Below is the equivalent Java code for the provided JavaScript function:

```java
public class EmailValidator {

    /**
     * Verify that a string is a valid email address.
     *
     * @param email The email address to be validated.
     * @return true if the email matches the regex pattern, indicating it is valid,
     *         or false otherwise.
     */
    public static boolean isValidEmail(String email) {
        // Regular expression pattern for validating an email address
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
        
        // Create a Pattern object
        java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(emailRegex);
        
        // Now create matcher object
        java.util.regex.Matcher matcher = pattern.matcher(email);
        return matcher.matches();
    }

    public static void main(String[] args) {
        // Test cases
        System.out.println(isValidEmail("example@example.com"));  // true
        System.out.println(isValidEmail("invalid-email"));      // false
    }
}
```

### Explanation:
1. **Regular Expression**: The regular expression used in the `isValidEmail` method is designed to match most common email formats.
2. **Pattern and Matcher**: The `Pattern` class compiles the regular expression into a pattern, and the `Matcher` class is used to check if the given email string matches the pattern.
3. **Static Method**: The `isValidEmail` method is declared as `static`, so it can be called without creating an instance of the `EmailValidator` class.

This Java code should work similarly to your original JavaScript function.