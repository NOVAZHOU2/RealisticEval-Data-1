Here's how you can convert the Python function signature to Java:

```java
import java.util.*;

/**
 * Converts a dictionary of lists into a list of dictionaries.
 *
 * @param dictOfLists The dictionary where each key has a list as its value.
 * @return A list where each item is a dictionary formed by corresponding elements of lists in the input dictionary.
 */
public static List<Map<String, Object>> dictOfListsToListOfMaps(Map<String, List<Object>> dictOfLists) {
    // Function implementation would go here
}
```

Please note that Java does not have built-in support for dictionaries with variable types like Python does. Therefore, I've used `Map<String, Object>` instead of `Dict`. If you know the types of your values in advance, you should replace `Object` with the appropriate type. Also, Java uses camelCase for method names, so I changed `dict_of_lists_to_list_of_dicts` to `dictOfListsToListOfMaps`.

Also, make sure that you handle null values appropriately when converting between these data structures, since Java does not allow null keys or values in maps.