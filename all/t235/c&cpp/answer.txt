Sure! Below is the equivalent C++ code for calculating the bearing between two points on the Earth using the provided Python function signature:

```cpp
#include <cmath>
#include <iostream>

double calculateBearing(double lat1, double lon1, double lat2, double lon2) {
    const double pi = 3.14159265358979323846;
    
    // Convert latitude and longitude from degrees to radians
    lat1 = lat1 * pi / 180.0;
    lon1 = lon1 * pi / 180.0;
    lat2 = lat2 * pi / 180.0;
    lon2 = lon2 * pi / 180.0;

    // Calculate the differences
    double dLon = lon2 - lon1;
    double y = sin(dLon) * cos(lat2);
    double x = cos(lat1) * sin(lat2) - sin(lat1) * cos(lat2) * cos(dLon);

    // Calculate the initial bearing
    double initialBearing = atan2(y, x);

    // Normalize the bearing to be within the range [0, 2*pi)
    if (initialBearing < 0) {
        initialBearing += 2 * pi;
    }

    // Convert the bearing from radians to degrees
    return initialBearing * 180.0 / pi;
}

int main() {
    double lat1 = 51.5074; // Example latitude in degrees
    double lon1 = -0.1278; // Example longitude in degrees
    double lat2 = 40.7128; // Example latitude in degrees
    double lon2 = -74.0060; // Example longitude in degrees

    double bearing = calculateBearing(lat1, lon1, lat2, lon2);
    std::cout << "Bearing: " << bearing << " degrees" << std::endl;

    return 0;
}
```

### Explanation:
1. **Conversion to Radians**: The input latitude and longitude values are converted from degrees to radians because trigonometric functions in C++ expect angles in radians.
2. **Calculating Differences**: The differences in longitude (`dLon`) and the sine and cosine components are calculated.
3. **Initial Bearing Calculation**: The `atan2` function is used to calculate the initial bearing in radians.
4. **Normalization**: If the initial bearing is negative, it is normalized to be within the range `[0, 2π)` by adding `2π`.
5. **Conversion to Degrees**: The final bearing is converted back to degrees.
6. **Main Function**: An example usage of the `calculateBearing` function is provided in the `main` function.

This C++ code should produce the same results as your original Python function.