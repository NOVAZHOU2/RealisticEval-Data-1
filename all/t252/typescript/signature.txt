Sure! Here's how you can translate the Python code signature to TypeScript while keeping the comments intact:

```typescript
import { JSONEncoder } from 'json';

/**
 * Write a JSON decoding class that inherits from JSONEncoder. When encoding question into json format,
 * the main functional bits of this class specifically handle keys identified as bits, and convert them to binary form
 * if their value is an integer. For example, 'bits': 255 after encoding should be "bits": "11111111".
 */
export class BitSequenceEncoder extends JSONEncoder {
    public encode(obj: any): string {
        // Implement your encoding logic here.
        return super.encode(obj);
    }
}
```

In this TypeScript version:
- We use `JSONEncoder` from the `json` module (note that in Node.js, you might need to install a package like `json-stable-stringify` for custom JSON encoding).
- The `BitSequenceEncoder` class extends `JSONEncoder`.
- The `encode` method is overridden to provide custom encoding logic.

Make sure to implement the actual encoding logic inside the `encode` method according to your requirements.