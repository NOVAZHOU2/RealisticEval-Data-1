Hereâ€™s the equivalent C++ code using the `cppcsvparser` library for parsing CSV files, as C++ does not have a built-in equivalent to pandas:

First, you need to install the `cppcsvparser` library. You can do this by cloning the repository or adding it to your project's dependencies. For simplicity, assume it is already installed and included in your project.

```cpp
#include <iostream>
#include <string>
#include <vector>
#include <cppcsvparser/csv_parser.h>

class CSVReader {
public:
    // Reads a CSV file and converts it to a vector of vectors representing the rows and columns.
    std::vector<std::vector<std::string>> readCSV(const std::string& filePath) {
        try {
            std::vector<std::vector<std::string>> data;
            csv::Parser file = csv::Parser(filePath);

            for (auto line : file) {
                data.push_back(line);
            }

            return data;
        } catch (const std::exception& e) {
            std::cerr << "An error occurred: " << e.what() << std::endl;
        } catch (...) {
            std::cerr << "An unknown error occurred." << std::endl;
        }

        return {};
    }
};

int main() {
    CSVReader reader;
    std::string filePath = "example.csv";
    auto data = reader.readCSV(filePath);

    if (!data.empty()) {
        for (const auto& row : data) {
            for (const auto& col : row) {
                std::cout << col << " ";
            }
            std::cout << std::endl;
        }
    } else {
        std::cerr << "Failed to read the CSV file." << std::endl;
    }

    return 0;
}
```

### Explanation:
1. **Class Definition**: A `CSVReader` class is defined to encapsulate the functionality of reading a CSV file.
2. **Function `readCSV`**: This function reads the CSV file and returns a `std::vector<std::vector<std::string>>` representing the rows and columns of the CSV data.
3. **Exception Handling**: The function includes exception handling to catch and report errors during file reading or parsing.
4. **Main Function**: Demonstrates how to use the `CSVReader` class to read a CSV file and print its contents.

This approach provides a similar functionality to the Python code but adapted to C++ conventions and libraries.