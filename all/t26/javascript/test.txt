Sure! Below is the equivalent JavaScript test case using Jest for the provided Python function `convert_to_comma_separated`.

```javascript
const convertToCommaSeparated = require('./your_module_path'); // Replace with the actual path to your module

describe('convertToCommaSeparated', () => {
  it('should replace multiple separators with commas', () => {
    expect(convertToCommaSeparated('a*b;c/d-e:f')).toBe('a,b;c,d,e,f');
    expect(convertToCommaSeparated('hello*world;test/this-one')).toBe('hello,world,test,this-one');
    expect(convertToCommaSeparated('one*two;three/four-five:six')).toBe('one,two,three,four-five,six');
    expect(convertToCommaSeparated('no-separators')).toBe('no-separators');
  });

  it('should handle empty string', () => {
    expect(convertToCommaSeparated('')).toBe('');
  });

  it('should handle string with no separators', () => {
    expect(convertToCommaSeparated('no separators here')).toBe('no separators here');
  });
});
```

Make sure to replace `'./your_module_path'` with the actual path to the module where the `convertToCommaSeparated` function is defined.

This Jest test suite includes several test cases to ensure that the function behaves as expected when dealing with different types of input strings, including those with multiple separators, an empty string, and a string without any separators.