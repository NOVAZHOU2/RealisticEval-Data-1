To convert the given Python unittest test class into a C++ Catch2 test case, you would first need to implement the `convert_to_comma_separated` function in C++. Then, you can write a Catch2 test case to verify its functionality.

Here's an example of how the C++ code might look:

```cpp
#include <catch2/catch.hpp>
#include <string>

// Function to convert input strings that contain multiple separators to comma-separated formatted strings
std::string convert_to_comma_separated(const std::string& input_string) {
    // Replace all occurrences of specified separators with commas
    std::string result = input_string;
    std::replace(result.begin(), result.end(), '*', ',');
    std::replace(result.begin(), result.end(), ';', ',');
    std::replace(result.begin(), result.end(), '/', ',');
    std::replace(result.begin(), result.end(), '-', ',');
    std::replace(result.begin(), result.end(), ':', ',');
    return result;
}

TEST_CASE("Convert to Comma Separated", "[conversion]") {
    REQUIRE(convert_to_comma_separated("apple*banana;cherry") == "apple,banana,cherry");
    REQUIRE(convert_to_comma_separated("hello-world:example") == "hello,world,example");
    REQUIRE(convert_to_comma_separated("one/two-three:four-five") == "one,two,three,four,five");
    REQUIRE(convert_to_comma_separated("") == "");
    REQUIRE(convert_to_comma_separated("no-separators") == "no-separators");
}
```

In this example, we define the `convert_to_comma_separated` function and then create a Catch2 test case named `Convert to Comma Separated`. We use the `REQUIRE` macro to assert that the output of our function matches the expected results for various input cases.