Certainly! Below is the equivalent C++ code that preserves the original purpose and structure of the Python function, including comments and documentation:

```cpp
#include <iostream>
#include <regex>
#include <string>

// Converts input strings that contain multiple separators (for example, *, ;, /) to comma-separated formatted strings
std::string convert_to_comma_separated(const std::string& input_string) {
    /*
    Args:
        input_string (std::string): The input string containing various separators like *, ;, /, -, :

    Returns:
        std::string: A comma-separated string where all specified separators have been replaced with commas.
    */

    // The pattern includes *, ;, /, -, :
    std::regex pattern("[\\*;/-:]");
    std::string comma_separated_string = std::regex_replace(input_string, pattern, ",");
    return comma_separated_string;
}

int main() {
    // Example usage
    std::string test_string = "Hello*World;Example/Text-Another:Test";
    std::string result = convert_to_comma_separated(test_string);
    std::cout << result << std::endl;
    return 0;
}
```

### Explanation:
1. **Headers**: The necessary headers (`<iostream>`, `<regex>`, `<string>`) are included for input/output, regular expressions, and string handling respectively.
2. **Function Definition**: The `convert_to_comma_separated` function takes a `const std::string&` as input and returns a `std::string`.
3. **Comments and Documentation**:
   - Single-line comments are used for brief explanations (`//`).
   - Multi-line comments are used for detailed documentation (`/* ... */`).
4. **Regular Expression Pattern**: The pattern `[\\*;/-:]` is used to match the characters `*`, `;`, `/`, `-`, and `:`.
5. **Regex Replacement**: `std::regex_replace` is used to replace all occurrences of the matched characters with a comma.
6. **Main Function**: An example usage is provided in the `main` function to demonstrate how the function works.

This C++ code should provide the same functionality as the original Python code, with appropriate comments and documentation.