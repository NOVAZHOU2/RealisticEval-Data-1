Here's how you can translate the provided Python unittest test class into a Java TestCase using JUnit:

```java
package org.real.temp;

import static org.junit.Assert.assertEquals;
import org.junit.Test;

public class Tester {

    @Test
    public void testConvertToCommaSeparated() {
        // Arrange
        String input = "apple*banana;cherry/orange-pineapple";
        String expectedOutput = "apple,banana,cherry,orange,pineapple";

        // Act
        String actualOutput = convertToCommaSeparated(input);

        // Assert
        assertEquals(expectedOutput, actualOutput);
    }

    /**
     * Converts input strings that contain multiple separators (for example, * ; /) to comma-separated formatted strings
     *
     * @param inputString The input string containing various separators like *, ;, /, -, :
     * @return A comma-separated string where all specified separators have been replaced with commas.
     */
    private String convertToCommaSeparated(String inputString) {
        return inputString.replace("*", ",").replace(";", ",").replace("/", ",").replace("-", ",").replace(":", ",");
    }
}
```

In this Java version:
- We've moved the `convert_to_comma_separated` function inside the `Tester` class and changed its name to `convertToCommaSeparated`.
- We've added a `testConvertToCommaSeparated` method annotated with `@Test`, which acts similarly to a test case in Python's unittest framework.
- The `assertEquals` method from JUnit is used for assertion, similar to Python's `assertEqual`.