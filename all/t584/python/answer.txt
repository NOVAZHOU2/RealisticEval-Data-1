Here’s how to convert the provided TypeScript function into Python, maintaining the comments for clarity:
Converted Python Code
python
import re

def is_pascal_case(input: str) -> bool:
    """
    Detects whether the string is in PASCAL_CASE.

    :param input: The string to check.
    :return: True if the string is in PASCAL_CASE, otherwise False.
    """
    # Regular expression to match PASCAL_CASE
    pascal_case_regex = r'^[A-Z][a-z]*(?:[A-Z][a-z]*)*$'
    return bool(re.match(pascal_case_regex, input))
Explanation:
Importing the Regular Expression Module:
The re module is imported to use regular expressions in Python.
Function Definition:
The function is_pascal_case is defined, with the parameter input typed as str, and the return type is specified as bool.
Docstring:
A docstring is included to describe the function’s purpose, its parameter, and its return value, similar to the comments in the TypeScript version.
Regular Expression:
The regular expression pattern r'^[A-Z][a-z]*(?:[A-Z][a-z]*)*$' is used to match the PASCAL_CASE format. The r prefix indicates a raw string, which is useful for regex patterns.
Using re.match():
The function returns the result of re.match(), which checks if the input string matches the regex pattern. The result is wrapped in bool() to ensure it returns True or False.
This Python function effectively replicates the logic of the original TypeScript function for detecting PASCAL_CASE.