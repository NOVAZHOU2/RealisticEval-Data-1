Certainly! Below is the TypeScript version of your JavaScript Jest test case using `describe` and `test`:

```typescript
import { getLineNumber } from './yourFilePath'; // Adjust the import path accordingly

describe('getLineNumber function', () => {
  test('should return the correct line number for a given index', () => {
    const content = "Line one\nLine two\nLine three";
    const index = 10; // This should be on Line two
    expect(getLineNumber(content, index)).toBe(2); // Line numbers start from 0 in JavaScript
  });

  test('should handle an empty string correctly', () => {
    const content = "";
    const index = 0;
    expect(getLineNumber(content, index)).toBe(-1); // Assuming an invalid index returns -1
  });

  test('should handle an index at the beginning of each line', () => {
    const content = "Line one\nLine two\nLine three";
    const index1 = 0; // Beginning of Line one
    const index2 = 6; // Beginning of Line two
    const index3 = 12; // Beginning of Line three
    expect(getLineNumber(content, index1)).toBe(0);
    expect(getLineNumber(content, index2)).toBe(1);
    expect(getLineNumber(content, index3)).toBe(2);
  });
});
```

### Explanation:
1. **Import Statement**: Replace `'./yourFilePath'` with the actual path where your `getLineNumber` function is located.
2. **Describe Block**: Groups related tests together under the `getLineNumber` function.
3. **Test Cases**:
   - **First Test Case**: Checks if the function returns the correct line number for a given index within the content.
   - **Second Test Case**: Handles an empty string and checks if it returns `-1`.
   - **Third Test Case**: Verifies that the function correctly identifies the line number when the index is at the beginning of each line.

Make sure to adjust the implementation of `getLineNumber` to match the expected behavior in your TypeScript project.