Sure! Below is the equivalent C++ code for the JavaScript function `getLineNumber`:

```cpp
#include <iostream>
#include <string>

/**
 * Gets the line number in the content at the specified index.
 *
 * @param content - The string content to check.
 * @param index - The character index to find the line number for.
 * @return - The line number corresponding to the given index.
 */
int getLineNumber(const std::string& content, size_t index) {
    if (index >= content.size()) {
        return -1; // Index out of bounds
    }

    int lineNumber = 1;
    for (size_t i = 0; i <= index; ++i) {
        if (content[i] == '\n') {
            ++lineNumber;
        }
    }
    return lineNumber;
}

int main() {
    std::string content = "Line 1\nLine 2\nLine 3";
    size_t index = 7; // Example index

    int lineNumber = getLineNumber(content, index);
    std::cout << "The line number at index " << index << " is: " << lineNumber << std::endl;

    return 0;
}
```

### Explanation:
- **Function Signature**: The function `getLineNumber` takes a constant reference to a `std::string` and a `size_t` index as parameters and returns an `int`.
- **Bounds Check**: The function first checks if the provided index is within the bounds of the content string. If not, it returns `-1`.
- **Line Number Calculation**: It iterates through the characters of the string up to the specified index, counting the newline characters (`'\n'`) to determine the line number.
- **Main Function**: A simple example is provided in the `main` function to demonstrate how to use the `getLineNumber` function.

This C++ code should work similarly to the original JavaScript function.