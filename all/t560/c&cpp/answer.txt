Sure! Here's how you can translate the JavaScript function `getLineNumber` into C++:

```cpp
#include <iostream>
#include <string>

/**
 * Gets the line number in the content at the specified index.
 *
 * @param content - The string content to check.
 * @param index - The character index to find the line number for.
 * @return The line number corresponding to the given index.
 */
int getLineNumber(const std::string& content, size_t index) {
    if (index >= content.size()) {
        return 0; // Return 0 or throw an exception if index is out of bounds
    }

    int lineNumber = 1;
    for (size_t i = 0; i <= index; ++i) {
        if (content[i] == '\n') {
            ++lineNumber;
        }
    }
    return lineNumber;
}

// Example usage
int main() {
    std::string content = "Line one\nLine two\nLine three";
    size_t index = 12; // Index where 't' in "two" is located

    int lineNumber = getLineNumber(content, index);
    std::cout << "The line number at index " << index << " is: " << lineNumber << std::endl;

    return 0;
}
```

### Explanation:
- **Function Signature**: In C++, the function signature includes the return type (`int`) and the parameter types (`const std::string&` and `size_t`).
- **Index Check**: Before proceeding, we check if the provided index is within the bounds of the string.
- **Loop Through Characters**: We loop through each character up to the specified index, counting the newline characters (`'\n'`). Each time a newline character is found, we increment the line number.
- **Return Line Number**: Finally, the function returns the calculated line number.

This C++ function should behave similarly to your original JavaScript function, returning the line number based on the provided character index.