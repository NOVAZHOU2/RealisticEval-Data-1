Here is the equivalent Java code:

```java
/**
 * Gets the line number in the content at the specified index.
 *
 * @param content - The string content to check.
 * @param index - The character index to find the line number for.
 * @return The line number corresponding to the given index.
 */
public static int getLineNumber(String content, int index) {
    // Split the content into lines
    String[] lines = content.split("\n");
    
    int count = 0;
    
    // Iterate over each line
    for (String line : lines) {
        // If the current index is within the length of the line plus the previous lines' lengths,
        // return the line number (1-indexed)
        if (index < line.length() + count) {
            return lines.length - (lines.length - 1 - Arrays.asList(lines).indexOf(line));
        }
        
        // Add the length of the current line and a newline character to the count
        count += line.length() + 1;
    }

    // If no line contains the index, return -1 or throw an exception
    return -1; 
}
```

Please note that in Java, arrays are zero-indexed, but we want our line numbers to be one-indexed, so we calculate it differently. Also, there's no direct way to get the index of an element in an array using `Arrays.asList(array).indexOf(element)`. Therefore, we use a simple loop to find the line containing the index.