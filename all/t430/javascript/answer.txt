Here's how you can convert the Python function `intersect_vertically` to JavaScript:

```javascript
function intersectVertically(rect1, rect2) {
    /**
     * Check whether two rectangles intersect in the vertical direction
     *
     * Each rectangle is defined by an object {x1, y1, x2, y2}, where:
     * - (x1, y1) are the coordinates of the bottom-left corner.
     * - (x2, y2) are the coordinates of the top-right corner.
     *
     * @param {Object} rect1 - The first rectangle defined by {x1, y1, x2, y2}.
     * @param {Object} rect2 - The second rectangle defined by {x1, y1, x2, y2}.
     * @returns {boolean} - True if the rectangles intersect vertically, false otherwise.
     */

    // Extracting coordinates from each rectangle
    const [x1Rect1, y1Rect1, x2Rect1, y2Rect1] = Object.values(rect1);
    const [x1Rect2, y1Rect2, x2Rect2, y2Rect2] = Object.values(rect2);

    // Checking for vertical intersection
    return !(y2Rect1 < y1Rect2 || y2Rect2 < y1Rect1);
}
```

In this JavaScript version:
- We use objects instead of tuples to represent the rectangles.
- The function checks if the rectangles intersect vertically by comparing their Y-coordinates.
- The logical negation operator `!` is used to reverse the condition, ensuring that the function returns `true` when there is a vertical intersection and `false` otherwise.