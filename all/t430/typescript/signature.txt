Here is the equivalent TypeScript code:

```typescript
/**
 * Checks whether two rectangles intersect in the vertical direction.
 * 
 * Each rectangle is defined by a tuple [x1, y1, x2, y2], where:
 * - [x1, y1] are the coordinates of the bottom-left corner.
 * - [x2, y2] are the coordinates of the top-right corner.
 * 
 * @param rect1 - The first rectangle defined by [x1, y1, x2, y2].
 * @param rect2 - The second rectangle defined by [x1, y1, x2, y2].
 * @returns True if the rectangles intersect vertically, False otherwise.
 */
function intersectVertically(rect1: [number, number, number, number], rect2: [number, number, number, number]): boolean {
    // Implementation would go here
}
```

In this TypeScript version, I've used an array type `[number, number, number, number]` to represent the tuples, and I've adjusted the function name to `intersectVertically` to follow camelCase naming convention, which is common in TypeScript and JavaScript. The JSDoc comments have been formatted appropriately to describe the function, its parameters, and return type.