Sure! Here's how you can translate your Python code into Java:

```java
package org.real.temp;

public class Answer {
    /**
     * Check whether two rectangles intersect in the vertical direction.
     *
     * @param rect1 The first rectangle defined by (x1, y1, x2, y2).
     * @param rect2 The second rectangle defined by (x1, y1, x2, y2).
     * @return true if the rectangles intersect vertically, false otherwise.
     */
    public static boolean intersectVertically(int[] rect1, int[] rect2) {
        // Extracting coordinates from arrays
        int x1 = rect1[0];
        int y1 = rect1[1];
        int x2 = rect1[2];
        int y2 = rect1[3];

        int r1_x1 = rect2[0];
        int r1_y1 = rect2[1];
        int r1_x2 = rect2[2];
        int r1_y2 = rect2[3];

        // Check for vertical intersection
        return Math.max(y1, r1_y1) <= Math.min(y2, r1_y2);
    }

    public static void main(String[] args) {
        // Example usage
        int[] rect1 = {1, 5, 4, 8};
        int[] rect2 = {2, 6, 5, 9};

        System.out.println(intersectVertically(rect1, rect2));  // Output will be true or false based on intersection
    }
}
```

### Explanation:
- **Package and Class**: The `Answer` class is placed inside the `org.real.temp` package.
- **Method Signature**: The method `intersectVertically` takes two integer arrays representing the rectangles' coordinates and returns a boolean indicating whether they intersect vertically.
- **Coordinate Extraction**: Coordinates are extracted from the input arrays.
- **Vertical Intersection Check**: The method checks if there is any overlap in the vertical direction using the maximum and minimum functions to determine if one rectangle's upper edge is above another's lower edge and vice versa.

This should give you the equivalent functionality in Java.