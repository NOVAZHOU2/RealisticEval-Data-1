Sure! Below is the equivalent JavaScript code that matches the functionality, logic, and structure of the provided Python code:

```javascript
const fs = require('fs');

function readLog(logFilePath) {
    try {
        const fileContent = fs.readFileSync(logFilePath, 'utf8');
        const lines = fileContent.split('\n');

        let dataEntries = lines.map(line => {
            try {
                return JSON.parse(line);
            } catch (error) {
                console.error(`Error: The file ${logFilePath} contains invalid JSON.`);
                return null;
            }
        }).filter(entry => entry !== null);

        // Using optional chaining to handle missing keys
        const trainLossList = dataEntries.filter(entry => 'train_loss' in entry).map(entry => entry.train_loss);
        const testAcc1List = dataEntries.filter(entry => 'test_acc1' in entry).map(entry => entry.test_acc1);

        return [trainLossList, testAcc1List];
    } catch (error) {
        if (error.code === 'ENOENT') {
            console.error(`Error: The file ${logFilePath} does not exist.`);
        } else {
            console.error(`An unexpected error occurred: ${error.message}`);
        }
        return [[], []];
    }
}

// Example usage
const logFilePath = 'path/to/your/logfile.log';
const [trainLossList, testAcc1List] = readLog(logFilePath);
console.log(trainLossList, testAcc1List);
```

### Explanation:
1. **File Reading**: `fs.readFileSync` is used to read the contents of the file synchronously.
2. **JSON Parsing**: Each line is parsed using `JSON.parse`. If parsing fails, an error message is printed, and the entry is set to `null`.
3. **Filtering Null Entries**: `filter` is used to remove any `null` entries from the list.
4. **Handling Missing Keys**: `filter` and `map` are used to extract the required keys (`train_loss` and `test_acc1`) from the entries.
5. **Error Handling**: A `try-catch` block is used to handle file reading errors and JSON parsing errors.

This JavaScript code maintains the same functionality and logic as the original Python code.