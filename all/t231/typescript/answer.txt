Here is your Python function translated into TypeScript:

```typescript
interface LogEntry {
    test_acc1?: number;
    train_loss?: number;
}

function readLog(logFilePath: string): [number[], number[]] {
    let trainLossList: number[] = [];
    let testAcc1List: number[] = [];

    try {
        const fs = require('fs');
        const data = fs.readFileSync(logFilePath, 'utf-8');

        const logs = data.split('\n').filter(Boolean);
        
        for(const log of logs) {
            try {
                const entry: LogEntry = JSON.parse(log);

                if(entry.train_loss !== undefined) {
                    trainLossList.push(entry.train_loss);
                }

                if(entry.test_acc1 !== undefined) {
                    testAcc1List.push(entry.test_acc1);
                }
            } catch(error) {
                console.error(`Error parsing log entry: ${log}`);
            }
        }
    } catch(error) {
        console.error(`Error reading log file: ${error.message}`);
    }

    return [trainLossList, testAcc1List];
}
```

Please note that you need to have Node.js and npm installed on your system to use this code, because it uses the built-in `fs` module to read files. Also, you might need to handle different exceptions depending on how your log file is structured. This code assumes that each line in your log file contains a valid JSON object.