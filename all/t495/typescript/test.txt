Sure! Below is the equivalent TypeScript test case using Jest for the provided Python unittest test class. Since you didn't provide the actual test methods from your Python unittest class, I'll create some sample test cases based on typical testing scenarios for the `filter_content_with_context` function.

```typescript
import { filterContentWithContext } from './yourModule'; // Adjust the path accordingly

describe('filterContentWithContext', () => {
    it('should return content with context around keywords', () => {
        const content = `
            Line 1
            Line 2 keyword1
            Line 3
            Line 4 keyword2
            Line 5
        `;
        const keywords = ['keyword1', 'keyword2'];
        const result = filterContentWithContext(content, keywords);

        expect(result).toContain('Line 1');
        expect(result).toContain('Line 2 keyword1');
        expect(result).toContain('Line 3');
        expect(result).toContain('Line 4 keyword2');
        expect(result).toContain('Line 5');
    });

    it('should include specified number of lines before and after', () => {
        const content = `
            Line 1
            Line 2 keyword1
            Line 3
            Line 4 keyword2
            Line 5
            Line 6
            Line 7
        `;
        const keywords = ['keyword1', 'keyword2'];
        const result = filterContentWithContext(content, keywords, 2, 2);

        expect(result).toContain('Line 1');
        expect(result).toContain('Line 2 keyword1');
        expect(result).toContain('Line 3');
        expect(result).toContain('Line 4 keyword2');
        expect(result).toContain('Line 5');
        expect(result).toContain('Line 6');
        expect(result).toContain('Line 7');
    });

    it('should handle multiple occurrences of keywords', () => {
        const content = `
            Line 1 keyword1
            Line 2
            Line 3 keyword1
            Line 4 keyword2
            Line 5
        `;
        const keywords = ['keyword1', 'keyword2'];
        const result = filterContentWithContext(content, keywords);

        expect(result).toContain('Line 1 keyword1');
        expect(result).toContain('Line 3 keyword1');
        expect(result).toContain('Line 4 keyword2');
    });

    it('should handle case sensitivity', () => {
        const content = `
            Line 1 Keyword1
            Line 2 keyword1
            Line 3 KEYWORD1
        `;
        const keywords = ['Keyword1', 'keyWord1'];
        const result = filterContentWithContext(content, keywords);

        expect(result).toContain('Line 1 Keyword1');
        expect(result).toContain('Line 2 keyword1');
        expect(result).toContain('Line 3 KEYWORD1');
    });

    it('should return original content if no keywords found', () => {
        const content = `
            Line 1
            Line 2
            Line 3
        `;
        const keywords = ['nonexistent', 'keywords'];
        const result = filterContentWithContext(content, keywords);

        expect(result).toBe(content);
    });
});
```

Make sure to adjust the module import path (`./yourModule`) according to where your `filterContentWithContext` function is located in your project. Also, implement the `filterContentWithContext` function in TypeScript and export it so that it can be imported in your test file.