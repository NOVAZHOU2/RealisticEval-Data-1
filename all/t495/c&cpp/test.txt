Here's how you might convert your Python unittest test class into a Catch2 C++ test case:

```cpp
#include <catch2/catch.hpp>
#include <string>
#include <vector>

std::string filterContentWithContext(
    const std::string& content,
    const std::vector<std::string>& keywords,
    int linesBefore = 1,
    int linesAfter = 1
) {
    // Your implementation here...
}

TEST_CASE("filterContentWithContext", "[filter]") {
    std::string content = "Hello world\nThis is a test.\nAnother line.";
    std::vector<std::string> keywords = {"world", "test"};
    
    std::string result = filterContentWithContext(content, keywords);
    
    REQUIRE(result == "Hello world\nThis is a test.");
}
```

Please note that Catch2 doesn't have built-in support for testing exceptions or asynchronous operations like unittest does. If your original Python tests had those features, you'll need to add equivalent functionality in your C++ tests using Catch2's `REQUIRE_THROWS`, `REQUIRE_NOTHROW`, `FIND_MATCHING_REGEX`, etc. methods. Also, please replace the comment "// Your implementation here..." with your actual implementation of the function.