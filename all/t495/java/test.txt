Certainly! Below is the equivalent Java test class using JUnit, placed in the package `org.real.temp` and named `Tester`. The functionality and logic of the tests are preserved, and appropriate JUnit annotations and assertion methods are used.

### Java Test Class Using JUnit

```java
package org.real.temp;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class Tester {

    @Test
    public void testSingleKeywordMatch() {
        String content = "Line one.\n" +
                         "This line contains a keyword.\n" +
                         "Line three.";
        List<String> keywords = Arrays.asList("keyword");
        String expectedOutput = "Line one.\n" +
                                "This line contains a keyword.\n" +
                                "Line three.";
        String result = Answer.filterContentWithContext(content, keywords, 1, 1);
        assertEquals(expectedOutput.strip(), result.strip(), "Failed to filter content for a single keyword.");
    }

    @Test
    public void testNoKeywordMatch() {
        String content = "Line one.\n" +
                         "Line two.\n" +
                         "Line three.";
        List<String> keywords = Arrays.asList("missing");
        String expectedOutput = "";
        String result = Answer.filterContentWithContext(content, keywords, 1, 1);
        assertEquals(expectedOutput.strip(), result.strip(), "Failed to return empty string for no matches.");
    }

    @Test
    public void testLinesBeforeAndAfter() {
        String content = "Line one.\n" +
                         "This line contains a keyword.\n" +
                         "Line three.\n" +
                         "Line four.\n" +
                         "Line five.";
        List<String> keywords = Arrays.asList("keyword");
        String expectedOutput = "Line one.\n" +
                                "This line contains a keyword.\n" +
                                "Line three.";
        String result = Answer.filterContentWithContext(content, keywords, 1, 1);
        assertEquals(expectedOutput.strip(), result.strip(), "Failed to correctly include context lines.");
    }
}
```

### Explanation:
1. **Package and Class Definition**: The test class is placed in the package `org.real.temp` and named `Tester`.
2. **JUnit Annotations**: Each test method is annotated with `@Test` to indicate that it is a test method.
3. **Assertion Methods**: The `assertEquals` method from JUnit is used to assert the expected results.
4. **Test Method Definitions**:
    - **testSingleKeywordMatch**: Tests a single keyword match with context lines.
    - **testNoKeywordMatch**: Tests when no keywords match.
    - **testLinesBeforeAndAfter**: Tests functionality with specified lines before and after.
5. **Content and Keywords**: The test data is defined as strings and lists, similar to the Python version.
6. **Expected Output**: The expected output is defined and compared against the actual result using `assertEquals`.

### Additional Notes:
- **String Comparison**: The `strip()` method is used to remove leading and trailing whitespace before comparing the strings.
- **Newline Characters**: In Java, newline characters (`\n`) are used consistently to represent line breaks.

This Java test class preserves the functionality and logic of the Python unittest class while adhering to JUnit conventions and syntax.