Hereâ€™s how you can translate the JavaScript Jest test cases to C++ using the Catch2 testing framework:

```cpp
#define CATCH_CONFIG_MAIN
#include <catch2/catch.hpp>
#include <string>

// Assuming isValidPassword is declared somewhere
bool isValidPassword(const std::string& password);

TEST_CASE("Password Validator Tests") {
    SECTION("Valid password") {
        REQUIRE(isValidPassword("Password1!") == true);
    }

    SECTION("Password without a number") {
        REQUIRE(isValidPassword("Password!") == false);
    }

    SECTION("Password without an uppercase letter") {
        REQUIRE(isValidPassword("password1!") == false);
    }

    SECTION("Password without a lowercase letter") {
        REQUIRE(isValidPassword("PASSWORD1!") == false);
    }

    SECTION("Password without a punctuation mark") {
        REQUIRE(isValidPassword("Password1") == false);
    }

    SECTION("Password shorter than 8 characters") {
        REQUIRE(isValidPassword("Pass1!") == false);
    }
}
```

This code uses Catch2's `TEST_CASE` and `SECTION` macros to organize the tests, mirroring the structure of your Jest test cases. Each test case checks a specific condition related to password validation.