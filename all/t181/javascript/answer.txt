Hereâ€™s the equivalent JavaScript code for the provided Python function. This implementation uses Node.js for file operations:

```javascript
const fs = require('fs');

function readFileToByteArray(filePath) {
    if (!fs.existsSync(filePath)) {
        throw new Error(`File does not exist: ${filePath}`);
    }

    try {
        const data = fs.readFileSync(filePath);
        if (data.length === 0) {
            throw new Error(`Could not completely read the file: ${filePath}`);
        }
        return data;
    } catch (error) {
        throw new Error(`Error reading file: ${error.message}`);
    }
}
```

### Key Points:
- **File Existence Check**: Uses `fs.existsSync` to check if the file exists.
- **Reading the File**: Uses `fs.readFileSync` to read the file synchronously, returning a buffer.
- **Error Handling**: Throws errors with appropriate messages similar to the Python version.
- **Return Type**: The function returns a `Buffer`, which is the equivalent of a byte array in Node.js.