Here's how you can convert the Python function signature to JavaScript:

```javascript
/**
 * Reads question from the given mapping file and returns a list where each element is a tuple containing the compiled regular expression and replacement strings
 * @param {string} mappingFilePath - Path to the file containing regex mappings.
 * @returns {Array<Array<RegExp, string>>} - A list of tuples, each containing a compiled regex object and a corresponding replacement string.
 */
function readMappingFile(mappingFilePath) {
    // Function implementation goes here...
}
```

In this JavaScript version:
- The `@param` tag specifies the type of the parameter (`mappingFilePath`) and its description.
- The `@returns` tag specifies the return type (`Array<Array<RegExp, string>>`) and describes what the function returns.
- Note that JavaScript doesn't have explicit support for type annotations like Python does with `typing`. However, using JSDoc-style comments helps with documentation and tools like TypeScript or ESLint with plugins can enforce these types at development time.