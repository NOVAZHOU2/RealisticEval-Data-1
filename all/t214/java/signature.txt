Sure! Here's how you can translate the Python code signature to Java:

```java
import java.util.List;
import java.util.regex.Pattern;

/**
 * Reads questions from the given mapping file and returns a list where each element is a tuple containing the compiled regular expression and replacement strings.
 *
 * @param mappingFilePath The path to the file containing regex mappings.
 * @return A list of tuples, where each tuple contains a compiled regex object and a corresponding replacement string.
 */
public List<Object[]> readMappingFile(String mappingFilePath);
```

### Explanation:
- **`List<Object[]>`**: In Java, we use `List` to represent a collection of elements. Since the original Python function returns a list of tuples, I've used `Object[]` to represent each tuple. This is because Java doesn't have a built-in tuple type like Python does.
  
- **`Pattern`**: For compiling regular expressions in Java, we use the `Pattern` class from the `java.util.regex` package.

- **Method Signature**:
  - `public`: Specifies that the method can be accessed from any other class.
  - `readMappingFile`: The name of the method.
  - `String mappingFilePath`: The parameter representing the path to the mapping file.
  - `List<Object[]>`: The return type, which is a list of arrays of objects.

This should give you a good starting point for translating your Python function into Java while keeping the structure and functionality similar.