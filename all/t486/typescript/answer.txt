Hereâ€™s the equivalent code in TypeScript, including proper type definitions and adapting the functionality:

```typescript
class Calculator {
    add(a: number, b: number): number {
        /**
         * Returns the sum of a and b.
         */
        return a + b;
    }

    subtract(a: number, b: number): number {
        /**
         * Returns the difference of a and b.
         */
        return a - b;
    }

    multiply(a: number, b: number): number {
        /**
         * Returns the product of a and b.
         */
        return a * b;
    }

    divide(a: number, b: number): number {
        /**
         * Returns the quotient of a and b.
         * Throws Error if b is zero.
         */
        if (b === 0) {
            throw new Error("Cannot divide by zero.");
        }
        return a / b;
    }
}
```

In this TypeScript version, we've defined all methods with explicit `number` types instead of Python's `float`. Note that TypeScript does not have a separate `float` type; it uses `number` for both integers and floating-point numbers. The error handling has been adapted to use TypeScript/JavaScript's `Error` object for throwing exceptions.