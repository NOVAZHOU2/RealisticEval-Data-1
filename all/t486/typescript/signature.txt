Sure! Here is the equivalent TypeScript code for the provided Python class, including appropriate JSDoc-style documentation comments:

```typescript
class Calculator {
    /**
     * Returns the sum of a and b.
     * @param a The first number.
     * @param b The second number.
     * @returns The sum of a and b.
     */
    add(a: number, b: number): number {
        // Implementation goes here
        pass;
    }

    /**
     * Returns the difference of a and b.
     * @param a The first number.
     * @param b The second number.
     * @returns The difference of a and b.
     */
    subtract(a: number, b: number): number {
        // Implementation goes here
        pass;
    }

    /**
     * Returns the product of a and b.
     * @param a The first number.
     * @param b The second number.
     * @returns The product of a and b.
     */
    multiply(a: number, b: number): number {
        // Implementation goes here
        pass;
    }

    /**
     * Returns the quotient of a and b.
     * Throws an error if b is zero.
     * @param a The first number.
     * @param b The second number.
     * @returns The quotient of a and b.
     */
    divide(a: number, b: number): number {
        // Implementation goes here
        if (b === 0) {
            throw new Error("Cannot divide by zero.");
        }
        return a / b;
    }
}
```

### Explanation:
1. **Class Definition**: The `Calculator` class is defined with methods for basic arithmetic operations.
2. **Method Signatures**: Each method has its parameters and return types explicitly declared using TypeScript's type system.
3. **JSDoc Comments**: The Python docstrings are converted to JSDoc-style comments, providing clear documentation for each method.
4. **Error Handling**: The `divide` method includes error handling to prevent division by zero.

This TypeScript code preserves the original functionality and structure of the Python code while adapting it to TypeScript conventions.