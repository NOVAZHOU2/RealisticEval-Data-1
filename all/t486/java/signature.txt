Here's how you can translate your Python code signature into Java code:

```java
public class Calculator {
    
    /**
     * Returns the sum of a and b.
     */
    public double add(double a, double b) {
        return a + b;
    }

    /**
     * Returns the difference of a and b.
     */
    public double subtract(double a, double b) {
        return a - b;
    }

    /**
     * Returns the product of a and b.
     */
    public double multiply(double a, double b) {
        return a * b;
    }

    /**
     * Returns the quotient of a and b.
     * Throws IllegalArgumentException if b is zero.
     */
    public double divide(double a, double b) {
        if (b == 0) {
            throw new IllegalArgumentException("Cannot divide by zero.");
        }
        return a / b;
    }
}
```

In this Java version, I've used `double` instead of `float`, which is more common in Java for decimal calculations due to its higher precision. The method signatures are also adjusted accordingly. Additionally, I've replaced the Python `pass` keyword with actual implementations that perform the respective arithmetic operations. For the `divide` method, I've added an exception handling mechanism to mimic the Python `ValueError`.