To convert the given Python function `are_siblings` into JavaScript, we need to maintain the same functionality and logic. The JavaScript version will use similar techniques to find the indices of the values and determine if they are siblings in the binary tree represented as an array.

Here is the equivalent JavaScript code:

```javascript
function areSiblings(tree, val1, val2) {
    /**
     * Determines if two values are siblings in a binary tree represented as an array.
     *
     * @param {Array<number>} tree - the binary tree level-order representation
     * @param {number} val1 - first value to check for sibling relationship
     * @param {number} val2 - second value to check for sibling relationship
     * @return {boolean} - True if val1 and val2 are siblings, False otherwise
     */
    if (val1 === val2) {
        return false;  // A node cannot be a sibling to itself
    }

    try {
        // Find indices of the values
        const index1 = tree.indexOf(val1);
        const index2 = tree.indexOf(val2);

        // Check if they have the same parent
        return (index1 - 1) / 2 | 0 === (index2 - 1) / 2 | 0 && index1 !== index2;
    } catch (error) {
        // One of the values is not in the tree
        return false;
    }
}
```

### Explanation:
1. **Function Definition**: The function `areSiblings` is defined with parameters `tree`, `val1`, and `val2`.
2. **Check Self-Sibling**: The initial check ensures that a node cannot be a sibling to itself.
3. **Find Indices**: The `indexOf` method is used to find the indices of `val1` and `val2` in the `tree` array.
4. **Parent Check**: The condition `(index1 - 1) / 2 | 0 === (index2 - 1) / 2 | 0` checks if the two values have the same parent. The bitwise OR operation `| 0` is used to perform integer division, similar to Python's floor division `//`.
5. **Error Handling**: If either `val1` or `val2` is not found in the `tree` array, a `ValueError` is caught and handled by returning `false`.

This JavaScript code maintains the same functionality and logic as the original Python code.