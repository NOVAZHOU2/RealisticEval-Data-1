Sure! Below is the equivalent TypeScript code for the provided Python function:

```typescript
function getScale(matrix: number[][]): [number, number] {
    /**
     * Given a 3x3 affine transformation matrix, return the corresponding scaling factors
     * along the x and y axes.
     *
     * @param matrix - A 3x3 affine transformation matrix.
     * @returns A tuple containing the scale factors (scaleX, scaleY).
     */
    
    if (matrix.length !== 3 || matrix.some(row => row.length !== 3)) {
        throw new Error("Input must be a 3x3 matrix");
    }

    const scaleX = Math.sqrt(matrix[0][0] ** 2 + matrix[1][0] ** 2);
    const scaleY = Math.sqrt(matrix[0][1] ** 2 + matrix[1][1] ** 2);

    return [scaleX, scaleY];
}
```

### Explanation:
- The function `getScale` takes a 3x3 matrix as input and returns a tuple of two numbers representing the scaling factors along the x and y axes.
- The function first checks if the input matrix is indeed a 3x3 matrix. If not, it throws an error.
- It then calculates the scaling factors using the Euclidean norm of the submatrices `[0][0], [1][0]` for the x-axis and `[0][1], [1][1]` for the y-axis.
- Finally, it returns the calculated scaling factors as a tuple.