To convert the given Python unittest test class to a C++ test case using Catch2, you need to follow these steps:

1. Install Catch2 if you haven't already.
2. Write the equivalent C++ code for the function `get_scale`.
3. Write the test cases in C++ using Catch2 syntax.

Here's an example of how you can do it:

### Step 1: Install Catch2
You can install Catch2 via vcpkg or manually download it. For simplicity, let's assume you have downloaded it manually and added it to your project.

### Step 2: Implement the Function in C++
```cpp
#include <iostream>
#include <tuple>
#include <cmath>

// Assuming Eigen is used for matrix operations
#include <Eigen/Dense>

std::tuple<double, double> get_scale(const Eigen::Matrix3d& matrix) {
    // Extract the scaling factors from the matrix
    double scale_x = std::sqrt(matrix(0, 0) * matrix(0, 0) + matrix(0, 1) * matrix(0, 1));
    double scale_y = std::sqrt(matrix(1, 0) * matrix(1, 0) + matrix(1, 1) * matrix(1, 1));

    return {scale_x, scale_y};
}
```

### Step 3: Write Test Cases Using Catch2
Create a file named `test_get_scale.cpp` and add the following code:

```cpp
#define CATCH_CONFIG_MAIN
#include "catch.hpp"
#include "get_scale.h"  // Include the header where get_scale is defined

TEST_CASE("Test get_scale function", "[get_scale]") {
    Eigen::Matrix3d matrix;

    SECTION("Identity matrix") {
        matrix << 1, 0, 0,
                  0, 1, 0,
                  0, 0, 1;
        auto [scale_x, scale_y] = get_scale(matrix);
        REQUIRE(scale_x == Approx(1.0));
        REQUIRE(scale_y == Approx(1.0));
    }

    SECTION("Scaling matrix along x-axis") {
        matrix << 2, 0, 0,
                  0, 1, 0,
                  0, 0, 1;
        auto [scale_x, scale_y] = get_scale(matrix);
        REQUIRE(scale_x == Approx(2.0));
        REQUIRE(scale_y == Approx(1.0));
    }

    SECTION("Scaling matrix along y-axis") {
        matrix << 1, 0, 0,
                  0, 3, 0,
                  0, 0, 1;
        auto [scale_x, scale_y] = get_scale(matrix);
        REQUIRE(scale_x == Approx(1.0));
        REQUIRE(scale_y == Approx(3.0));
    }

    SECTION("Scaling matrix along both axes") {
        matrix << 2, 0, 0,
                  0, 3, 0,
                  0, 0, 1;
        auto [scale_x, scale_y] = get_scale(matrix);
        REQUIRE(scale_x == Approx(2.0));
        REQUIRE(scale_y == Approx(3.0));
    }
}
```

### Explanation
- **Catch2 Setup**: The `#define CATCH_CONFIG_MAIN` directive tells Catch2 to generate the main function for you. The `#include "catch.hpp"` includes the Catch2 library.
- **Test Cases**: Each `SECTION` represents a different test case. The `REQUIRE` macro is used to assert that the conditions hold true.

Make sure to link against the Eigen library when compiling your test case. If you're using g++, you can compile the test case with the following command:

```sh
g++ -std=c++17 -I/path/to/eigen -I/path/to/catch2/include -o test_get_scale test_get_scale.cpp
```

Replace `/path/to/eigen` and `/path/to/catch2/include` with the actual paths to the Eigen and Catch2 include directories on your system.