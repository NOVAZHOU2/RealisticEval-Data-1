Certainly! Below is the equivalent C++ code for the provided Python function, including the translation of the function signature, comments, and documentation:

```cpp
#include <vector>
#include <iostream>

// Function to transpose a given matrix (2D vector).
/**
 * Transpose a given matrix (2D array).
 *
 * @param matrix The input 2D array to be transposed.
 * @return The transposed 2D array.
 */
std::vector<std::vector<int>> transpose_matrix(const std::vector<std::vector<int>>& matrix) {
    // Check if the matrix is empty
    if (matrix.empty() || matrix[0].empty()) {
        return {};
    }

    size_t num_rows = matrix.size();
    size_t num_cols = matrix[0].size();

    // Initialize the transposed matrix with the correct dimensions
    std::vector<std::vector<int>> transposed(num_cols, std::vector<int>(num_rows, 0));

    for (size_t i = 0; i < num_rows; ++i) {
        for (size_t j = 0; j < num_cols; ++j) {
            transposed[j][i] = matrix[i][j];
        }
    }

    return transposed;
}

int main() {
    // Example usage
    std::vector<std::vector<int>> matrix = {{1, 2, 3}, {4, 5, 6}};
    std::vector<std::vector<int>> transposed = transpose_matrix(matrix);

    // Print the transposed matrix
    for (const auto& row : transposed) {
        for (int val : row) {
            std::cout << val << " ";
        }
        std::cout << std::endl;
    }

    return 0;
}
```

### Explanation:
1. **Header Files**: The necessary header files (`<vector>` and `<iostream>`) are included at the beginning.
2. **Function Documentation**: The Python docstring is translated into a C++ multi-line comment using `/** */`.
3. **Function Signature**: The function `transpose_matrix` is defined with the appropriate C++ type signatures.
   - `std::vector<std::vector<int>>` is used to represent the 2D array.
   - The function takes a `const std::vector<std::vector<int>>&` as an argument and returns a `std::vector<std::vector<int>>`.
4. **Single-Line Comments**: Single-line comments are used to explain the logic within the function.
5. **Main Function**: An example usage of the `transpose_matrix` function is provided in the `main` function, along with printing the transposed matrix.

This code preserves the original purpose and structure of the Python code while adapting it to C++ syntax and conventions.