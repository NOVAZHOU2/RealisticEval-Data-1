Here's how you can convert the Python unittest test class to a Java JUnit test case:

```java
package org.real.temp;

import static org.junit.Assert.assertEquals;
import org.junit.Test;

public class Tester {

    @Test
    public void testTransposeMatrix() {
        // Test data
        int[][] input = {{1, 2, 3}, {4, 5, 6}};
        int[][] expectedOutput = {{1, 4}, {2, 5}, {3, 6}};

        // Call the method under test
        int[][] actualOutput = transposeMatrix(input);

        // Verify the result
        assertEquals(expectedOutput.length, actualOutput.length);
        for (int i = 0; i < expectedOutput.length; i++) {
            assertEquals(expectedOutput[i].length, actualOutput[i].length);
            for (int j = 0; j < expectedOutput[i].length; j++) {
                assertEquals(expectedOutput[i][j], actualOutput[i][j]);
            }
        }
    }

    /**
     * Transpose a given matrix (2D array).
     *
     * @param matrix The input 2D array to be transposed.
     * @return The transposed 2D array.
     */
    public int[][] transposeMatrix(int[][] matrix) {
        if (matrix == null || matrix.length == 0) {
            return new int[0][];
        }

        int rows = matrix.length;
        int cols = matrix[0].length;
        int[][] transposed = new int[cols][rows];

        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                transposed[j][i] = matrix[i][j];
            }
        }

        return transposed;
    }
}
```

### Explanation:
1. **Package Declaration**: The `@Test` annotation is used to declare methods that should be run as tests.
2. **JUnit Asserts**: The `assertEquals` method is used to verify that the output of the `transposeMatrix` method matches the expected output.
3. **Method Implementation**: The `transposeMatrix` method is implemented in Java, similar to the Python function provided.

This Java JUnit test case will ensure that the `transposeMatrix` method works correctly by comparing its output against an expected result.