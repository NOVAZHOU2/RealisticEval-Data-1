Here is the equivalent Java code with comments:

```java
import java.util.ArrayList;
import java.util.List;

/**
 * Transpose a given matrix (2D array).
 *
 * @param matrix the input 2D array to be transposed
 * @return the transposed 2D array
 */
public class MatrixTransposer {

    public static List<List<Integer>> transposeMatrix(List<List<Integer>> matrix) {
        
        // Initialize the transposed list of lists
        List<List<Integer>> transposed = new ArrayList<>();

        // Loop through each column index in the original matrix
        for(int i=0; i<matrix.get(0).size(); i++) {

            // For each column, create a new row and add it to the transposed matrix
            List<Integer> newRow = new ArrayList<>();
            
            // Loop through each row index in the original matrix
            for(int j=0; j<matrix.size(); j++) {

                // Add the element at position [j][i] from the original matrix to the current row
                newRow.add(matrix.get(j).get(i));
            }

            // Add the completed row to the transposed matrix
            transposed.add(newRow);
        }
        
        return transposed;
    }
}
```

This Java function does the same thing as your Python function - it takes a 2D integer list (matrix), and returns its transpose. Please note that Java doesn't have built-in support for dynamic arrays like Python's `list`, so we use `ArrayList` instead.