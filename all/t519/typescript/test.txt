Sure! Below is the equivalent TypeScript test case using Jest for the provided Python `transpose_matrix` function:

```typescript
import { describe, it, expect } from '@jest/globals';

function transposeMatrix(matrix: number[][]): number[][] {
    return matrix[0].map((_, i) => matrix.map(row => row[i]));
}

describe('transposeMatrix', () => {
    it('should transpose a 2x3 matrix correctly', () => {
        const matrix = [
            [1, 2, 3],
            [4, 5, 6]
        ];
        const expected = [
            [1, 4],
            [2, 5],
            [3, 6]
        ];
        expect(transposeMatrix(matrix)).toEqual(expected);
    });

    it('should handle an empty matrix', () => {
        const matrix: number[][] = [];
        const expected: number[][] = [];
        expect(transposeMatrix(matrix)).toEqual(expected);
    });

    it('should handle a single-row matrix', () => {
        const matrix = [[1, 2, 3]];
        const expected = [[1], [2], [3]];
        expect(transposeMatrix(matrix)).toEqual(expected);
    });

    it('should handle a single-column matrix', () => {
        const matrix = [[1], [2], [3]];
        const expected = [[1, 2, 3]];
        expect(transposeMatrix(matrix)).toEqual(expected);
    });
});
```

### Explanation:
- **Imports**: We import `describe`, `it`, and `expect` from `@jest/globals`.
- **Function Definition**: The `transposeMatrix` function is defined similarly to the Python version.
- **Test Cases**:
  - **it('should transpose a 2x3 matrix correctly')**: Tests the basic functionality with a 2x3 matrix.
  - **it('should handle an empty matrix')**: Tests the behavior of an empty matrix.
  - **it('should handle a single-row matrix')**: Tests the behavior of a matrix with only one row.
  - **it('should handle a single-column matrix')**: Tests the behavior of a matrix with only one column.

This TypeScript test suite uses Jest's testing framework to ensure that the `transposeMatrix` function behaves as expected under various conditions.