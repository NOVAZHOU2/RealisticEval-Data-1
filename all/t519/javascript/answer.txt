Certainly! Below is the equivalent JavaScript code that maintains the same functionality, logic, and structure as the provided Python code:

```javascript
function transposeMatrix(matrix) {
    /**
     * Transpose a given matrix (2D array).
     *
     * @param {Array<Array<number>>} matrix - The input 2D array to be transposed.
     * @returns {Array<Array<number>>} The transposed 2D array.
     */
    // Check if the matrix is empty
    if (!matrix || !matrix[0]) {
        return [];
    }

    const numRows = matrix.length;
    const numCols = matrix[0].length;

    // Initialize the transposed matrix with the correct dimensions
    const transposed = Array.from({ length: numCols }, () => Array(numRows).fill(0));

    for (let i = 0; i < numRows; i++) {
        for (let j = 0; j < numCols; j++) {
            transposed[j][i] = matrix[i][j];
        }
    }

    return transposed;
}
```

### Explanation:
1. **Function Definition**: The function `transposeMatrix` is defined to take a 2D array `matrix` as an argument.
2. **Empty Matrix Check**: The function checks if the input matrix is empty by verifying if `matrix` or `matrix[0]` is falsy.
3. **Dimensions Calculation**: It calculates the number of rows (`numRows`) and columns (`numCols`) in the input matrix.
4. **Initialization of Transposed Matrix**: A new 2D array `transposed` is initialized with the correct dimensions using `Array.from` and `Array.fill`.
5. **Transposition Logic**: Nested loops iterate over the elements of the input matrix and populate the `transposed` matrix accordingly.
6. **Return Transposed Matrix**: Finally, the transposed matrix is returned.

This JavaScript code mirrors the behavior of the original Python code, including handling empty matrices and performing the transposition correctly.