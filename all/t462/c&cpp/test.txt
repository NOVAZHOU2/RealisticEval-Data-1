Certainly! Below is the equivalent C++ test class using the Catch2 testing framework. The provided Python unittest class will be converted into a Catch2 test suite, ensuring that the functionality and logic of the tests are preserved.

### C++ Code with Catch2 Testing Framework

First, make sure you have Catch2 installed and included in your project. You can include Catch2 by adding the header file and using the `CATCH_TEST_CASE` macro for each test case.

Hereâ€™s the complete C++ code:

```cpp
#include <catch2/catch_test_macros.hpp>
#include <vector>

// Function to return all elements of a 2D matrix in spiral order
std::vector<int> spiralOrder(const std::vector<std::vector<int>>& matrix) {
    if (matrix.empty() || matrix[0].empty()) {
        return {};
    }

    int rows = matrix.size();
    int cols = matrix[0].size();
    int top = 0, bottom = rows - 1;
    int left = 0, right = cols - 1;
    std::vector<int> result;

    while (top <= bottom && left <= right) {
        // Traverse Right
        for (int col = left; col <= right; ++col) {
            result.push_back(matrix[top][col]);
        }
        top++;

        // Traverse Down
        for (int row = top; row <= bottom; ++row) {
            result.push_back(matrix[row][right]);
        }
        right--;

        // Traverse Left
        if (top <= bottom) {
            for (int col = right; col >= left; --col) {
                result.push_back(matrix[bottom][col]);
            }
            bottom--;
        }

        // Traverse Up
        if (left <= right) {
            for (int row = bottom; row >= top; --row) {
                result.push_back(matrix[row][left]);
            }
            left++;
        }
    }

    return result;
}

// Test suite for spiralOrder function
TEST_CASE("Test Spiral Order", "[spiralOrder]") {
    SECTION("Empty Matrix") {
        REQUIRE(spiralOrder({}) == std::vector<int>{});
    }

    SECTION("Single Row Matrix") {
        REQUIRE(spiralOrder({{1, 2, 3}}) == std::vector<int>({1, 2, 3}));
    }

    SECTION("Single Column Matrix") {
        REQUIRE(spiralOrder({{1}, {2}, {3}}) == std::vector<int>({1, 2, 3}));
    }

    SECTION("Square Matrix") {
        REQUIRE(spiralOrder({
            {1, 2, 3},
            {4, 5, 6},
            {7, 8, 9}
        }) == std::vector<int>({1, 2, 3, 6, 9, 8, 7, 4, 5}));
    }

    SECTION("Rectangle Matrix") {
        REQUIRE(spiralOrder({
            {1, 2, 3, 4},
            {5, 6, 7, 8},
            {9, 10, 11, 12}
        }) == std::vector<int>({1, 2, 3, 4, 8, 12, 11, 10, 9, 5, 6, 7}));
    }
}
```

### Explanation:
1. **Header Inclusion**:
   - Include the Catch2 header file `#include <catch2/catch_test_macros.hpp>` to use the testing macros.
   - Include the standard library headers `#include <vector>` for working with vectors.

2. **Function Definition**:
   - The `spiralOrder` function is defined to return the elements of a 2D matrix in spiral order.

3. **Test Suite**:
   - The `TEST_CASE` macro defines a test suite named "Test Spiral Order".
   - Each `SECTION` within the test suite corresponds to a specific test case.
   - The `REQUIRE` macro is used to assert the expected results.

4. **Test Cases**:
   - **Empty Matrix**: Tests an empty matrix.
   - **Single Row Matrix**: Tests a matrix with a single row.
   - **Single Column Matrix**: Tests a matrix with a single column.
   - **Square Matrix**: Tests a square matrix.
   - **Rectangle Matrix**: Tests a rectangular matrix.

This code ensures that the functionality and logic of the tests are preserved while adapting to the syntax and features of C++ and the Catch2 testing framework.