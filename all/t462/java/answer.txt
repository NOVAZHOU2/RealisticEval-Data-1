Certainly! Below is the equivalent Java code for the given Python code, organized within the package `org.real.temp` and the class `Answer`. It includes the necessary imports, type declarations, and method signatures adapted to Java's syntax and conventions:

```java
package org.real.temp;

import java.util.ArrayList;
import java.util.List;

public class Answer {

    /**
     * Given a 2D matrix, returns all elements of the matrix in spiral order.
     *
     * @param matrix A 2D array of integers.
     * @return A list of integers representing the matrix elements in spiral order.
     */
    public static List<Integer> spiralOrder(int[][] matrix) {
        if (matrix == null || matrix.length == 0 || matrix[0].length == 0) {
            return new ArrayList<>();
        }

        int rows = matrix.length;
        int cols = matrix[0].length;
        int top = 0, bottom = rows - 1;
        int left = 0, right = cols - 1;
        List<Integer> result = new ArrayList<>();

        while (top <= bottom && left <= right) {
            // Traverse Right
            for (int col = left; col <= right; col++) {
                result.add(matrix[top][col]);
            }
            top++;

            // Traverse Down
            for (int row = top; row <= bottom; row++) {
                result.add(matrix[row][right]);
            }
            right--;

            // Traverse Left
            if (top <= bottom) {
                for (int col = right; col >= left; col--) {
                    result.add(matrix[bottom][col]);
                }
                bottom--;
            }

            // Traverse Up
            if (left <= right) {
                for (int row = bottom; row >= top; row--) {
                    result.add(matrix[row][left]);
                }
                left++;
            }
        }

        return result;
    }

    public static void main(String[] args) {
        int[][] matrix = {
            {1, 2, 3},
            {4, 5, 6},
            {7, 8, 9}
        };

        List<Integer> result = spiralOrder(matrix);
        System.out.println(result);
    }
}
```

### Explanation:
1. **Imports**: Added `import java.util.ArrayList;` and `import java.util.List;` to handle the list of integers.
2. **Class and Method**: The method `spiralOrder` is defined within the `Answer` class, which takes a 2D array `int[][] matrix` as input and returns a `List<Integer>` containing the elements in spiral order.
3. **Null and Empty Check**: The method checks if the matrix is null or empty before proceeding.
4. **Loop Structure**: The loops for traversing the matrix in spiral order are implemented similarly to the Python version.
5. **Main Method**: Added a `main` method to demonstrate how to call the `spiralOrder` method and print the result.

This Java code maintains the same functionality and logic as the original Python code while adhering to Java's syntax and conventions.