Here's how you can translate your Python function into TypeScript:

```typescript
interface Point {
  x: number;
  y: number;
}

function isPointInPolygon(point: Point, polygon: Point[]): boolean {
  let x = point.x, y = point.y; 
  let inside = false;

  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {
    const xi = polygon[i].x, yi = polygon[i].y;
    const xj = polygon[j].x, yj = polygon[j].y;

    const intersect = ((yi > y) !== (yj > y)) && 
      (x < (xj - xi) * (y - yi) / (yj - yi) + xi);
    
    if (intersect) inside = !inside;
  }

  return inside;
}
```

This TypeScript version defines an interface `Point` to represent a point in 2D space and then uses it in the `isPointInPolygon` function. The logic of the function remains the same as the original Python code.