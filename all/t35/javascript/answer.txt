Sure! Here's how you can convert your Python function `is_point_in_polygon` into JavaScript:

```javascript
function isPointInPolygon(point, polygon) {
    /**
     * Determine if the point (x, y) is inside the given polygon.
     * The polygon is defined as an array of arrays [x, y] representing the vertices.
     *
     * @param {Array} point - An array [x, y] representing the point to check.
     * @param {Array<Array>} polygon - An array of arrays [x, y] representing the vertices of the polygon.
     *
     * @returns {boolean} - True if the point is inside the polygon, false otherwise.
     */
    
    let x = point[0];
    let y = point[1];
    let inside = false;
    
    for(let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {
        let xi = polygon[i][0], yi = polygon[i][1];
        let xj = polygon[j][0], yj = polygon[j][1];
        
        let intersect = ((yi > y) != (yj > y)) && 
                       (x < (xj - xi) * (y - yi) / (yj - yi) + xi);
        
        if(intersect) inside = !inside;
    }
    
    return inside;
}
```

### Explanation:
- **Parameters**: 
  - `point`: An array `[x, y]` representing the point to check.
  - `polygon`: An array of arrays `[x, y]` representing the vertices of the polygon.

- **Logic**:
  - This implementation uses the ray-casting algorithm to determine if a point lies within a polygon. It counts the number of times a horizontal line through the point intersects with edges of the polygon. If it's odd, the point is inside; if even, the point is outside.

This JavaScript function should work similarly to your original Python function.