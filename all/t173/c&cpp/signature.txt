Here’s the equivalent C++ function signature with comments:

```cpp
#include <vector>

/*
 * Calculate the coordinates of a cubic Bézier curve at a given parameter t (typically between 0 and 1).
 *
 * Args:
 *     t (double): A float representing the parameter along the curve, where 0 <= t <= 1.
 *     p0 (std::vector<double>): A vector of size 2 representing the x and y coordinates of the start point.
 *     p1 (std::vector<double>): A vector of size 2 representing the x and y coordinates of the first control point.
 *     p2 (std::vector<double>): A vector of size 2 representing the x and y coordinates of the second control point.
 *     p3 (std::vector<double>): A vector of size 2 representing the x and y coordinates of the end point.
 *
 * Returns:
 *     std::vector<double>: A vector of size 2 containing the x and y coordinates of the point on the curve corresponding to the parameter t.
 */
std::vector<double> cubic_bezier(double t, const std::vector<double>& p0, 
                                  const std::vector<double>& p1, 
                                  const std::vector<double>& p2, 
                                  const std::vector<double>& p3);
```

This version preserves the original purpose and structure while adapting to C++ syntax and documentation standards.