Hereâ€™s the equivalent C++ code for your Python function:

```cpp
#include <vector>

std::vector<double> cubic_bezier(double t, const std::vector<double>& p0, 
                                  const std::vector<double>& p1, 
                                  const std::vector<double>& p2, 
                                  const std::vector<double>& p3) {
    double x = std::pow(1 - t, 3) * p0[0] +
               3 * std::pow(1 - t, 2) * t * p1[0] +
               3 * (1 - t) * std::pow(t, 2) * p2[0] +
               std::pow(t, 3) * p3[0];

    double y = std::pow(1 - t, 3) * p0[1] +
               3 * std::pow(1 - t, 2) * t * p1[1] +
               3 * (1 - t) * std::pow(t, 2) * p2[1] +
               std::pow(t, 3) * p3[1];

    return {x, y};
}
```

This maintains the same functionality and logic while adhering to C++ syntax.