Here's how you can convert the Python code into TypeScript:

```typescript
import { exec } from 'child_process';

function cleanPattern(x: string | any, pattern: string): string | number {
    // Convert x to string
    const inputString = String(x);

    // Execute regex pattern
    const matches = inputString.match(pattern);
    
    // Check if there's a match and return it
    if (matches && matches[0]) {
        // If match is a number, return it as a float
        const numMatch = parseFloat(matches[0]);
        if (!isNaN(numMatch)) {
            return numMatch;
        }
        // Else return the match as a string
        return matches[0];
    }

    // No match, return an empty string
    return '';
}
```

Please note that the `exec` function is used here just because it was used in the provided Python code. Depending on your actual requirements, you may need to replace it with appropriate functionality in TypeScript. Also, TypeScript does not have direct equivalent of Python's `typing.Union`, but we can represent it using union types (`string | number`).