Here's how you can translate the given Python code into Java:

```java
package org.real.temp;

public class Answer {

    public static void wrapContentGenerator(String content, int width) {
        String[] words = content.split(" ");
        StringBuilder line = new StringBuilder();
        
        for (String word : words) {
            if ((line.length() + word.length()) > width) {
                System.out.println(line.toString());
                line.setLength(0);
            }
            line.append(word).append(" ");
        }
        
        if (line.length() != 0) {
            System.out.println(line.toString().trim());
        }
    }

    public static void main(String[] args) {
        wrapContentGenerator("This is an example sentence that will be split into multiple lines based on the specified width.", 20);
    }
}
```

In this Java version, I've replaced the `yield` keyword with a simple print statement because Java does not support generators like Python. Instead, it prints each line directly. Also, I've changed the function name to match Java naming conventions (camelCase), and added a main method to test the functionality. Note that in real-world applications, you might want to replace the print statements with appropriate methods for handling output or storing the results.