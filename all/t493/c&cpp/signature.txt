Sure, here's the equivalent C++ code with the same function signature and comments:

```cpp
#include <string>
#include <vector>

/**
 * @brief Wrap the text content to the specified maximum width and return each line one by one.
 *
 * @param content The content to be wrapped and returned line by line.
 * @param width The maximum width of the lines, default is 80 characters.
 * @return std::vector<std::string> A vector containing each line of the content wrapped to the specified width.
 */
std::vector<std::string> wrap_content_generator(const std::string& content, size_t width = 80);
```

This C++ function signature uses `std::vector<std::string>` to return the wrapped lines, which is similar to Python's generator that yields each line individually. If you prefer to use an iterator or another method to yield items one by one in C++, please let me know!