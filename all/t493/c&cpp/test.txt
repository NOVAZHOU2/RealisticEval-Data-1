Sure, I can help you convert the given Python unittest test class to a C++ test case using Catch2. Below is an example of how you might write the equivalent test case in C++:

```cpp
#include <catch2/catch.hpp>
#include <string>
#include <sstream>

// Function to wrap content generator
std::vector<std::string> wrap_content_generator(const std::string& content, int width = 80) {
    std::vector<std::string> result;
    std::istringstream iss(content);
    std::string word;

    while (iss >> word) {
        if (result.empty() || result.back().length() + word.length() > static_cast<size_t>(width)) {
            result.push_back(word);
        } else {
            result.back() += " " + word;
        }
    }

    return result;
}

TEST_CASE("Wrap Content Generator", "[wrap_content_generator]") {
    // Test case with a simple string
    auto result1 = wrap_content_generator("This is a simple test string.");
    REQUIRE(result1.size() == 3);
    REQUIRE(result1[0] == "This");
    REQUIRE(result1[1] == "is a");
    REQUIRE(result1[2] == "simple test string.");

    // Test case with a longer string
    auto result2 = wrap_content_generator("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.", 50);
    REQUIRE(result2.size() == 6);
    REQUIRE(result2[0] == "Lorem ipsum dolor sit amet,");
    REQUIRE(result2[1] == "consectetur adipiscing elit,");
    REQUIRE(result2[2] == "sed do eiusmod tempor incididunt");
    REQUIRE(result2[3] == "ut labore et dolore magna");
    REQUIRE(result2[4] == "aliqua.");
    REQUIRE(result2[5] == "");

    // Test case with a very long word
    auto result3 = wrap_content_generator("A verylongwordthatshouldnotbepartofthesamechunkbecauseitexceedstheallowedwidth.", 10);
    REQUIRE(result3.size() == 4);
    REQUIRE(result3[0] == "A");
    REQUIRE(result3[1] == "verylongwordthat");
    REQUIRE(result3[2] == "shouldnotbepartofthe");
    REQUIRE(result3[3] == "samechunkbecauseitexceeds");
}
```

### Explanation:
1. **Function `wrap_content_generator`**: This function wraps the input string into multiple lines based on the specified width. It uses a vector to store the resulting lines and processes each word one by one.
2. **Catch2 Test Case**:
   - `TEST_CASE("Wrap Content Generator", "[wrap_content_generator]")`: Defines a test case named "Wrap Content Generator" and associates it with the tag `[wrap_content_generator]`.
   - `auto result1 = wrap_content_generator("This is a simple test string.");`: Calls the function with a sample string and stores the result.
   - `REQUIRE(result1.size() == 3);`: Checks that the number of lines returned is correct.
   - `REQUIRE(result1[0] == "This");`: Checks that the first line is as expected.
   - Additional test cases are provided for different scenarios such as a longer string and a very long word.

Make sure you have Catch2 installed in your project. If not, you can add it via your package manager or download it from the [Catch2 GitHub repository](https://github.com/catchorg/Catch2).