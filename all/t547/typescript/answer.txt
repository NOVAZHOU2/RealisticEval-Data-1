Here's how you can translate your Python code into TypeScript:

```typescript
function calculateColumnWidths(data: string[][]): number[] {
    // Initialize an array with 0 for each column to keep track of the maximum width
    let maxWidths = new Array<number>(data[0].length).fill(0);

    // Iterate over each row
    for(let i = 0; i < data.length; i++) {
        // Iterate over each item in the row
        for(let j = 0; j < data[i].length; j++) {
            // Update the maximum width for each column if the current item is longer than the previous one
            if(data[i][j].length > maxWidths[j]) {
                maxWidths[j] = data[i][j].length;
            }
        }
    }

    return maxWidths;
}
```

This TypeScript function `calculateColumnWidths` takes a two-dimensional array of strings (`data`) and returns an array of integers (`number[]`). This array contains the maximum width of each column in the input data. It works similarly to your original Python function, but it uses TypeScript syntax and features.