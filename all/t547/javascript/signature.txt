Certainly! Below is the equivalent JavaScript code with the function signature and comments rewritten to conform to JSDoc standards:

```javascript
/**
 * Calculate the maximum width of each column in a list of lists where each sub-list represents a row of table data.
 *
 * @param {Array<Array<string>>} data - A two-dimensional array containing rows of data, where each inner array contains string elements representing the values in each column.
 * @returns {Array<number>} An array containing the maximum width (in characters) of each column across all rows. The width of a column is defined by the longest string present in that column.
 */
function calculateColumnWidths(data) {
    // Initialize an array to hold the maximum widths for each column.
    // This assumes that all rows in data have the same number of columns.
    let widths = new Array(data[0].length).fill(0);

    // Iterate over each row in the data.
    for (let row of data) {
        // Iterate over each column in the row.
        for (let idx = 0; idx < row.length; idx++) {
            // Update the width at index `idx` with the maximum of the current width
            // and the length of the string in the current column.
            widths[idx] = Math.max(widths[idx], row[idx].toString().length);
        }
    }

    // Return the array of maximum widths for each column.
    return widths;
}
```

### Explanation:
1. **JSDoc Comments**:
   - The JSDoc comment block is used to describe the function, its parameters, and its return type.
   - The `@param` tag specifies the parameter type and description.
   - The `@returns` tag specifies the return type and description.

2. **Function Signature**:
   - The function signature is written in JavaScript syntax, with the parameter `data` being an array of arrays of strings.

3. **Initialization**:
   - The `widths` array is initialized using `new Array(data[0].length).fill(0)` to create an array filled with zeros.

4. **Iteration**:
   - The nested loops iterate over the rows and columns, updating the widths as needed.

5. **Return Statement**:
   - The function returns the `widths` array containing the maximum widths for each column.

This JavaScript code preserves the functionality, logic, and structure of the original Python code while adhering to JSDoc documentation standards.