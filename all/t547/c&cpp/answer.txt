Sure, here's how you can convert your Python code to C++:

```cpp
#include <vector>
#include <string>
#include <algorithm>

std::vector<int> calculateColumnWidths(const std::vector<std::vector<std::string>>& data) {
    int columns = data[0].size();
    std::vector<int> widths(columns);

    for (const auto& row : data) {
        if (row.size() != columns)
            throw std::invalid_argument("All rows must have the same number of columns");

        for (int i = 0; i < columns; ++i) {
            widths[i] = std::max(widths[i], static_cast<int>(row[i].length()));
        }
    }

    return widths;
}
```

This C++ function `calculateColumnWidths` takes a 2D vector of strings as input and returns a vector of integers representing the maximum width of each column. It first determines the number of columns based on the size of the first row. Then it iterates over each row and updates the maximum width for each column. If any row has a different number of columns than the others, it throws an exception.