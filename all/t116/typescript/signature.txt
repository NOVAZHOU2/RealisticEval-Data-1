Certainly! Hereâ€™s the JavaScript code signature converted to TypeScript, keeping the comments intact:

```typescript
/**
 * Calculates the toroidal difference between two points.
 *
 * @param {Point} thisPoint - The first point with properties x and y.
 * @param {Point} otherPoint - The second point with properties x and y.
 * @param {number} width - The width of the toroidal space.
 * @param {number} height - The height of the toroidal space.
 * @returns {[number, number]} - An array containing the x and y differences, accounting for wrap-around.
 */
function toroidalDiff(thisPoint: Point, otherPoint: Point, width: number, height: number): [number, number] {
    // Function body goes here
}

// Helper type definition for the point object
type Point = {
    x: number;
    y: number;
};
```

In this TypeScript version:
- The `thisPoint` and `otherPoint` parameters are typed using a `Point` type.
- The return type is specified as a tuple `[number, number]`.
- A helper type `Point` is defined to make the function signature more readable.

This ensures that the function signature is properly typed and the comments are preserved.