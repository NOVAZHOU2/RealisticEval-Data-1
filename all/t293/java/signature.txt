Sure! Below is the equivalent Java code with the same functionality and comments:

```java
import java.util.Arrays;
import java.util.Comparator;

/**
 * Reorders image question based on scores in ascending order.
 *
 * @param imageScores An array of numerical scores for the images.
 * @param imageNames  An array of image names corresponding to the scores.
 * @param imageIDs    An array of image IDs corresponding to the scores.
 * @return An object containing the sorted scores, names, and IDs.
 */
public class ImageReorder {
    public static Result reorderData(double[] imageScores, String[] imageNames, Object[] imageIDs) {
        // Create an array of indices that will be sorted based on the scores
        Integer[] indices = new Integer[imageScores.length];
        for (int i = 0; i < indices.length; i++) {
            indices[i] = i;
        }

        // Sort the indices based on the scores
        Arrays.sort(indices, Comparator.comparingDouble(i -> imageScores[i]));

        // Create arrays to store the sorted results
        double[] resultScores = new double[indices.length];
        String[] resultNames = new String[indices.length];
        Object[] resultIDs = new Object[indices.length];

        // Populate the sorted arrays
        for (int i = 0; i < indices.length; i++) {
            int index = indices[i];
            resultScores[i] = imageScores[index];
            resultNames[i] = imageNames[index];
            resultIDs[i] = imageIDs[index];
        }

        // Return the sorted data
        return new Result(resultScores, resultNames, resultIDs);
    }

    // Helper class to hold the sorted results
    public static class Result {
        private final double[] resultScores;
        private final String[] resultNames;
        private final Object[] resultIDs;

        public Result(double[] resultScores, String[] resultNames, Object[] resultIDs) {
            this.resultScores = resultScores;
            this.resultNames = resultNames;
            this.resultIDs = resultIDs;
        }

        public double[] getResultScores() {
            return resultScores;
        }

        public String[] getResultNames() {
            return resultNames;
        }

        public Object[] getResultIDs() {
            return resultIDs;
        }
    }

    public static void main(String[] args) {
        double[] scores = {3.5, 2.1, 4.8};
        String[] names = {"ImageA", "ImageB", "ImageC"};
        Object[] ids = {101, 102, 103};

        Result result = reorderData(scores, names, ids);

        System.out.println("Sorted Scores: " + Arrays.toString(result.getResultScores()));
        System.out.println("Sorted Names: " + Arrays.toString(result.getResultNames()));
        System.out.println("Sorted IDs: " + Arrays.toString(result.getResultIDs()));
    }
}
```

This Java code defines a method `reorderData` that takes arrays of image scores, names, and IDs, sorts them based on the scores in ascending order, and returns an object containing the sorted data. The `Result` class is used to encapsulate the sorted arrays. The `main` method demonstrates how to use the `reorderData` method.