Hereâ€™s the equivalent Jest test class in TypeScript based on the provided Python `unittest` code. I've preserved the functionality and logic while adapting the syntax and assertions to fit Jest's style:

```typescript
// Import the function to be tested
import { findTForX } from './yourModule'; // Adjust the import according to your file structure

describe('TestFindTForX', () => {
    const TOLERANCE = 1e-6;

    test('find t for x at start', () => {
        const p0 = 0.0;
        const p1 = 0.5;
        const p2 = 1.0;
        const targetX = 0.0;
        const t = findTForX(targetX, p0, p1, p2);
        expect(t).toBeCloseTo(0.0, TOLERANCE);
    });

    test('find t for x at end', () => {
        const p0 = 0.0;
        const p1 = 0.5;
        const p2 = 1.0;
        const targetX = 1.0;
        const t = findTForX(targetX, p0, p1, p2);
        expect(t).toBeCloseTo(1.0, TOLERANCE);
    });

    test('find t for x mid curve', () => {
        const p0 = 0.0;
        const p1 = 0.5;
        const p2 = 1.0;
        const targetX = 0.25;
        const t = findTForX(targetX, p0, p1, p2);
        expect(t).toBeCloseTo(0.25, TOLERANCE);
    });

    test('find t for x near mid curve', () => {
        const p0 = 0.0;
        const p1 = 1.0;
        const p2 = 2.0;
        const targetX = 1.5;
        const t = findTForX(targetX, p0, p1, p2);
        expect(t).toBeCloseTo(0.75, TOLERANCE);
    });
});
```

### Key Changes and Explanations:
1. **Module Import**: Adjusted the import statement to include the `findTForX` function. Make sure to change `'./yourModule'` to the actual path of your module.

2. **Describe Block**: Used `describe` to group related tests, similar to how a class would encapsulate tests in `unittest`.

3. **Test Functions**: Each test case is defined using the `test` function. The structure is similar to `unittest` but adapted for Jest syntax.

4. **Assertions**: Replaced `self.assertAlmostEqual` with `expect(...).toBeCloseTo(...)`, which is the Jest way to handle floating-point comparisons with a specified tolerance.

5. **Constants**: The `TOLERANCE` constant is defined outside of the tests but within the `describe` block for clarity.

This Jest implementation should faithfully replicate the functionality of your original Python tests while adhering to TypeScript and Jest conventions.