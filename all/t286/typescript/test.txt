Certainly! Here is the equivalent TypeScript test class using Jest, ensuring that the functionality and logic of the tests are preserved. We will use Jest's assertion methods to map the Python `unittest` assertions.

### TypeScript Code with Jest Tests

First, ensure you have Jest installed in your TypeScript project:

```sh
npm install --save-dev jest @types/jest ts-jest
```

Add the necessary Jest configuration to your `tsconfig.json` or `jest.config.js`:

```json
// tsconfig.json
{
  "compilerOptions": {
    "module": "commonjs",
    "esModuleInterop": true,
    "target": "es6",
    "moduleResolution": "node",
    "sourceMap": true,
    "outDir": "./dist",
    "baseUrl": "./src",
    "incremental": true,
    "strict": true,
    "jsx": "react"
  },
  "include": ["src/**/*"],
  "exclude": ["node_modules", "**/*.spec.ts"],
  "types": ["jest"]
}
```

```json
// jest.config.js
module.exports = {
  preset: 'ts-jest',
  testEnvironment: 'node',
};
```

Now, let's write the TypeScript test class using Jest:

```typescript
import { findLargestDivisible } from './path/to/your/findLargestDivisible'; // Import the function

describe('TestFindLargestDivisible', () => {
  describe('test_typical_case', () => {
    it('should find the largest divisible number for typical inputs', () => {
      expect(findLargestDivisible(50)).toBe(50);
      expect(findLargestDivisible(47)).toBe(45);
    });
  });

  describe('test_no_divisible_found', () => {
    it('should return null when no divisible number is found', () => {
      expect(findLargestDivisible(4)).toBeNull();
    });
  });

  describe('test_exact_half_divisible', () => {
    it('should find the largest divisible number when the half of n is exactly divisible by 5', () => {
      expect(findLargestDivisible(10)).toBe(10);
    });
  });

  describe('test_large_number', () => {
    it('should find the largest divisible number for large numbers', () => {
      expect(findLargestDivisible(1000)).toBe(1000);
    });
  });

  describe('test_lower_bound', () => {
    it('should find the largest divisible number for the lowest bound', () => {
      expect(findLargestDivisible(5)).toBe(5);
    });
  });
});
```

### Explanation:
1. **Import Function**:
   - Import the `findLargestDivisible` function from the appropriate module.

2. **Describe Blocks**:
   - Use `describe` blocks to group related tests.
   - Each `it` block contains a specific test case.

3. **Assertion Methods**:
   - Use Jest's assertion methods like `toBe` and `toBeNull` to match the Python `unittest` assertions.

4. **Test Cases**:
   - Each test case is mapped to the corresponding Python test method, ensuring the same functionality and logic.

This setup ensures that the TypeScript tests are structured similarly to the Python unittests and provide the same level of coverage and functionality.