First, let's define the function `find_largest_divisible` in TypeScript. We'll also need to write the Jest tests for this function.

Here's how you can convert the function and write tests for it:

1. **Function Definition in TypeScript**
2. **Test Class with Jest**

### Function Definition

```typescript
function findLargestDivisible(n: number): number | null {
    // Ensure n is an integer
    if (!Number.isInteger(n)) {
        return null;
    }

    // Calculate the lower bound
    const lowerBound = Math.floor(n / 2);

    // Loop from n down to lowerBound to find the largest number divisible by 10 or 5
    for (let i = n; i >= lowerBound; i--) {
        if (i % 10 === 0 || i % 5 === 0) {
            return i;
        }
    }

    // If no such number exists, return null
    return null;
}
```

### Jest Test Class

Now, let's write the Jest test class to test the `findLargestDivisible` function:

```typescript
import { describe, it, expect } from '@jest/globals';

// Test suite for the findLargestDivisible function
describe('findLargestDivisible', () => {
    it('should return the largest number divisible by 10 or 5 between n and half of n', () => {
        expect(findLargestDivisible(10)).toBe(10); // Largest number between 10 and 5 that is divisible by 10 or 5
        expect(findLargestDivisible(25)).toBe(25); // Largest number between 25 and 12 that is divisible by 10 or 5
        expect(findLargestDivisible(40)).toBe(40); // Largest number between 40 and 20 that is divisible by 10 or 5
        expect(findLargestDivisible(49)).toBe(45); // Largest number between 49 and 24 that is divisible by 10 or 5
    });

    it('should return null when no such number exists', () => {
        expect(findLargestDivisible(1)).toBeNull(); // No number between 1 and 0.5 that is divisible by 10 or 5
        expect(findLargestDivisible(3)).toBeNull(); // No number between 3 and 1.5 that is divisible by 10 or 5
        expect(findLargestDivisible(7)).toBeNull(); // No number between 7 and 3.5 that is divisible by 10 or 5
    });

    it('should handle non-integer inputs gracefully', () => {
        expect(findLargestDivisible(10.5)).toBeNull(); // Non-integer input
        expect(findLargestDivisible(25.3)).toBeNull(); // Non-integer input
    });
});
```

### Explanation

1. **Function Definition**:
   - The function `findLargestDivisible` takes an integer `n` and returns the largest integer between `n` and half of `n` that is divisible by 10 or 5. If no such number exists, it returns `null`.

2. **Jest Test Suite**:
   - The test suite uses `describe` to group the tests.
   - Each `it` block represents a specific test case.
   - `expect` is used to make assertions about the function's behavior.

This setup ensures that the functionality and logic of the tests are preserved while accounting for the differences between Python's `unittest` and TypeScript's `jest`.