Here's the equivalent TypeScript code for the provided Python function:

```typescript
/**
 * Finds the largest integer between a given number `n` and half of it that is divisible by 10 or 5.
 * @param n The upper bound of the range.
 * @returns The largest integer between `n` and half of `n` that is divisible by 5, or
 *          `null` if no such number exists.
 */
function findLargestDivisible(n: number): number | null {
    let lowerBound = Math.floor(n / 2);

    for (let i = n; i >= lowerBound; i--) {
        if (i % 5 === 0 || i % 10 === 0) {
            return i;
        }
    }

    return null;
}
```

### Explanation

1. **Function Signature**: 
   - The Python function signature `def find_largest_divisible(n: int) -> Union[int, None]` translates to `function findLargestDivisible(n: number): number | null` in TypeScript.
   - `Union[int, None]` in Python corresponds to `number | null` in TypeScript.

2. **Documentation Comments**:
   - Python docstrings are converted to JSDoc comments (`/** ... */`) which are commonly used in TypeScript for documentation purposes.

3. **Implementation**:
   - The logic inside the function remains the same. We calculate the lower bound as half of `n` and then iterate backwards from `n` to the lower bound, checking for divisibility by 5 or 10.

4. **Return Type**:
   - The return type `Union[int, None]` in Python is represented as `number | null` in TypeScript.

This TypeScript code preserves the original functionality and adheres to TypeScript conventions.