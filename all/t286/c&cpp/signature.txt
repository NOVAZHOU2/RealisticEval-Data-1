Here is your Python code translated into C++:

```cpp
#include <iostream>

/**
 * Find the largest integer between a given number n and half of it that is divisible by 10 or 5
 *
 * @param n The upper bound of the range.
 * @return The largest integer between n and half of n that is divisible by 5,
 * or -1 if no such number exists.
 */
int findLargestDivisible(int n) {
    for (int i = n / 2; i <= n; ++i) {
        if (i % 10 == 0 || i % 5 == 0) {
            return i;
        }
    }

    return -1;
}
```

This C++ function does exactly what the Python one does: it iterates over the numbers from `n/2` up to `n`, checking each one to see if it's divisible by 10 or 5. If it finds such a number, it returns it immediately. If it doesn't find any such number, it returns `-1`.

Note that in C++, we don't have built-in support for optional types like Python does with `Union`. So instead of returning `None`, we return `-1` which is a common convention in C++ to indicate an error or absence of a valid result.