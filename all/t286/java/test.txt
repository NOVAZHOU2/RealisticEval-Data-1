Below is the Java equivalent of the provided Python code using JUnit testing framework:

```java
import org.junit.Test;
import static org.junit.Assert.*;
import static org.real.temp.FindLargestDivisible.*;

public class Tester {

    @Test
    public void testFindLargestDivisible() {
        // Test cases to verify the function works as expected
        
        // Case 1: Check with a number where the largest divisible number is not the half
        assertEquals(30, findLargestDivisible(35));
        
        // Case 2: Check with a number where the largest divisible number is exactly the half
        assertEquals(40, findLargestDivisible(80));
        
        // Case 3: Check with a number where no number is divisible by 10 or 5 between n and half of n
        assertNull(findLargestDivisible(9));
        
        // Additional test cases can be added here
    }
}

// Assuming FindLargestDivisible.java contains the method to be tested
package org.real.temp;

public class FindLargestDivisible {
    
    /**
     * find the largest integer between a given number n and half of it that is divisible by 10 or 5
     *
     * @param n The upper bound of the range.
     * 
     * @return The largest integer between n and half of n that is divisible by 5, or
     *         null if no such number exists.
     */
    public static Integer findLargestDivisible(int n) {
        for (int i = n; i >= n / 2; i--) {
            if (i % 5 == 0 || i % 10 == 0) {
                return i;
            }
        }
        return null;
    }
}
```

In this conversion, we've created a `FindLargestDivisible` class with the method `findLargestDivisible` which implements the same logic as the original Python function. We then created a `Tester` class with a test method `testFindLargestDivisible` using JUnit assertions to validate the method's correctness.