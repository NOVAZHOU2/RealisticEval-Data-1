Sure! Here's how you can translate the JavaScript function `isCppHeaderFile` into C++:

```cpp
#include <string>

/**
 * Checks whether a file name is a C++ header file.
 *
 * @param fileName - The name of the file to check.
 * @return true if the file is a C++ header file, false otherwise.
 */
bool isCppHeaderFile(const std::string& fileName) {
    // Check if the file name ends with ".h" or ".hpp"
    if (fileName.length() > 2 && 
        (fileName.substr(fileName.length() - 2) == ".h" || 
         fileName.substr(fileName.length() - 4) == ".hpp")) {
        return true;
    }
    return false;
}
```

### Explanation:
- **Include `<string>`**: This header is included to use the `std::string` class.
- **Function Signature**:
  - The function `isCppHeaderFile` takes a `const std::string&` parameter named `fileName`.
  - It returns a `bool` indicating whether the file name is a C++ header file.
- **String Comparison**:
  - The function checks if the length of the string is greater than 2 to ensure there is enough room for the file extension.
  - It then uses `substr` to extract the last two characters and compares them to `.h`. If not found, it checks the last four characters to see if they match `.hpp`.

This should give you a C++ version of your JavaScript function that performs the same task.