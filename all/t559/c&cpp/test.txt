Hereâ€™s how you can convert the provided JavaScript Jest test cases to C++ test cases using the Catch2 framework:

```cpp
#define CATCH_CONFIG_MAIN
#include <catch2/catch.hpp>
#include <string>

// Function prototype
bool isCppHeaderFile(const std::string& fileName);

TEST_CASE("isCppHeaderFile") {
    SECTION("returns true for a .h file") {
        REQUIRE(isCppHeaderFile("example.h") == true);
    }

    SECTION("returns true for a .hpp file") {
        REQUIRE(isCppHeaderFile("example.hpp") == true);
    }

    SECTION("returns false for a non-header file extension") {
        REQUIRE(isCppHeaderFile("example.txt") == false);
    }

    SECTION("returns false for a file without an extension") {
        REQUIRE(isCppHeaderFile("example") == false);
    }

    SECTION("returns false for a .c file") {
        REQUIRE(isCppHeaderFile("example.c") == false);
    }
}
```

This code sets up a series of test cases for the `isCppHeaderFile` function using the Catch2 testing framework. Each `SECTION` corresponds to a test case from your original Jest tests.