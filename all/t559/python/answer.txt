Hereâ€™s how you can convert the provided JavaScript function to Python. The Python version will use the re module for regular expression matching.
Converted Python Code
python
import re

def is_cpp_header_file(file_name: str) -> bool:
    """
    Checks whether a file name is a C++ header file.

    Args:
        file_name (str): The name of the file to check.

    Returns:
        bool: Returns True if the file is a C++ header file, False otherwise.
    """
    # Define a regular expression to match C++ header file extensions
    cpp_header_extensions = re.compile(r'\.(h|hh|hpp|hxx)$', re.IGNORECASE)
    
    # Test the file name against the regular expression
    return bool(cpp_header_extensions.search(file_name))

# Example usage:
# print(is_cpp_header_file("example.hpp"))  # Output: True
# print(is_cpp_header_file("example.txt"))   # Output: False
Explanation:
Imports:
The re module is imported to work with regular expressions.
Function Definition:
The function is named is_cpp_header_file, following Python naming conventions (snake_case).
The parameter file_name is annotated with str to indicate it should be a string.
The return type is specified as bool.
Regular Expression:
The regular expression r'\.(h|hh|hpp|hxx)$' is compiled using re.compile() with the re.IGNORECASE flag to make the matching case insensitive.
Testing:
The search method is used to check if the file name matches the defined pattern.
The function returns True if a match is found, and False otherwise, by converting the match object to a boolean.
Example Usage:
Example calls to the function are included as comments to demonstrate its use.
This code will correctly identify C++ header files based on their extensions, similar to the original JavaScript function.