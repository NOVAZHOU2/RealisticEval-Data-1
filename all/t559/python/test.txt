Sure! Below is the equivalent Python unit test case using the `unittest` framework for the given JavaScript Jest function:

```python
import unittest

def is_cpp_header_file(file_name):
    # Implement your logic here
    return file_name.endswith('.h')

class TestIsCppHeaderFile(unittest.TestCase):
    def test_is_cpp_header_file(self):
        self.assertTrue(is_cpp_header_file('example.h'))
        self.assertFalse(is_cpp_header_file('example.cpp'))
        self.assertFalse(is_cpp_header_file('example.txt'))

if __name__ == '__main__':
    unittest.main()
```

In this Python code:
- We define the `is_cpp_header_file` function which checks if the file name ends with `.h`.
- We create a test class `TestIsCppHeaderFile` that inherits from `unittest.TestCase`.
- Inside the test class, we define a method `test_is_cpp_header_file` to test our function with different inputs.

To run the tests, you can simply execute the Python script. If all tests pass, you will see a message indicating success; otherwise, you will see details about the failed tests.