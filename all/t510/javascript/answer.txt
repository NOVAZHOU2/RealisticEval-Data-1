Sure! Below is the JavaScript version of the provided Python function:

```javascript
function findPowers(num) {
    /**
     * Find the powers of 2 and 3 that multiply to produce the given number.
     *
     * @param {number} num - A positive integer greater than zero.
     * @returns {Array|null} - An array [n, m] where n is the power of 2 and m is the power of 3.
     *                        Returns null if the number is zero or if the number has prime factors other than 2 and 3.
     */
    
    // Check if the number is zero
    if (num === 0) return null;

    let n = 0;
    let m = 0;

    // Divide num by 2 until it's no longer divisible by 2
    while (num % 2 === 0) {
        num /= 2;
        n++;
    }

    // Divide num by 3 until it's no longer divisible by 3
    while (num % 3 === 0) {
        num /= 3;
        m++;
    }

    // If after all divisions num is not 1, it means there are other prime factors
    if (num !== 1) return null;

    return [n, m];
}
```

This JavaScript function `findPowers` performs the same logic as your Python function. It checks if the input number is zero and returns `null` if so. Then, it calculates the powers of 2 and 3 that multiply to produce the given number. If the number has any prime factors other than 2 and 3, it returns `null`. Otherwise, it returns an array containing the powers of 2 and 3.