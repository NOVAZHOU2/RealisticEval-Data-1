Here's the equivalent C++ code that captures the functionality and logic of the provided Python code:

```cpp
#include <iostream>
#include <vector>
#include <string>
#include <cstdlib>
#include <ctime>
#include <algorithm>

class RandomStringGenerator {
public:
    static const std::string LOWER_CASE;
    static const std::string UPPER_CASE;
    static const int LENGTH = 10; // Set the desired length of the string

    static std::string generate_random_string() {
        // Use a vector to construct the random string
        std::vector<char> random_string;

        // Ensure at least one upper case and one lower case letter
        random_string.push_back(LOWER_CASE[rand() % LOWER_CASE.size()]);
        random_string.push_back(UPPER_CASE[rand() % UPPER_CASE.size()]);

        // Fill the rest of the string length with random characters
        std::string all_characters = LOWER_CASE + UPPER_CASE;
        for (int i = 2; i < LENGTH; ++i) {
            char random_char = all_characters[rand() % all_characters.size()];
            random_string.push_back(random_char);
        }

        // Shuffle the characters to ensure randomness
        return shuffle_string(std::string(random_string.begin(), random_string.end()));
    }

private:
    static std::string shuffle_string(std::string str) {
        std::random_shuffle(str.begin(), str.end());
        return str;
    }
};

// Initialize the static member variables
const std::string RandomStringGenerator::LOWER_CASE = "abcdefghijklmnopqrstuvwxyz";
const std::string RandomStringGenerator::UPPER_CASE = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

int main() {
    std::srand(static_cast<unsigned int>(std::time(nullptr))); // Seed for random number generation
    std::string random_string = RandomStringGenerator::generate_random_string();
    std::cout << "Generated Random String: " << random_string << std::endl;
    return 0;
}
```

### Explanation:

1. **Class Definition**: The `RandomStringGenerator` class encapsulates the string generation logic.
  
2. **Static Members**: `LOWER_CASE`, `UPPER_CASE`, and `LENGTH` are defined as static members. This is similar to the Python class attributes.

3. **Randomness**: The `rand()` function is used to generate random indices, which mimics the behavior of Python's `random.choice()`.

4. **Vector for String Construction**: A `std::vector<char>` is used to construct the random string. This is akin to the list in Python.

5. **Shuffling**: `std::random_shuffle` is used to shuffle the string characters.

6. **Main Function**: The entry point for the C++ program, where the random string generation is invoked and printed.

7. **Random Seed**: `std::srand` is called to seed the random number generator using the current time, ensuring different outputs on each run.