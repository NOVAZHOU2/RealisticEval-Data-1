Here's how you can convert the JavaScript code to Java:

```java
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

/**
 * Calculates the age from the given birth date string and returns a string containing the original birth date and the calculated age. If the entered date string is invalid or empty, the function returns an empty string.
 *
 * @param birthDateString - The birth date as a string in a recognizable date format (e.g., 'YYYY-MM-DD').
 * @return A string that includes the original birth date and the calculated age in the format 'birthDateString (age)', or an empty string if the input is invalid.
 */
public class Main {

    public static void main(String[] args) {
        System.out.println(calculateAge("1990-05-24"));
        System.out.println(calculateAge(""));
        System.out.println(calculateAge("not a date"));
    }

    public static String calculateAge(String birthDateString) {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

        try {
            LocalDate birthDate = LocalDate.parse(birthDateString, formatter);
            LocalDate today = LocalDate.now();
            int age = today.getYear() - birthDate.getYear();

            if (today.getMonthValue() < birthDate.getMonthValue() || 
                (today.getMonthValue() == birthDate.getMonthValue() && today.getDayOfMonth() < birthDate.getDayOfMonth())) {
                age--;
            }
            
            return birthDateString + " (" + age + ")";
        } catch (DateTimeParseException e) {
            return "";
        }
    }
}
```

This Java code does the same thing as your JavaScript function: it calculates the person's age based on their birthdate. If the birthdate is not valid, it returns an empty string.