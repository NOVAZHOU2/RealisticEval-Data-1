To convert the provided JavaScript function calculateAge into Python, we need to follow Python's syntax and use its date handling capabilities from the datetime module. Below is the equivalent Python code:
Python Code
python
from datetime import datetime

def calculate_age(birth_date_string):
    """
    Calculates the age based on the birth date string.
    
    Args:
        birth_date_string (str): The birth date in string format (e.g., 'YYYY-MM-DD').
    
    Returns:
        str: A string representing the birth date and age, or an empty string if the input is invalid.
    """
    # Check if the input is valid
    if not birth_date_string:
        return ''
    
    try:
        birth_date = datetime.strptime(birth_date_string, '%Y-%m-%d')
    except ValueError:
        return ''  # Return empty string if the date is invalid
    
    today = datetime.now()
    age = today.year - birth_date.year
    
    # Check if the birthday has passed this year
    is_birthday_passed = (today.month > birth_date.month or
                          (today.month == birth_date.month and today.day >= birth_date.day))
    
    if not is_birthday_passed:
        age -= 1
    
    return f"{birth_date_string} ({age})"

# Example usage
print(calculate_age('1990-10-11'))  # Replace with any valid date string
Explanation of the Code:
Imports: We import the datetime class from the datetime module to handle date operations.
Function Definition: The function calculate_age takes a string birth_date_string as an argument.
Input Validation:
The function first checks if the input is empty. If it is, it returns an empty string.
It then tries to parse the input string into a datetime object using the strptime method, which specifies the format of the date. If parsing fails (for example, if the input is not in the correct format), it catches the ValueError and returns an empty string.
Calculating Age:
It gets the current date and calculates the initial age by subtracting the birth year from the current year.
It checks if the birthday has passed in the current year and adjusts the age accordingly.
Return Statement: The function returns a formatted string containing the birth date and the calculated age.
Example Usage:
The example at the bottom shows how to call the calculate_age function with a sample birth date string. You can replace '1990-10-11' with any valid date string in the 'YYYY-MM-DD' format to test the function.