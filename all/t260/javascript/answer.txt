Here's how you could write that Python function in JavaScript using Node.js and the `pandas` library for Node.js (`node-pandas`). Note that `node-pandas` is not an official package, but it does exist.

```javascript
const { readCSV, writeCSV } = require('node-pandas');

async function processCSV(filePath, outputPath) {
    try {
        let df = await readCSV(filePath);
        if(df.isEmpty()){
            return '';
        }
        let dfWithoutEmptyColumns = df.dropna({how:'all'});
        await writeCSV(dfWithoutEmptyColumns, outputPath);
    } catch(error) {
        console.error(`Error processing CSV: ${error}`);
    }
}

module.exports = processCSV;
```

In this JavaScript version of your function, we're using the `readCSV()` function from the `node-pandas` library to read in the CSV file specified by `filePath`. If the DataFrame returned by `readCSV()` is empty, we return an empty string. Otherwise, we use the `dropna()` method to remove any rows that have all null values, then save the resulting DataFrame to the file specified by `outputPath` using the `writeCSV()` function.

Please note that the `node-pandas` library may not behave exactly like the Python version of pandas, so you should test it thoroughly to ensure that it meets your needs.