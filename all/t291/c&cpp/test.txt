To convert the given Python function into a C++ program and write equivalent tests using Catch2, follow these steps:

1. **Implement the `prepend_to_each_line` function in C++**.
2. **Create a Catch2 test suite** to ensure the function behaves as expected.

Hereâ€™s how you can do it:

### 1. Implement the Function

```cpp
#include <fstream>
#include <string>
#include <iostream>

// Function to prepend a prefix to each line of a file
void prepend_to_each_line(const std::string& file_path, const std::string& prefix) {
    // Temporary file name
    std::string temp_file = file_path + ".tmp";

    std::ifstream infile(file_path);
    std::ofstream outfile(temp_file);

    if (!infile.is_open() || !outfile.is_open()) {
        std::cerr << "Error opening files" << std::endl;
        return;
    }

    std::string line;
    while (std::getline(infile, line)) {
        outfile << prefix << line << '\n';
    }

    infile.close();
    outfile.close();

    // Replace original file with the temporary file
    if (std::rename(temp_file.c_str(), file_path.c_str()) != 0) {
        std::cerr << "Error replacing file" << std::endl;
    }
}
```

### 2. Create the Test Suite with Catch2

First, include the necessary headers and define your test suite:

```cpp
#include <catch2/catch_test_macros.hpp>
#include <fstream>
#include <string>
#include <iostream>

// Function implementation (same as above)
void prepend_to_each_line(const std::string& file_path, const std::string& prefix);

TEST_CASE("Prepend prefix to each line of a file", "[prepend_to_each_line]") {
    // Test data
    std::string file_path = "test.txt";
    std::string prefix = ">> ";

    // Create a test file
    std::ofstream testFile(file_path);
    testFile << "Hello\nWorld\n";
    testFile.close();

    // Call the function under test
    prepend_to_each_line(file_path, prefix);

    // Read the modified file and check its contents
    std::ifstream modifiedFile(file_path);
    std::string line;

    SECTION("First line is prepended correctly") {
        REQUIRE(std::getline(modifiedFile, line));
        REQUIRE(line == prefix + "Hello");
    }

    SECTION("Second line is prepended correctly") {
        REQUIRE(std::getline(modifiedFile, line));
        REQUIRE(line == prefix + "World");
    }

    // Check for end of file
    REQUIRE_FALSE(std::getline(modifiedFile, line));

    // Clean up the test file
    std::remove(file_path.c_str());
}
```

### Explanation

- **Function Implementation**: The `prepend_to_each_line` function reads each line from the input file, prepends the prefix, and writes it to a temporary file. After processing all lines, it replaces the original file with the temporary one.
- **Test Suite**: The Catch2 test suite creates a test file, calls the function under test, and verifies the results by reading the modified file and comparing the lines against the expected values.

This setup ensures that the functionality and logic of the tests are preserved while making necessary adjustments for language differences between Python and C++.