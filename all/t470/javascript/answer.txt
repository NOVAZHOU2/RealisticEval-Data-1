Here's how you can write that Python function in JavaScript using the popular library 'mathjs' for handling matrices:

```javascript
const math = require('mathjs');

function applyShearX(matrix, shearFactor) {
    /**
     * Applies a shear transformation to a 2D matrix along the x-axis.
     *
     * @param {Array<Array<number>>} matrix - A 2D array representing the original matrix.
     * @param {number} shearFactor - The factor by which the matrix is sheared along the x-axis.
     * @returns {Array<Array<number>>} The sheared matrix.
     */

    let shearMatrix = math.matrix([
        [1, shearFactor],
        [0, 1]
    ]);

    return math.multiply(shearMatrix, matrix);
}
```

In this JavaScript version, we first create a shear matrix `shearMatrix` with the given `shearFactor`. Then, we multiply this shear matrix with the input `matrix` using `math.multiply()`, which is a method provided by the 'mathjs' library to perform matrix multiplication. The result is returned as the sheared matrix. 

Please note that you need to install 'mathjs' package before running the above code. You can do it using npm or yarn:

npm:
```bash
npm install mathjs
```
yarn:
```bash
yarn add mathjs
```