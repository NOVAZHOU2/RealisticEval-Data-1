Certainly! Below is the equivalent C++ code for applying a shear transformation to a 2D matrix along the x-axis. This code uses the `Eigen` library for handling matrices, as it provides a convenient and efficient way to work with matrix operations similar to NumPy in Python.

First, you need to install the Eigen library if you haven't already. You can include it in your project by downloading the header files from the official repository or using a package manager like vcpkg or Conan.

Here's the C++ code:

```cpp
#include <iostream>
#include <Eigen/Dense>

// Function to apply a shear transformation to a 2D matrix along the x-axis
Eigen::MatrixXd applyShearX(const Eigen::MatrixXd& matrix, double shear_factor) {
    // Define the shear transformation matrix for shearing along the x-axis
    Eigen::Matrix2d shear_matrix;
    shear_matrix << 1, shear_factor,
                    0, 1;

    // Applying the shear transformation
    // For matrix multiplication, use the * operator
    Eigen::MatrixXd transformed_matrix = matrix * shear_matrix;

    return transformed_matrix;
}

int main() {
    // Example usage
    Eigen::MatrixXd matrix(2, 2);
    matrix << 1, 2,
              3, 4;

    double shear_factor = 0.5;

    Eigen::MatrixXd transformed_matrix = applyShearX(matrix, shear_factor);

    std::cout << "Original Matrix:\n" << matrix << "\n";
    std::cout << "Transformed Matrix:\n" << transformed_matrix << "\n";

    return 0;
}
```

### Explanation:
1. **Eigen Library**: The `Eigen` library is used to handle matrices efficiently. It provides a simple and intuitive interface for matrix operations.
2. **Function Definition**: The `applyShearX` function takes a 2D matrix (`Eigen::MatrixXd`) and a shear factor (`double`) as input and returns the transformed matrix.
3. **Shear Matrix**: A 2x2 shear matrix is defined using `Eigen::Matrix2d`.
4. **Matrix Multiplication**: The shear transformation is applied using the `*` operator for matrix multiplication.
5. **Example Usage**: In the `main` function, an example matrix is created, and the shear transformation is applied. The original and transformed matrices are printed for verification.

Make sure to include the Eigen library in your project by adding the necessary headers and linking against it during compilation.