Certainly! Below is the equivalent Java code for the provided Python function, including appropriate Javadoc comments and type conversions:

```java
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;

public class Answer {

    /**
     * Find duplicate IPs in the given IP list excluding specified IPs to ignore.
     *
     * @param ipList      List of IP addresses
     * @param ignoreList  List of IP addresses to ignore
     * @return            A list of duplicate IPs excluding those in the ignore list
     */
    public static List<String> findDuplicateIps(List<String> ipList, List<String> ignoreList) {
        // Convert ignoreList to a set for faster lookups
        Set<String> ignoreSet = new HashSet<>(ignoreList);

        // Map to count occurrences of each IP
        Map<String, Integer> ipCount = new HashMap<>();

        // Count occurrences of each IP, excluding ignored IPs
        for (String ip : ipList) {
            if (!ignoreSet.contains(ip)) {
                ipCount.put(ip, ipCount.getOrDefault(ip, 0) + 1);
            }
        }

        // Collect duplicate IPs
        List<String> duplicates = new ArrayList<>();
        for (Map.Entry<String, Integer> entry : ipCount.entrySet()) {
            if (entry.getValue() > 1) {
                duplicates.add(entry.getKey());
            }
        }

        return duplicates;
    }

    // Example usage
    public static void main(String[] args) {
        List<String> ipList = List.of("192.168.1.1", "192.168.1.2", "192.168.1.1", "192.168.1.3");
        List<String> ignoreList = List.of("192.168.1.2");
        List<String> duplicates = findDuplicateIps(ipList, ignoreList);
        System.out.println(duplicates); // Output: [192.168.1.1]
    }
}
```

### Explanation:
1. **Import Statements**: The necessary import statements are included at the beginning of the file.
   - `import java.util.ArrayList;`
   - `import java.util.HashSet;`
   - `import java.util.List;`
   - `import java.util.Map;`
   - `import java.util.HashMap;`
   - `import java.util.Set;`

2. **Class Definition**: The class `Answer` is defined with the `public` modifier.

3. **Javadoc Comments**: The method `findDuplicateIps` includes Javadoc comments that describe the method, its parameters, and its return value.

4. **Method Signature**: The method signature `public static List<String> findDuplicateIps(List<String> ipList, List<String> ignoreList)` matches the Python function signature.

5. **Set Conversion**: The `ignoreList` is converted to a `HashSet` for faster lookups.

6. **IP Counting**: A `HashMap` named `ipCount` is used to count the occurrences of each IP address.

7. **Collecting Duplicates**: A `List<String>` named `duplicates` is used to collect the IP addresses that appear more than once.

8. **Example Usage**: The `main` method demonstrates how to call the `findDuplicateIps` method and prints the result.

This Java code preserves the original functionality and structure of the Python code while adhering to Java conventions and best practices.