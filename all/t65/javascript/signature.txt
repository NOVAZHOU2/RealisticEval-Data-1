Certainly! Below is the equivalent JavaScript code with the function signature and comments rewritten to conform to JavaScript documentation standards using JSDoc format:

```javascript
/**
 * Find duplicate IPs in the given IP list excluding specified IPs to ignore.
 *
 * @param {string[]} ipList - List of IP addresses.
 * @param {string[]} ignoreList - List of IP addresses to ignore.
 * @returns {string[]} A list of duplicate IPs excluding those in the ignore list.
 */
function findDuplicateIPs(ipList, ignoreList) {
    // Convert ignoreList to a Set for faster lookups
    const ignoreSet = new Set(ignoreList);

    // Object to count occurrences of each IP
    const ipCount = {};

    // Count occurrences of each IP, excluding ignored IPs
    for (const ip of ipList) {
        if (!ignoreSet.has(ip)) {
            if (ip in ipCount) {
                ipCount[ip] += 1;
            } else {
                ipCount[ip] = 1;
            }
        }
    }

    // Collect duplicate IPs
    const duplicates = Object.entries(ipCount).filter(([ip, count]) => count > 1).map(([ip, count]) => ip);

    return duplicates;
}
```

### Explanation:
1. **JSDoc Comments**:
   - The function is documented using JSDoc comments.
   - The `@param` tags describe the parameters and their types.
   - The `@returns` tag describes the return type and value.

2. **Function Signature**:
   - The function `findDuplicateIPs` takes two parameters: `ipList` and `ignoreList`.
   - The parameter types are annotated using JSDoc comments (`string[]`).

3. **Implementation**:
   - The implementation remains the same as previously provided, ensuring the logic and structure are preserved.

This JavaScript code should provide the same functionality as the original Python code, with proper documentation using JSDoc.