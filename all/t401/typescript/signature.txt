Certainly! Here’s the equivalent TypeScript code for the provided Python function, including proper type annotations and JSDoc-style documentation comments:

```typescript
import * as re from 'xregexp';

/**
 * Find and return a list of all placeholders in the format {{ placeholder }} from the input text.
 *
 * @param text - The input string containing potential placeholders.
 * @returns An array of matching placeholders.
 */
function findPlaceholders(text: string): string[] {
    // Use a regular expression to find placeholders in the specified format
    const placeholders = re.match(text, /{{\s*([\w]+)\s*}}/g);
    return placeholders ? placeholders.map(match => match.trim()) : [];
}

// Example usage
const exampleText = "Hello, {{ name }}! Welcome to {{ place }}.";
console.log(findPlaceholders(exampleText));
```

### Explanation:
1. **Importing Regular Expression Library**:
   - TypeScript does not have a built-in `re` module like Python, so we use `xregexp` which provides similar functionality. You can install it using npm or yarn.

2. **Function Definition**:
   - The function `findPlaceholders` is defined with a parameter `text` of type `string` and returns an array of strings (`string[]`).

3. **JSDoc Documentation Comments**:
   - The JSDoc-style comments provide detailed documentation for the function, including the parameters and return type.

4. **Regular Expression**:
   - The regular expression `/{{\s*([\w]+)\s*}}/g` is used to find all occurrences of placeholders in the specified format.

5. **Return Value**:
   - The function returns an array of matching placeholders. If no matches are found, it returns an empty array.

### Installation:
To use this code, you need to install `xregexp`:
```sh
npm install xregexp
```

Here’s the complete TypeScript code with proper documentation and type annotations:

```typescript
import * as re from 'xregexp';

/**
 * Find and return a list of all placeholders in the format {{ placeholder }} from the input text.
 *
 * @param text - The input string containing potential placeholders.
 * @returns An array of matching placeholders.
 */
function findPlaceholders(text: string): string[] {
    // Use a regular expression to find placeholders in the specified format
    const placeholders = re.match(text, /{{\s*([\w]+)\s*}}/g);
    return placeholders ? placeholders.map(match => match.trim()) : [];
}

// Example usage
const exampleText = "Hello, {{ name }}! Welcome to {{ place }}.";
console.log(findPlaceholders(exampleText));
```

This TypeScript code preserves the original functionality and structure of the Python code while adhering to TypeScript's static type system and documentation standards.