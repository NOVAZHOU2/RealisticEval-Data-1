Below is the conversion of the given Python unittest test class into an equivalent test class using Jest in TypeScript:

Firstly, we need to define the function in TypeScript:

```typescript
function findPlaceholders(text: string): string[] {
    const regex = /\{\{.*?\}\}/g;
    const matches = text.match(regex);
    return matches ? matches : [];
}

// Example usage
console.log(findPlaceholders("Hello, {{world}}! This is a {{test}}.")); // Outputs: ["{{world}}", "{{test}}"]
```

Now, let's write the test class using Jest:

```typescript
import { describe, it, expect } from '@jest/globals';

// Test suite for the findPlaceholders function
describe('findPlaceholders', () => {
    it('should find no placeholders in a string without placeholders', () => {
        const text = 'This is a simple string.';
        const placeholders = findPlaceholders(text);
        expect(placeholders).toEqual([]);
    });

    it('should find one placeholder in a string with one placeholder', () => {
        const text = 'This is a {{simple}} string.';
        const placeholders = findPlaceholders(text);
        expect(placeholders).toEqual(['{{simple}}']);
    });

    it('should find multiple placeholders in a string with multiple placeholders', () => {
        const text = 'This is a {{first}} string with {{second}} placeholders.';
        const placeholders = findPlaceholders(text);
        expect(placeholders).toEqual(['{{first}}', '{{second}}']);
    });

    it('should handle edge cases like empty strings and strings with no placeholders', () => {
        const emptyString = '';
        const noPlaceholderString = 'No placeholders here!';
        const singlePlaceholderString = 'A {{single}} placeholder.';
        
        expect(findPlaceholders(emptyString)).toEqual([]);
        expect(findPlaceholders(noPlaceholderString)).toEqual([]);
        expect(findPlaceholders(singlePlaceholderString)).toEqual(['{{single}}']);
    });
});
```

In this code:

- `findPlaceholders` function takes a string as an argument and returns an array of placeholders found within the string.
- The `describe` function is used to group related tests together.
- The `it` function is used to define individual test cases.
- The `expect` function is used to make assertions about the output of the `findPlaceholders` function.