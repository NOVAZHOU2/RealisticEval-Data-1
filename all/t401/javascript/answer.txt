Sure! Here is the equivalent JavaScript code that maintains the same functionality, logic, and structure as the provided Python code:

```javascript
function findPlaceholders(text) {
    /**
     * Find and return an array of all placeholders in the format {{ placeholder }} from the input text.
     *
     * @param {string} text - The input string containing potential placeholders.
     * @returns {Array} An array of matching placeholders.
     */
    // Use a regular expression to find placeholders in the specified format
    const placeholders = text.matchAll(/{{\s*([\w]+)\s*}}/g);
    const result = [];
    for (const match of placeholders) {
        result.push(match[1]);
    }
    return result;
}
```

### Explanation:
1. **Function Definition**: The function `findPlaceholders` is defined with a single parameter `text`.
2. **Documentation Comment**: The JSDoc comment is included to describe the purpose, parameters, and return value of the function.
3. **Regular Expression**: The regular expression `/{{\s*([\w]+)\s*}}/g` is used to match the placeholders in the format `{{ placeholder }}`. The `g` flag ensures global matching.
4. **Match All**: The `matchAll` method is used to find all matches of the regular expression in the given text.
5. **Result Array**: The results are collected in an array `result` by iterating over the matches using a `for...of` loop.
6. **Return Statement**: The function returns the `result` array containing the placeholders.

This JavaScript function should behave identically to the Python function you provided.