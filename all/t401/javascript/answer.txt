Sure! Here is the equivalent JavaScript code that maintains the same functionality, logic, and structure as the provided Python code:

```javascript
function findPlaceholders(text) {
    /**
     * Find and return an array of all placeholders in the format {{ placeholder }} from the input text.
     *
     * @param {string} text - The input string containing potential placeholders.
     * @returns {Array} An array of matching placeholders.
     */
    // Use a regular expression to find placeholders in the specified format
    const placeholders = text.matchAll(/{{\s*([\w]+)\s*}}/g);
    const results = [];
    for (const match of placeholders) {
        results.push(match[1]);
    }
    return results;
}
```

### Explanation:
1. **Function Definition**: The `findPlaceholders` function is defined with a docstring that describes its purpose, parameters, and return type.
2. **Regular Expression**: The regular expression `/{{\s*([\w]+)\s*}}/g` is used to match placeholders in the format `{{ placeholder }}`. The `g` flag ensures that all matches are found.
3. **Match All**: `text.matchAll` returns an iterator over all non-overlapping matches of the pattern in the string.
4. **Results Array**: The matches are iterated over using a `for...of` loop, and the captured groups (placeholders) are pushed into the `results` array.
5. **Return Value**: The function returns the `results` array containing all the matched placeholders.

This JavaScript code should provide the same functionality as the original Python code.