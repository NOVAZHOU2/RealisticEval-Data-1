Certainly! Here is the equivalent Java test class using JUnit, placed in the package `org.real.temp` and named `Tester`. The test cases will use JUnit annotations and assertions to ensure the functionality and logic are preserved.

```java
package org.real.temp;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import java.util.Arrays;
import java.util.List;

/**
 * Test class for the findPlaceholders method.
 */
public class Tester {

    /**
     * Test string with multiple placeholders.
     */
    @Test
    public void testMultiplePlaceholders() {
        String inputText = "Here are some placeholders: {{ placeholder1 }}, {{ placeholder2 }}, and {{ placeholder3 }}.";
        List<String> expectedOutput = Arrays.asList("placeholder1", "placeholder2", "placeholder3");
        assertEquals(expectedOutput, Answer.findPlaceholders(inputText));
    }

    /**
     * Test string with no placeholders.
     */
    @Test
    public void testNoPlaceholders() {
        String inputText = "This string has no placeholders.";
        List<String> expectedOutput = Arrays.asList();
        assertEquals(expectedOutput, Answer.findPlaceholders(inputText));
    }

    /**
     * Test string with a single placeholder.
     */
    @Test
    public void testSinglePlaceholder() {
        String inputText = "The only placeholder is {{ singlePlaceholder }}.";
        List<String> expectedOutput = Arrays.asList("singlePlaceholder");
        assertEquals(expectedOutput, Answer.findPlaceholders(inputText));
    }

    /**
     * Test string with placeholders that have extra spaces.
     */
    @Test
    public void testPlaceholderWithSpaces() {
        String inputText = "Placeholders with spaces: {{  placeholder_with_spaces  }} and {{ placeholder2 }}.";
        List<String> expectedOutput = Arrays.asList("placeholder_with_spaces", "placeholder2");
        assertEquals(expectedOutput, Answer.findPlaceholders(inputText));
    }
}
```

### Explanation:
1. **Package Declaration**:
   ```java
   package org.real.temp;
   ```

2. **Import Statements**:
   ```java
   import org.junit.Test;
   import static org.junit.Assert.assertEquals;
   import java.util.Arrays;
   import java.util.List;
   ```

3. **Class Definition**:
   ```java
   public class Tester {
   ```

4. **JUnit Test Methods**:
   - Each test method is annotated with `@Test`.
   - The test methods are named to reflect their purpose.
   - Assertions are made using `assertEquals`.

5. **Test Cases**:
   - `testMultiplePlaceholders`: Tests a string with multiple placeholders.
   - `testNoPlaceholders`: Tests a string with no placeholders.
   - `testSinglePlaceholder`: Tests a string with a single placeholder.
   - `testPlaceholderWithSpaces`: Tests a string with placeholders that have extra spaces.

6. **Assertion**:
   - `assertEquals` is used to compare the expected output with the actual output from the `findPlaceholders` method.

### Note:
- The `Answer` class contains the `findPlaceholders` method, which is assumed to be defined elsewhere in the package `org.real.temp`.
- The `Arrays.asList` method is used to create lists for the expected outputs.

This Java test class ensures that the functionality and logic of the Python test cases are preserved using JUnit.