Here's how you can convert your Python code into Java:

```java
package org.real.temp;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.ArrayList;
import java.util.List;

public class Answer {
    public List<String> findPlaceholders(String text) {
        Pattern pattern = Pattern.compile("\\{\\{\\s*([^{}]+)\\s*\\}\\}");
        Matcher matcher = pattern.matcher(text);

        List<String> placeholders = new ArrayList<>();
        while (matcher.find()) {
            placeholders.add(matcher.group(1));
        }

        return placeholders;
    }
}
```

In this Java code:

- We use `Pattern` and `Matcher` classes from the `java.util.regex` package to match the regular expression with the input string.
- The regular expression `\\{\\{\\s*([^{}]+)\\s*\\}\\}` is used to find placeholders in the format `{{ placeholder }}`. It matches any characters that aren't `{` or `}`, ignoring leading/trailing spaces.
- We create an empty `ArrayList` named `placeholders` to store matched placeholders.
- The `find()` method of the `Matcher` class is called inside a loop until it returns `false`, meaning there are no more matches. Each found placeholder is added to the `placeholders` list using the `add()` method.
- Finally, the `placeholders` list is returned.