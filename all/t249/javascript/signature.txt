Sure! Here is the JavaScript code signature equivalent to your Python function, keeping the comments intact:

```javascript
/**
 * Extracts text from a given PDF file.
 *
 * @param {string} filePath - The path to the PDF file from which to extract text.
 * @returns {Promise<string>} A promise that resolves with the extracted text from the PDF.
 */
```

In JavaScript, functions often return promises for asynchronous operations like reading files. If you need to implement the actual extraction logic in JavaScript, you might use libraries such as `pdf-parse` or `pdfjs-dist`. Here's an example using `pdf-parse`:

```javascript
const fs = require('fs');
const pdf = require('pdf-parse');

/**
 * Extracts text from a given PDF file.
 *
 * @param {string} filePath - The path to the PDF file from which to extract text.
 * @returns {Promise<string>} A promise that resolves with the extracted text from the PDF.
 */
async function extractTextFromPdf(filePath) {
    try {
        const dataBuffer = fs.readFileSync(filePath);
        const data = await pdf(dataBuffer);
        return data.text;
    } catch (error) {
        throw new Error(`Error extracting text from PDF: ${error.message}`);
    }
}
```

This function reads the PDF file synchronously and then uses `pdf-parse` to extract the text asynchronously.