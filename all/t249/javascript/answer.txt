Sure! Below is the equivalent JavaScript code using the `pdf-parse` library to extract text from a PDF file:

```javascript
const fs = require('fs');
const pdf = require('pdf-parse');

async function extractTextFromPDF(filePath) {
    /**
     * Extracts text from a given PDF file.
     *
     * @param {string} filePath - The path to the PDF file from which to extract text.
     * @returns {Promise<string>} - The extracted text from the PDF.
     */
    
    const dataBuffer = fs.readFileSync(filePath);

    try {
        const data = await pdf(dataBuffer);
        return data.text;
    } catch (error) {
        throw new Error(`Failed to extract text from PDF: ${error.message}`);
    }
}

// Example usage:
(async () => {
    try {
        const filePath = 'path/to/your/pdf/file.pdf';
        const extractedText = await extractTextFromPDF(filePath);
        console.log(extractedText);
    } catch (error) {
        console.error(error);
    }
})();
```

### Explanation:
1. **Import Libraries**: 
   - `fs` for reading the file system.
   - `pdf-parse` for parsing the PDF file.

2. **Function Definition**:
   - `extractTextFromPDF` is an asynchronous function that takes a `filePath` as an argument and returns a promise that resolves to the extracted text.

3. **Reading File**:
   - `fs.readFileSync` reads the PDF file synchronously into a buffer.

4. **Extracting Text**:
   - `pdf(dataBuffer)` parses the PDF buffer and returns an object containing various details about the PDF. We extract the `text` property which contains the extracted text.

5. **Error Handling**:
   - The function catches any errors during the extraction process and throws an error with a descriptive message.

6. **Example Usage**:
   - An example usage is provided to demonstrate how to call the `extractTextFromPDF` function and handle the extracted text or errors.

Make sure you have the `pdf-parse` package installed in your project. You can install it using npm:

```sh
npm install pdf-parse
```

This should work similarly to your Python code but in JavaScript.