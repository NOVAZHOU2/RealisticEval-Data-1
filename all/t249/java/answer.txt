Sure, here is the equivalent Java code organized within the package `org.real.temp` and the class `Answer`. This Java code will perform the same functionality of extracting text from a PDF file using Apache PDFBox, which is a popular library for working with PDFs in Java.

First, you need to include the Apache PDFBox dependency in your project. If you're using Maven, add this to your `pom.xml`:

```xml
<dependencies>
    <dependency>
        <groupId>org.apache.pdfbox</groupId>
        <artifactId>pdfbox</artifactId>
        <version>2.0.24</version>
    </dependency>
</dependencies>
```

Now, here is the Java code:

```java
package org.real.temp;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.text.PDFTextStripper;

import java.io.File;
import java.io.IOException;

public class Answer {

    /**
     * Extracts text from a given PDF file.
     *
     * @param filePath The path to the PDF file from which to extract text.
     * @return The extracted text from the PDF.
     */
    public static String extractTextFromPdf(String filePath) {
        // Initialize a text container
        StringBuilder extractedText = new StringBuilder();

        try (PDDocument document = PDDocument.load(new File(filePath))) {
            if (!document.isEncrypted()) {
                // Create a PDF text stripper
                PDFTextStripper pdfStripper = new PDFTextStripper();

                // Extract text from each page and add it to the text container
                extractedText.append(pdfStripper.getText(document));
            } else {
                System.out.println("The document is encrypted.");
            }
        } catch (IOException e) {
            System.err.println("Error reading the PDF file: " + e.getMessage());
        }

        return extractedText.toString();
    }

    public static void main(String[] args) {
        // Example usage
        String filePath = "path/to/your/pdf/file.pdf";
        String text = extractTextFromPdf(filePath);
        System.out.println(text);
    }
}
```

### Explanation:
1. **Dependency**: The code uses Apache PDFBox for handling PDF files. You need to include the PDFBox dependency in your project.
2. **Method Signature**: The `extractTextFromPdf` method takes a file path as a parameter and returns the extracted text as a `String`.
3. **File Handling**: The method uses a try-with-resources statement to ensure the `PDDocument` is properly closed after use.
4. **Text Extraction**: It uses `PDFTextStripper` to extract text from the PDF document.
5. **Encryption Check**: The method checks if the document is encrypted and prints a message if it is.
6. **Error Handling**: It catches and handles any `IOException` that might occur during file operations.

This Java code provides the same functionality as the Python code but adapted to Java's syntax and libraries.