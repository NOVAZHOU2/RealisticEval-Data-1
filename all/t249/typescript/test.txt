Certainly! Below is the equivalent TypeScript test class using Jest. The provided Python unittest class will be converted to a Jest test suite with appropriate assertions and type annotations.

### TypeScript Code

First, ensure you have Jest installed in your project:

```bash
npm install --save-dev jest @types/jest
```

Then, create the TypeScript test file:

```typescript
import { extractTextFromPdf } from './path/to/your/extractTextFromPdf'; // Import the function to test

describe('TestExtractTextFromPDF', () => {
  it('should handle an empty file correctly', async () => {
    const pdfPath = 'E:/code/code_back/python_project/RealisticEval-Data/envs/python/test_case/t249/testcase01.pdf';
    const expected = ' \n';
    const output = await extractTextFromPdf(pdfPath);
    expect(output).toEqual(expected);
  });

  it('should handle a normal file correctly', async () => {
    const pdfPath = 'E:/code/code_back/python_project/RealisticEval-Data/envs/python/test_case/t249/testcase02.pdf';
    const expected = '11111  \n';
    const output = await extractTextFromPdf(pdfPath);
    expect(output).toEqual(expected);
  });

  it('should handle a file with more text correctly', async () => {
    const pdfPath = 'E:/code/code_back/python_project/RealisticEval-Data/envs/python/test_case/t249/testcase03.pdf';
    const expected = '11111  \n22222  \n33333  \n44444  \n';
    const output = await extractTextFromPdf(pdfPath);
    expect(output).toEqual(expected);
  });
});
```

### Explanation:
1. **Imports**:
   - Import the `extractTextFromPdf` function from the appropriate module.
   - Ensure you have the necessary Jest and TypeScript setup.

2. **Test Suite**:
   - Use `describe` to define a test suite named `TestExtractTextFromPDF`.

3. **Test Cases**:
   - Each test case is defined using `it`.
   - The `async` keyword is used because `extractTextFromPdf` is an asynchronous function.
   - Use `expect` to assert the expected outcomes.

4. **Assertions**:
   - Use `expect(output).toEqual(expected)` to check if the output matches the expected value.

### Example Usage
To run the tests, you can use the following command:

```bash
npx jest
```

### Additional Notes
- Ensure that the `extractTextFromPdf` function is properly implemented and exported from the correct module.
- Adjust the file paths according to your project structure.

By following these steps, you can effectively convert the Python unittest test cases into equivalent Jest test cases in TypeScript.