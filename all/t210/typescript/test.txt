Hereâ€™s the equivalent test code in TypeScript using Jest, ensuring that the logic and functionality of the tests remain consistent:

```typescript
import { fibonacciRecursive } from './path/to/your/fibonacci'; // Adjust the import according to your file structure

describe("Fibonacci sequence", () => {
    // Test Case 1: Fibonacci of 0
    test("Fibonacci(0) should be 0", () => {
        expect(fibonacciRecursive(0)).toBe(0);
    });

    // Test Case 2: Fibonacci of 1
    test("Fibonacci(1) should be 1", () => {
        expect(fibonacciRecursive(1)).toBe(1);
    });

    // Test Case 3: Fibonacci of 5
    test("Fibonacci(5) should be 5", () => {
        expect(fibonacciRecursive(5)).toBe(5);
    });

    // Test Case 4: Fibonacci of 10
    test("Fibonacci(10) should be 55", () => {
        expect(fibonacciRecursive(10)).toBe(55);
    });

    // Test Case 5: Fibonacci of 20
    test("Fibonacci(20) should be 6765", () => {
        expect(fibonacciRecursive(20)).toBe(6765);
    });
});
```

### Key Changes:
1. **Test Framework**: Converted from Catch2 to Jest using `describe` and `test`.
2. **Assertions**: Used `expect(...).toBe(...)` instead of `REQUIRE(...)`.
3. **Sectioning**: Removed the `SECTION` construct since Jest does not require it; each `test` is inherently a section.
4. **Import Statement**: Added an import statement for the `fibonacciRecursive` function, which you should adjust based on your file structure.