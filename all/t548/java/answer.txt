Here's how you can convert the given Python code into Java:

```java
import java.io.FileReader;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import org.json.JSONArray;
import org.json.JSONException;

public class Answer {
    public static ArrayList<Object> readTxtAddJsonBracket(String filename) throws FileNotFoundException, JSONException {
        try (FileReader reader = new FileReader(filename)) {
            StringBuilder sb = new StringBuilder();
            int i;
            while ((i = reader.read()) != -1) {
                sb.append((char) i);
            }
            String content = "[" + sb.toString() + "]";
            JSONArray jsonArray = new JSONArray(content);
            ArrayList<Object> result = new ArrayList<>();
            for (int j = 0; j < jsonArray.length(); j++) {
                result.add(jsonArray.get(j));
            }
            return result;
        } catch (FileNotFoundException e) {
            throw new FileNotFoundException("The specified file does not exist.");
        } catch (JSONException e) {
            throw new JSONException("The content cannot be parsed as JSON.");
        }
    }
}
```

This Java code reads a text file, wraps its content in JSON brackets, and parses it into an `ArrayList` of objects using the `org.json` library. Note that you need to add the `json.jar` to your project dependencies if you're not using Maven or Gradle. Also, make sure to handle exceptions properly in your actual implementation.