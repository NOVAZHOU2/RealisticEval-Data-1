Here's how you can translate the given Python function into JavaScript:

```javascript
const fs = require('fs');
const path = require('path');

function readTxtAddJsonBracket(filename) {
    try {
        // Read the file synchronously
        const data = fs.readFileSync(path.resolve(__dirname, filename), 'utf8');
        
        // Wrap the data in JSON brackets
        const jsonData = `[${data}]`;

        // Parse the JSON data
        const parsedData = JSON.parse(jsonData);

        return parsedData;
    } catch (error) {
        if (error.code === 'ENOENT') {
            throw new Error(`The specified file ${filename} does not exist.`);
        } else if (error instanceof SyntaxError) {
            throw new Error(`Cannot parse the content as JSON.`);
        }

        throw error;
    }
}
```

This JavaScript function reads a text file using Node.js's `fs` module, wraps its content in JSON brackets, and then attempts to parse it. It handles errors such as file not found or invalid JSON syntax. Note that JavaScript uses `require` for importing modules, which is different from Python's `import`. Also, error handling in JavaScript typically involves catching exceptions with a `try...catch` block.