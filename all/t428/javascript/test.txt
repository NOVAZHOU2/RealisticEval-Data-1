Sure! Here is the equivalent JavaScript test case using Jest for the provided Python unittest test class:

```javascript
const { parseTypeHint } = require('./path-to-your-parse-type-hint-function');

describe('parseTypeHint function', () => {
  it('should correctly parse a type hint string with Union', () => {
    const typeHint = "Union[typing.List[str], typing.Dict[str, int], Tuple[int, str], Optional[int]]";
    const expectedOutput = ['Union', 'typing.List', 'str', 'typing.Dict', 'str', 'int', 'Tuple', 'int', 'str', 'Optional', 'int'];
    expect(parseTypeHint(typeHint)).toEqual(expectedOutput);
  });

  // Add more test cases here if needed
});
```

Make sure to replace `'./path-to-your-parse-type-hint-function'` with the actual path to your `parseTypeHint` function in your project.

This Jest test case uses the `describe` function to group related tests together and the `it` function to define individual test cases. The `expect` function is used to assert that the output of `parseTypeHint` matches the expected result.