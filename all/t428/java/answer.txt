Here's how you can convert your Python code into Java:

```java
package org.real.temp;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Answer {
    
    public static List<String> parseTypeHint(String typeHintString) {
        // Define regex pattern to match the different types
        Pattern pattern = Pattern.compile("([a-zA-Z0-9_]+|[\\[]|\\])");
        Matcher matcher = pattern.matcher(typeHintString);
        
        List<String> result = new ArrayList<>();
        while(matcher.find()) {
            String token = matcher.group();
            if(!token.equals("[") && !token.equals("]")) {
                result.add(token);
            }
        }
        
        return result;
    }

    public static void main(String[] args) {
        String typeHint = "Union[typing.List[str], typing.Dict[str, int], Tuple[int, str], Optional[int]]";
        List<String> parsedTypes = parseTypeHint(typeHint);
        System.out.println(Arrays.toString(parsedTypes.toArray()));
    }
}
```

This Java code uses regular expressions to extract the types from the provided type hint string. It excludes the brackets "[" and "]" from the results. The `main` method demonstrates how to use the `parseTypeHint` function with an example input. Note that the actual parsing logic may need to be adjusted based on the specific requirements of your project.