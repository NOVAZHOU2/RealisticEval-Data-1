Here's the equivalent C++ function signature for the provided Python function, along with the converted comments and docstring:

```cpp
#include <vector>

/* 
Calculates the average difference between consecutive integers in the provided list.

Args:
    numbers (std::vector<int>): A vector of integers.

Returns:
    double: The average difference between consecutive integers, or 0 if there are fewer than 2 integers.
*/
double calculate_average_difference(const std::vector<int>& numbers);
```

### Key Points in the Translation:

1. **Header Inclusion**: Included `<vector>` for using the `std::vector` type.
2. **Function Signature**: Changed the Python list type to `std::vector<int>` for the parameter and used `double` for the return type instead of `float` to align with typical C++ conventions.
3. **Comments and Documentation**: Translated the Python docstring into a C++ style comment block (using `/* */`) while preserving the content and structure for clarity. 

This C++ signature now accurately reflects the purpose and structure of the original Python function.