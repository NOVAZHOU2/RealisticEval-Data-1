Here is the equivalent Java code for your Python function:

```java
package org.real.temp;

import java.io.*;

public class Answer {

    public static boolean convertEncoding(String inputFilePath, String outputFilePath, String originalEncoding, String targetEncoding) {
        try {
            BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(inputFilePath), originalEncoding));
            BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(outputFilePath), targetEncoding));

            char[] buffer = new char[8192];
            int bytesRead;
            while ((bytesRead = reader.read(buffer)) != -1) {
                writer.write(buffer, 0, bytesRead);
            }

            reader.close();
            writer.close();

            return true;
        } catch (IOException e) {
            e.printStackTrace();
            return false;
        }
    }
}
```

This Java method does exactly what your Python function does: it reads a file with an original encoding and writes its contents to another file with a target encoding. If there's an error during the process, it catches the IOException and returns false. Otherwise, it returns true. Note that in Java, you have to handle exceptions explicitly unlike in Python.