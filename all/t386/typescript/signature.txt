Here's how you can change the Python code signature to TypeScript:

```typescript
import * as fs from 'fs';
import { promisify } from 'util';

const readFile = promisify(fs.readFile);
const writeFile = promisify(fs.writeFile);

/**
 * This function converts the encoding of a file from one encoding to another
 *
 * @param inputFilePath - The path to the input file.
 * @param outputFilePath - The path to the output file where the converted content is saved.
 * @param originalEncoding - The original encoding of the file (default is 'cp932').
 * @param targetEncoding - The target encoding to convert to (default is 'utf-16').
 * 
 * @returns A Promise that resolves to true if the conversion was successful, or if no conversion was needed; false otherwise.
 */
async function convertEncoding(
    inputFilePath: string,
    outputFilePath: string,
    originalEncoding: string = 'cp932',
    targetEncoding: string = 'utf-16'
): Promise<boolean> {
```

Please note that in TypeScript, we use `Promise` instead of `bool`. Also, we use `promisify` to convert Node.js callback-based functions into promise-based ones. Finally, we need to import the necessary modules (`fs` and `util`).