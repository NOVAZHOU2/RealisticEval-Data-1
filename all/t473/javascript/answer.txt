Sure! Below is the equivalent JavaScript code that maintains the same functionality, logic, and structure as the provided Python code:

```javascript
function flatten(nestedList) {
    /**
     * Flattens a nested array into a single array.
     *
     * @param {Array} nestedList - An array that may contain nested arrays.
     * @returns {Array} A flattened version of the input array.
     */
    const flattened = [];  // Array to hold the flattened elements

    for (const element of nestedList) {
        if (Array.isArray(element)) {
            // Recursively flatten the nested array and concatenate the flattened array
            flattened.push(...flatten(element));
        } else {
            // If the element is not an array, append it directly
            flattened.push(element);
        }
    }

    return flattened;
}
```

This JavaScript function `flatten` works similarly to the Python function by recursively flattening any nested arrays within the input array. The `Array.isArray()` method is used to check if an element is an array, and the spread operator (`...`) is used to concatenate the results of recursive calls.