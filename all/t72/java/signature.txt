Here is how you can translate your Python function to Java:

```java
import org.apache.commons.math3.linear.Array2DRowRealMatrix;
import org.apache.commons.math3.linear.RealMatrix;

public class Main {

    /**
     * Converts 2D pixel coordinates into 3D world coordinates using camera intrinsic parameters and depth.
     *
     * @param K   The camera intrinsic matrix (3x3).
     * @param d   The depth (distance along z-axis).
     * @param x   The pixel x coordinate.
     * @param y   The pixel y coordinate.
     * @return A RealVector representing the x, y, z 3D point coordinates in camera RDF coordinates.
     */
    public static RealVector get3DCoordinates(RealMatrix K, double d, double x, double y) {
        // Here, we need to implement the logic to convert 2D pixel coordinates into 3D world coordinates using camera intrinsic parameters and depth.
        // This would typically involve matrix operations, which can be done using Apache Commons Math or similar libraries.

        return null; // Placeholder return statement
    }

    public static void main(String[] args) {
        // Example usage of the function
        RealMatrix K = new Array2DRowRealMatrix(new double[][]{{1, 0, 0}, {0, 1, 0}, {0, 0, 1}});
        double d = 1.0;
        double x = 1.0;
        double y = 1.0;

        RealVector result = get3DCoordinates(K, d, x, y);
        System.out.println(result);
    }
}
```

Please note that I used `org.apache.commons.math3.linear` for handling matrices and vectors, which you'll need to add to your project's dependencies if not already included. If you don't want to use an external library, you could implement your own matrix operations instead.