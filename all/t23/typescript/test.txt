Sure! Below is the equivalent TypeScript test case using Jest for the provided Python unittest test class:

```typescript
import { describe, it, expect } from '@jest/globals';

describe('getLineSegmentIntersection', () => {
  it('should return the intersection point of two line segments', () => {
    const seg1 = [[0, 0], [1, 1]];
    const seg2 = [[1, 0], [0, 1]];
    const expectedIntersection = [0.5, 0.5];
    const result = getLineSegmentIntersection(seg1, seg2);
    expect(result).toEqual(expectedIntersection);
  });

  it('should return null if the line segments do not intersect', () => {
    const seg1 = [[0, 0], [1, 1]];
    const seg2 = [[2, 2], [3, 3]];
    const result = getLineSegmentIntersection(seg1, seg2);
    expect(result).toBeNull();
  });
});

function getLineSegmentIntersection(seg1: [number[], number[]], seg2: [number[], number[]]): [number, number] | null {
  const [[x1, y1], [x2, y2]] = seg1;
  const [[x3, y3], [x4, y4]] = seg2;

  const denominator = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);

  if (denominator === 0) {
    // Lines are parallel or coincident
    return null;
  }

  const t = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator;
  const u = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator;

  if (t >= 0 && t <= 1 && u >= 0 && u <= 1) {
    const intersectionX = x1 + t * (x2 - x1);
    const intersectionY = y1 + t * (y2 - y1);
    return [intersectionX, intersectionY];
  }

  return null;
}
```

### Explanation:
1. **Test Cases**:
   - The `it` function is used to define individual test cases within the `describe` block.
   - The first test case checks if the function correctly calculates the intersection point of two intersecting line segments.
   - The second test case checks if the function returns `null` when the line segments do not intersect.

2. **Function Implementation**:
   - The `getLineSegmentIntersection` function is implemented in TypeScript and follows the same logic as the original Python function.
   - It uses the formula to find the intersection point of two line segments and checks if the calculated parameters `t` and `u` lie within the valid range `[0, 1]`.

This TypeScript code should work similarly to the original Python unittest test class, ensuring that the `getLineSegmentIntersection` function behaves as expected.