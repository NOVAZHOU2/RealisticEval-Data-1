Sure! Below is the equivalent C++ code with comments that match the Python function signature:

```cpp
#include <iostream>
#include <string>
#include <ctime>

/**
 * Converts a date string from the format '%a, %d %b %Y %H:%M:%S %z (%Z)'
 * to the format '%Y-%m-%d_%H:%M:%S'.
 *
 * @param dateStr The input date string.
 * @return std::string The formatted date string in the format '%Y-%m-%d_%H:%M:%S', or an empty string if the input date string is invalid.
 */
std::string formatDateString(const std::string& dateStr) {
    // Define the input and output formats
    const char* inputFormat = "%a, %d %b %Y %H:%M:%S %z (%Z)";
    const char* outputFormat = "%Y-%m-%d_%H:%M:%S";

    // Create a tm structure to hold the parsed time
    struct tm timeInfo;
    memset(&timeInfo, 0, sizeof(timeInfo));

    // Parse the input date string into a tm structure
    if (strptime(dateStr.c_str(), inputFormat, &timeInfo) == nullptr) {
        return ""; // Return an empty string if parsing fails
    }

    // Allocate a buffer for the formatted output string
    char outputBuffer[50]; // Ensure this size is sufficient for the desired output format

    // Format the parsed time into the desired output format
    if (strftime(outputBuffer, sizeof(outputBuffer), outputFormat, &timeInfo) == 0) {
        return ""; // Return an empty string if formatting fails
    }

    // Convert the C-style string to a std::string and return it
    return std::string(outputBuffer);
}

int main() {
    // Example usage of the formatDateString function
    std::string inputDate = "Mon, 01 Jan 2023 12:34:56 +0000 (UTC)";
    std::string formattedDate = formatDateString(inputDate);

    if (!formattedDate.empty()) {
        std::cout << "Formatted Date: " << formattedDate << std::endl;
    } else {
        std::cout << "Invalid date string." << std::endl;
    }

    return 0;
}
```

This C++ code includes the necessary headers and uses the `strptime` and `strftime` functions from the `<ctime>` library to parse and format the date strings. The `formatDateString` function returns an empty string if the input date string is invalid, similar to the Python function.