Sure, here's the equivalent JavaScript code that performs the same functionality:

```javascript
function formatDateString(dateStr) {
    /**
     * Converts a date string from the format 'ddd, dd mmm yyyy HH:MM:ss ZZ (zzz)'
     * to the format 'yyyy-mm-dd_HH:MM:ss'.
     *
     * @param {string} dateStr - The input date string.
     * @returns {string | null} - The formatted date string in the format 'yyyy-mm-dd_HH:MM:ss', or null if the input date string is invalid.
     */

    try {
        // Convert to a Date object using the specified format
        const dateObject = new Date(dateStr);

        // Check if the date is valid
        if (isNaN(dateObject)) {
            console.log("Error parsing date: Invalid date string");
            return null;
        }

        // Extract components of the date
        const year = dateObject.getUTCFullYear();
        const month = String(dateObject.getUTCMonth() + 1).padStart(2, '0');
        const day = String(dateObject.getUTCDate()).padStart(2, '0');
        const hours = String(dateObject.getUTCHours()).padStart(2, '0');
        const minutes = String(dateObject.getUTCMinutes()).padStart(2, '0');
        const seconds = String(dateObject.getUTCSeconds()).padStart(2, '0');

        // Format the date string
        const formattedDate = `${year}-${month}-${day}_${hours}:${minutes}:${seconds}`;

        return formattedDate;
    } catch (error) {
        console.log(`Error parsing date: ${error}`);
        return null;
    }
}
```

### Explanation:
1. **Date Parsing**: In JavaScript, `new Date(dateStr)` attempts to parse the date string. If the string is not in a recognizable format, it returns `NaN` for the date value.
2. **Validation**: We check if the parsed date is valid by checking if `isNaN(dateObject)` is false.
3. **Formatting**: We extract the year, month, day, hours, minutes, and seconds from the `Date` object and format them accordingly.
4. **Error Handling**: If there is an error during parsing, we log the error and return `null`.

This JavaScript function should behave similarly to the provided Python function.