Here's how you can translate the Python function into TypeScript:

```typescript
import { DateTime } from 'luxon';

function formatDateString(dateStr: string): string | null {
    try {
        const dt = DateTime.fromFormat(dateStr, 'EEE, dd LLL yyyy HH:mm:ss ZZZ (zzzz)');
        
        if (!dt.isValid) {
            return null;
        }

        return dt.toFormat('yyyy-MM-dd_HH:mm:ss');
    } catch (error) {
        console.error(error);
        return null;
    }
}
```

This TypeScript function uses the `luxon` library, which is a popular JavaScript/TypeScript library for handling dates and times. 

The `fromFormat` method of the `DateTime` class tries to parse the provided string according to the specified format. If the parsing is successful, it returns a `DateTime` object; otherwise, it throws an error.

The `isValid` property checks whether the `DateTime` object represents a valid date and time. If not, it returns `false`.

If the parsing or validation fails, the function logs the error to the console and returns `null`. Otherwise, it formats the `DateTime` object to the desired output format using the `toFormat` method and returns the result.