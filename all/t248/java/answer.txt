Here's how you can convert the Python code to Java:

```java
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Answer {
    public static Map<String, Object> sanitizeData(Map<String, Object> data, List<String> keyToRemove) {
        if (keyToRemove == null || keyToRemove.isEmpty()) {
            return data;
        }

        Map<String, Object> result = new HashMap<>();
        for (Map.Entry<String, Object> entry : data.entrySet()) {
            if (!keyToRemove.contains(entry.getKey())) {
                result.put(entry.getKey(), entry.getValue());
            }
        }
        
        return result;
    }
}
```

In this Java code, we define a `sanitizeData` method that takes a `Map<String, Object>` and a `List<String>` as arguments and returns a sanitized `Map`. If `keyToRemove` is null or empty, it simply returns the original map.

The method iterates over each entry in the input map and adds it to the result map unless its key is contained in `keyToRemove`.

Please note that Java does not have built-in support for type hints like Python, so there is no direct equivalent of the Python function signature. Instead, the method parameters and return type are declared explicitly.