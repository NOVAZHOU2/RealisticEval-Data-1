Hereâ€™s how you can convert your JavaScript Jest test cases into C++ Catch2 test cases:

```cpp
#define CATCH_CONFIG_MAIN
#include <catch2/catch.hpp>
#include <string>

// Assume removePunctuation is defined here or included from another file

TEST_CASE("removePunctuation", "[string]") {
    SECTION("removes punctuation from a simple sentence") {
        std::string input = "Hello, world!";
        std::string expected = "hello world";
        REQUIRE(removePunctuation(input) == expected);
    }

    SECTION("handles a string with no punctuation") {
        std::string input = "Hello world";
        std::string expected = "hello world";
        REQUIRE(removePunctuation(input) == expected);
    }

    SECTION("converts mixed case letters to lowercase") {
        std::string input = "HeLLo WoRLd!";
        std::string expected = "hello world";
        REQUIRE(removePunctuation(input) == expected);
    }

    SECTION("removes a variety of punctuation") {
        std::string input = "Life, in a nutshell: eat, sleep, code!";
        std::string expected = "life in a nutshell eat sleep code";
        REQUIRE(removePunctuation(input) == expected);
    }

    SECTION("trims whitespace from the ends of the string") {
        std::string input = "   What a wonderful world!   ";
        std::string expected = "what a wonderful world";
        REQUIRE(removePunctuation(input) == expected);
    }
}
```

### Explanation:
- The `CATCH_CONFIG_MAIN` macro defines the main function for Catch2.
- Each test case is wrapped in a `TEST_CASE` block with descriptive names, and individual tests are grouped under `SECTION` blocks.
- `REQUIRE` is used to assert that the output of `removePunctuation` matches the expected value. 

You can run this code with Catch2 to test your `removePunctuation` function.