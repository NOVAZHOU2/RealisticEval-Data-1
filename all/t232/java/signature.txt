Sure! Below is the Java code with the same functionality and comments as your Python code:

```java
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * Converts a time duration string in the format 'XhYminZs' to milliseconds.
 *
 * This function takes a string representing a time duration, where hours, minutes, and seconds
 * are optionally provided, and converts this duration into the equivalent number of milliseconds.
 *
 * @param timeStr The string representing the time duration, e.g., '1h20min30s'.
 * @return The equivalent duration in milliseconds, or null if the input is invalid.
 */
public class TimeConverter {

    public static Integer convertHmsToMilliseconds(String timeStr) {
        // Regular expression to match the pattern XhYminZs
        Pattern pattern = Pattern.compile("(\\d+)h(\\d+)min(\\d+)s");
        Matcher matcher = pattern.matcher(timeStr);

        if (!matcher.matches()) {
            return null; // Return null if the input does not match the expected format
        }

        // Extract hours, minutes, and seconds from the matched groups
        int hours = Integer.parseInt(matcher.group(1));
        int minutes = Integer.parseInt(matcher.group(2));
        int seconds = Integer.parseInt(matcher.group(3));

        // Calculate total milliseconds
        int totalMilliseconds = (hours * 60 * 60 + minutes * 60 + seconds) * 1000;

        return totalMilliseconds;
    }
}
```

### Explanation:
- **Regular Expression**: The regular expression `(\\d+)h(\\d+)min(\\d+)s` is used to match the input string format `XhYminZs`. It captures three groups: hours, minutes, and seconds.
- **Matcher**: The `Matcher` class checks if the input string matches the pattern.
- **Parsing**: If the input matches, the groups are parsed to integers.
- **Calculation**: The total milliseconds are calculated using the formula `(hours * 60 * 60 + minutes * 60 + seconds) * 1000`.
- **Return Value**: The method returns the total milliseconds if the input is valid; otherwise, it returns `null`.

This Java code maintains the same logic and structure as your original Python code while adhering to Java syntax and conventions.