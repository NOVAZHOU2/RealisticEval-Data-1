Certainly! Below is the equivalent Java code for the given Python function, including the conversion of the function signature, comments, and docstrings into the appropriate Java style using Javadoc comments. The Python type annotations are translated into appropriate Java types, and the method is structured according to Java conventions.

```java
package org.real.temp;

import java.util.Optional;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * Converts a time duration string in the format 'XhYminZs' to milliseconds.
 * 
 * This function takes a string representing a time duration, where hours, minutes, and seconds
 * are optionally provided, and converts this duration into the equivalent number of milliseconds.
 */
public class Answer {

    /**
     * Converts a time duration string in the format 'XhYminZs' to milliseconds.
     *
     * This function takes a string representing a time duration, where hours, minutes, and seconds
     * are optionally provided, and converts this duration into the equivalent number of milliseconds.
     *
     * @param timeStr A string representing the time duration, e.g., '1h20min30s'.
     * @return The equivalent duration in milliseconds, or null if the input is invalid.
     */
    public static Optional<Integer> convertHmsToMilliseconds(String timeStr) {
        // Regex to match hours, minutes, and seconds
        Pattern pattern = Pattern.compile("^(?:(\\d+)h)?(?:(\\d+)min)?(?:(\\d+)s)?$");
        Matcher matcher = pattern.matcher(timeStr);

        if (!matcher.find()) {
            System.out.println("remindme.py: Cannot convert time string \"" + timeStr + "\" to milliseconds!");
            return Optional.empty();
        }

        // Extract hours, minutes, and seconds from the regex groups, defaulting to 0 if not present
        int hours = matcher.group(1) != null ? Integer.parseInt(matcher.group(1)) : 0;
        int minutes = matcher.group(2) != null ? Integer.parseInt(matcher.group(2)) : 0;
        int seconds = matcher.group(3) != null ? Integer.parseInt(matcher.group(3)) : 0;

        // Calculate the total duration in milliseconds
        long totalMilliseconds = (hours * 60 * 60 + minutes * 60 + seconds) * 1000;

        return Optional.of((int) totalMilliseconds);
    }

    public static void main(String[] args) {
        // Example usage
        String timeStr = "1h20min30s";
        Optional<Integer> result = convertHmsToMilliseconds(timeStr);
        System.out.println("Converted time in milliseconds: " + result.orElse(null));
    }
}
```

### Explanation:
1. **Package and Class Declaration**:
   - The package declaration `package org.real.temp;` is included.
   - The class declaration `public class Answer` is defined.

2. **Imports**:
   - Necessary imports are added: `import java.util.Optional;`, `import java.util.regex.Matcher;`, and `import java.util.regex.Pattern;`.

3. **Javadoc Comments**:
   - The Python docstring is converted into a Javadoc comment block with appropriate formatting.

4. **Method Signature**:
   - The method `convertHmsToMilliseconds` is defined with the signature `public static Optional<Integer> convertHmsToMilliseconds(String timeStr)`.

5. **Regex Compilation and Matching**:
   - The regular expression is compiled using `Pattern.compile` and matched against the input string using `Matcher`.

6. **Group Extraction**:
   - The method uses `Matcher.group` to extract the hours, minutes, and seconds from the input string, defaulting to 0 if any part is missing.

7. **Calculation**:
   - The total duration is calculated in milliseconds and returned as an `Optional<Integer>`.

8. **Main Method**:
   - An example usage is provided in the `main` method to demonstrate how to call the `convertHmsToMilliseconds` method.

This Java code preserves the original functionality and structure of the Python code while adhering to Java's syntax and conventions.