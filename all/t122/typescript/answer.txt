Hereâ€™s the JavaScript code converted to TypeScript:

```typescript
function safeSplice<T>(
    inputArray: T[], 
    amountToRemove: number, 
    indexToRemove: number, 
    replaceWith?: T
): T[] {
    const before = inputArray.slice(0, indexToRemove);
    const after = inputArray.slice(indexToRemove + amountToRemove);

    if (replaceWith !== undefined) {
        before.push(replaceWith);
    }

    return before.concat(after);
}
```

### Changes made:
1. Added a generic type parameter `<T>` to make the function flexible for different types of arrays.
2. Specified the types for the parameters: `inputArray` as an array of type `T`, `amountToRemove` and `indexToRemove` as `number`, and `replaceWith` as an optional parameter of type `T`.