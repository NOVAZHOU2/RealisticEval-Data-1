Certainly! Hereâ€™s the equivalent JavaScript code with the function signature and JSDoc comments:

```javascript
/**
 * Verifies if the provided string is a valid email address.
 *
 * @param {string} email - The email address to validate.
 * @returns {boolean} - True if the email address is valid, False otherwise.
 */
function isValidEmail(email) {
    // Regular expression pattern for validating an email address
    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

    return emailPattern.test(email);
}

// Example usage:
console.log(isValidEmail('example@example.com'));  // Should return true
console.log(isValidEmail('invalid-email'));        // Should return false
```

### Explanation:
1. **Function Signature**:
   - The Python function `is_valid_email` is converted to `isValidEmail` in JavaScript.
   - The type hints (`email: str` and `-> bool`) are not directly supported in vanilla JavaScript but can be documented using JSDoc.

2. **JSDoc Comments**:
   - The Python docstring is converted to JSDoc comments.
   - The `Args` section is translated to `@param`.
   - The `Returns` section is translated to `@returns`.

3. **Regular Expression**:
   - The regular expression pattern remains the same in both languages.

4. **Validation**:
   - The validation logic uses the `.test()` method of the regular expression object, which is equivalent to `re.match` in Python.

5. **Example Usage**:
   - Provided example usage demonstrates how to call the function and verify its correctness.

This conversion preserves the purpose and structure of the original Python code while adhering to JavaScript conventions and documentation standards.