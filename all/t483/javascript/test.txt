Sure! Below is the equivalent JavaScript test case using Jest for the provided Python unittest test class:

```javascript
const { is_valid_email } = require('./your_module'); // Adjust the path accordingly

describe('is_valid_email function', () => {
  it('should return true for a valid email address', () => {
    const email = 'test@example.com';
    expect(is_valid_email(email)).toBe(true);
  });

  it('should return false for an invalid email address', () => {
    const email = 'invalid-email';
    expect(is_valid_email(email)).toBe(false);
  });
});
```

In this example, I've assumed that `is_valid_email` function is exported from a module named `your_module`. Make sure to replace `'./your_module'` with the actual path to your module.

Here's the implementation of `is_valid_email` in JavaScript:

```javascript
function is_valid_email(email) {
  const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  return regex.test(email);
}

module.exports = { is_valid_email };
```

This JavaScript function uses a regular expression to check if the provided email string matches the pattern of a valid email address. The `describe` and `it` functions are used to create test cases in Jest, similar to how you would use `unittest` in Python.