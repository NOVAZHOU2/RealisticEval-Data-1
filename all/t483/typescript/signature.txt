Certainly! Here is the equivalent TypeScript code with proper type annotations and JSDoc-style documentation comments:

```typescript
/**
 * Verifies if the provided string is a valid email address.
 * 
 * @param email - The email address to validate.
 * @returns True if the email address is valid, False otherwise.
 */
function isValidEmail(email: string): boolean {
    // Regular expression pattern for validating an email address
    const emailPattern: RegExp = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

    return emailPattern.test(email);
}

// Example usage
console.log(isValidEmail('example@example.com'));  // Should return true
console.log(isValidEmail('invalid-email'));  // Should return false
```

### Explanation:
1. **Function Signature**:
   - The function `is_valid_email` is renamed to `isValidEmail` to follow the camelCase naming convention in TypeScript.
   - The parameter `email` is explicitly typed as `string`.
   - The return type is explicitly specified as `boolean`.

2. **Documentation Comments**:
   - The Python docstring is converted to JSDoc-style comments using `/** */`.
   - The `Args` section is translated to `@param`, and the `Returns` section is translated to `@returns`.

3. **Regular Expression**:
   - The regular expression pattern is defined as a `RegExp` type.
   - The `test` method is used to check if the email matches the pattern, which is the equivalent of `re.match` in Python.

This TypeScript code preserves the original functionality and structure while adhering to TypeScript conventions and best practices.