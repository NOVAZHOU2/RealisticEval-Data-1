Sure! Here is the equivalent TypeScript code:

```typescript
function isValidEmail(email: string): boolean {
    /**
     * Verifies if the provided string is a valid email address.
     *
     * @param email - The email address to validate.
     * @returns True if the email address is valid, False otherwise.
     */
    // Regular expression pattern for validating an email address
    const emailPattern: RegExp = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

    return emailPattern.test(email);
}

// Example usage
console.log(isValidEmail('example@example.com'));  // Should return true
console.log(isValidEmail('invalid-email'));  // Should return false
```

In this TypeScript version:
- The function `is_valid_email` has been renamed to `isValidEmail` to follow camelCase naming convention, which is common in TypeScript.
- The function signature includes explicit types for parameters (`email: string`) and return value (`boolean`).
- The regular expression is defined as a `RegExp` type.
- Instead of using `re.match`, we use the `test` method of the regular expression object to check if the email matches the pattern. This is more idiomatic in JavaScript/TypeScript.