Sure! Here is the equivalent TypeScript code:

```typescript
function isValidEmail(email: string): boolean {
    /**
     * Verifies if the provided string is a valid email address.
     *
     * @param email - The email address to validate.
     * @returns True if the email address is valid, False otherwise.
     */
    // Regular expression pattern for validating an email address
    const emailPattern: RegExp = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

    return emailPattern.test(email);
}

// Example usage
console.log(isValidEmail('example@example.com'));  // true
console.log(isValidEmail('invalid-email'));  // false
```

In this TypeScript code:
1. The function `is_valid_email` has been renamed to `isValidEmail` to follow camelCase naming convention commonly used in TypeScript.
2. The parameter and return types are explicitly defined using TypeScript's type system.
3. The regular expression pattern is defined as a `RegExp` object.
4. The `re.match` method from Python is replaced with the `test` method of the `RegExp` object in TypeScript, which performs a similar validation check.