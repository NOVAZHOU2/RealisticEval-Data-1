Sure! Here is the equivalent C++ code that performs the same functionality using regular expressions:

```cpp
#include <iostream>
#include <regex>
#include <string>

bool is_valid_email(const std::string& email) {
    /**
     * Verifies if the provided string is a valid email address.
     *
     * Parameters:
     * email (std::string): The email address to validate.
     *
     * Returns:
     * bool: True if the email address is valid, False otherwise.
     */
    // Regular expression pattern for validating an email address
    std::regex email_pattern("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$");

    return std::regex_match(email, email_pattern);
}

int main() {
    // Example usage
    std::string email = "example@example.com";
    std::cout << std::boolalpha << is_valid_email(email) << std::endl;

    return 0;
}
```

### Explanation:
1. **Header Files**: 
   - `<iostream>` for input/output operations.
   - `<regex>` for regular expression handling.
   - `<string>` for string manipulation.

2. **Function Definition**:
   - `is_valid_email` function takes a `std::string` parameter named `email`.
   - It uses a regular expression pattern to validate the email address.
   - `std::regex` is used to define the pattern.
   - `std::regex_match` is used to check if the email matches the pattern.

3. **Main Function**:
   - An example usage is provided in the `main` function to demonstrate how to call `is_valid_email`.

This C++ code maintains the same functionality and logic as the original Python code but adapts to C++ syntax and features.