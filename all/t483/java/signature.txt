Sure! Here's how you can convert the Python function signature to Java:

```java
import java.util.regex.Pattern;
import java.util.regex.Matcher;

/**
 * Verifies if the provided string is a valid email address.
 *
 * @param email The email address to validate.
 * @return true if the email address is valid, false otherwise.
 */
public class EmailValidator {

    /**
     * Checks if the given email is valid.
     *
     * @param email The email address to validate.
     * @return true if the email address is valid, false otherwise.
     */
    public static boolean isValidEmail(String email) {
        // Regular expression for validating an Email
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";

        Pattern pattern = Pattern.compile(emailRegex);
        if (email == null)
            return false;
        Matcher matcher = pattern.matcher(email);
        return matcher.matches();
    }
}
```

In this Java code:
- We use `Pattern` and `Matcher` from the `java.util.regex` package to perform the regex matching.
- The `isValidEmail` method checks if the provided email matches the specified regular expression.
- The `@param` and `@return` tags in the JavaDoc comments provide information about the method parameters and return value, similar to the Python docstring.