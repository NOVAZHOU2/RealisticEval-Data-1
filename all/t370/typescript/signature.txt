Here's the equivalent TypeScript code for the provided Python function:

```typescript
/**
 * Decompose a flat index `n` into a multidimensional index based on the given shape.
 * 
 * @param n - Flat index (non-negative integer).
 * @param shape - Array representing the dimensions of the multi-dimensional array.
 * @returns Array representing the multidimensional index corresponding to `n`.
 * @throws {Error} If `n` is out of bounds for the array defined by `shape`.
 */
function decompose(n: number, shape: number[]): number[] {
    // Implementation goes here
}
```

In this TypeScript version, I've made the following changes:

- The `Tuple` type in Python is represented as an array type `number[]` in TypeScript.
- The function signature includes parameter types and return type.
- The docstring has been converted into JSDoc comments.
- The `ValueError` in Python is replaced with a generic `Error` in TypeScript since there is no direct equivalent in TypeScript. You can adjust the error type if needed. 

Please add the implementation details inside the function body as required.