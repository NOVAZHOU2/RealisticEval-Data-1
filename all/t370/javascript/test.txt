Here's how you can convert your Python unittest test case to a Jest test case in JavaScript:

```javascript
const decompose = require('./decompose'); // Assuming decompose function is exported from a file named 'decompose.js'

describe('decompose', () => {
  it('should return correct multidimensional index for valid input', () => {
    expect(decompose(5, [2, 3])).toEqual([1, 2]);
  });

  it('should throw an error if n is out of bounds', () => {
    expect(() => decompose(7, [2, 3])).toThrow('n is out of bounds');
  });
});
```

In this example, I'm assuming that the `decompose` function is exported from a file named 'decompose.js'. If it's in a different location, adjust the import statement accordingly.

The `describe` function is used to group related tests together. The `it` function is used to define individual tests. In each test, we're using the `expect` function to assert that our `decompose` function behaves as expected. For the error case, we're using the `toThrow` matcher to check that the function throws an error with the expected message when called with invalid input.