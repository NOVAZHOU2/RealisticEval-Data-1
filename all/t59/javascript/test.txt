Sure! Below is the equivalent JavaScript test case using Jest for the given Python function:

```javascript
const { probabilityRedBalls } = require('./path-to-your-function-file'); // Adjust the path accordingly

describe('probabilityRedBalls', () => {
  it('should return the correct probability when all drawn balls are red', () => {
    const x = 2;
    const n = 3;
    const m = 1;
    const expectedProbability = 0.5; // Example expected result, adjust as needed

    expect(probabilityRedBalls(x, n, m)).toBeCloseTo(expectedProbability, 6); // Use toBeCloseTo for floating-point comparison
  });

  it('should return 0 if more balls are requested than available', () => {
    const x = 4;
    const n = 3;
    const m = 1;
    const expectedProbability = 0;

    expect(probabilityRedBalls(x, n, m)).toBeCloseTo(expectedProbability, 6);
  });

  it('should handle edge cases where there are no balls or only one type of ball', () => {
    const x1 = 0;
    const n1 = 3;
    const m1 = 0;
    const expectedProbability1 = 1;

    const x2 = 3;
    const n2 = 0;
    const m2 = 3;
    const expectedProbability2 = 0;

    expect(probabilityRedBalls(x1, n1, m1)).toBeCloseTo(expectedProbability1, 6);
    expect(probabilityRedBalls(x2, n2, m2)).toBeCloseTo(expectedProbability2, 6);
  });
});
```

Make sure to replace `'./path-to-your-function-file'` with the actual path to your JavaScript file where the `probabilityRedBalls` function is defined. Also, adjust the `expectedProbability` values according to your specific requirements.