Here is how you can translate the Python function into C++:

```c++
#include <iostream>
using namespace std;

double factorial(int num)
{
    if(num == 0 || num == 1)
        return 1;
    else
        return num * factorial(num - 1);
}

double probabilityRedBalls(int x, int n, int m)
{
    double numerator = factorial(n) / (factorial(x) * factorial(n-x));
    double denominator = factorial(m+n) / (factorial(m) * factorial(n));

    return numerator / denominator;
}

int main()
{
    int x, n, m;
    cout << "Enter number of balls to draw: ";
    cin >> x;
    cout << "Enter number of red balls: ";
    cin >> n;
    cout << "Enter number of blue balls: ";
    cin >> m;

    cout << "Probability of drawing " << x << " red balls: " << probabilityRedBalls(x, n, m);

    return 0;
}
```

This program uses the `factorial` function to calculate the factorial of a number which is then used to calculate the probability of drawing `x` red balls from a jar containing `n` red balls and `m` blue balls. 

Please note that the above C++ program does not handle edge cases such as when `x > n` or `x > m+n`. In those cases, the probability would be 0. You may want to add error checking for these conditions depending on your specific use case.