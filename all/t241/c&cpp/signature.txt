Here is the equivalent C++ function signature:

```cpp
#include <string>
#include <tuple>

/**
 * Finds the minimum distance between two words in a text file, considering each line as a separate sequence.
 *
 * @param file_path The path to the file to read.
 * @param word1 The first word to search for.
 * @param word2 The second word to search for.
 *
 * @return A tuple containing the line number with the minimum distance and the minimum distance itself.
 *         Returns (std::nullopt, std::numeric_limits<int>::max()) if one or both words are not found in any line.
 */
std::tuple<std::optional<int>, int> getMinSeqNumAndDistance(const std::string& file_path, const std::string& word1, const std::string& word2);
```

This function uses `std::optional` instead of `None` and `std::numeric_limits<int>::max()` instead of `float('inf')`. Also note that the return type is now a tuple of an optional integer and an integer, rather than a tuple of integers. This is because the Python version returns `None` when either word is not found, while the C++ version returns an empty `std::optional`.