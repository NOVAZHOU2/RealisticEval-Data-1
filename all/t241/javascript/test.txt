Sure! Below is the equivalent JavaScript test case using Jest:

```javascript
const fs = require('fs');
const path = require('path');

function getMinSeqNumAndDistance(filePath, word1, word2) {
    /**
     * Finds the minimum distance between two words in a text file, considering each line as a separate sequence.
     * @param {string} filePath - The path to the file to read.
     * @param {string} word1 - The first word to search for.
     * @param {string} word2 - The second word to search for.
     * @returns {Array} - An array containing the line number with the minimum distance and the minimum distance itself.
     *                   Returns [null, Infinity] if one or both words are not found in any line.
     */
    const content = fs.readFileSync(filePath, 'utf8');
    const lines = content.split('\n');
    let minDist = Infinity;
    let minLine = null;

    lines.forEach((line, index) => {
        const words = line.split(/\s+/);
        const indicesWord1 = [];
        const indicesWord2 = [];

        words.forEach((word, i) => {
            if (word === word1) {
                indicesWord1.push(i);
            }
            if (word === word2) {
                indicesWord2.push(i);
            }
        });

        indicesWord1.forEach(i => {
            indicesWord2.forEach(j => {
                const dist = Math.abs(i - j);
                if (dist < minDist) {
                    minDist = dist;
                    minLine = index + 1; // Line numbers start at 1
                }
            });
        });
    });

    return [minLine, minDist];
}

// Test cases using Jest
describe('getMinSeqNumAndDistance', () => {
    it('should find the minimum distance between two words', () => {
        const filePath = path.join(__dirname, 'test.txt');
        const result = getMinSeqNumAndDistance(filePath, 'apple', 'banana');
        expect(result).toEqual([2, 3]);
    });

    it('should handle case where one word is not found', () => {
        const filePath = path.join(__dirname, 'test.txt');
        const result = getMinSeqNumAndDistance(filePath, 'apple', 'orange');
        expect(result).toEqual([null, Infinity]);
    });

    it('should handle case where both words are not found', () => {
        const filePath = path.join(__dirname, 'test.txt');
        const result = getMinSeqNumAndDistance(filePath, 'grape', 'kiwi');
        expect(result).toEqual([null, Infinity]);
    });
});
```

In this example, we have a `getMinSeqNumAndDistance` function that reads a file and calculates the minimum distance between two specified words. We then write Jest test cases to verify its functionality. The test cases check for various scenarios, including when one or both words are not found in the file.