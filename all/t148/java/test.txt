Hereâ€™s the equivalent JUnit 4 test case in Java for the provided Jest test code:

```java
package org.real.temp;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class Tester {

    @Test
    public void testBase64ToArrayBuffer1() {
        String base64 = "SGVsbG8sIFdvcmxkIQ==";
        String expected = "Hello, World!";
        byte[] arrayBuffer = Base64Converter.base64ToArrayBuffer(base64);
        String result = new String(arrayBuffer);
        assertEquals(expected, result);
    }

    @Test
    public void testBase64ToArrayBuffer2() {
        String base64 = "U29tZSB0ZXh0IHdpdGggc3BhcmluZyBhbmQgd29ya2luZyE=";
        String expected = "Some text with sparing and working!";
        byte[] arrayBuffer = Base64Converter.base64ToArrayBuffer(base64);
        String result = new String(arrayBuffer);
        assertEquals(expected, result);
    }

    @Test
    public void testBase64ToArrayBuffer3() {
        String base64 = "QmFzZTY0IGVuY29kaW5nIGlzIGEgY29tbW9ubG9nIEZvciBiaW5hcnkgZGF0YQ==";
        String expected = "Base64 encoding is a common log For binary data";
        byte[] arrayBuffer = Base64Converter.base64ToArrayBuffer(base64);
        String result = new String(arrayBuffer);
        assertEquals(expected, result);
    }

    @Test
    public void testBase64ToArrayBuffer4() {
        String base64 = "R2l2ZSBtZSBhbG9uZyBhIHBhdGggdG8gY29tcGxldGUgc3RhcnQgcGFnZS4=";
        String expected = "Give me along a path to complete start page.";
        byte[] arrayBuffer = Base64Converter.base64ToArrayBuffer(base64);
        String result = new String(arrayBuffer);
        assertEquals(expected, result);
    }
}
```

This code uses JUnit 4 to create tests that compare the decoded strings to the expected values, maintaining the same structure as the original Jest tests. Let me know if you need any modifications!