To convert the TypeScript function signature to a Python code signature while retaining the comments, you can write it as follows:
python
def base64_to_bytes(base64_string: str) -> bytes:
    """
    Converts a Base64-encoded string to a bytes object.

    :param base64_string: The Base64-encoded string to convert.
    :returns: A bytes object representing the decoded bytes.
    """
Breakdown of the Conversion:
Function Name:
The function name is converted from base64ToArrayBuffer to base64_to_bytes to adhere to Python's naming conventions (snake_case).
Parameter Type:
The parameter type is changed from string to str, which is the correct type for strings in Python.
Return Type:
The return type is changed from ArrayBuffer to bytes, as Python uses bytes to represent binary data.
Docstring:
The comments are transformed into a docstring, which describes the function, its parameters, and its return value.
This signature accurately reflects the intended functionality described in the TypeScript code while following Python conventions.