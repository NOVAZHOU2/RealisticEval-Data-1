```cpp
/**
 * Sorts an array of objects alphabetically based on a specified field.
 *
 * @param std::vector<std::map<std::string, std::string>>& array - The array of objects to sort.
 * @param const std::string& field - The field of the objects to sort by.
 * @param bool ascending - If true, sort in ascending order; if false, sort in descending order.
 * @return std::vector<std::map<std::string, std::string>> - The sorted array of objects.
 */
std::vector<std::map<std::string, std::string>> sortByField(std::vector<std::map<std::string, std::string>>& array, const std::string& field, bool ascending = true) {
    // Implementation of the function goes here
}
```

In this C++ version:
- We use `std::vector` and `std::map` to represent arrays and objects respectively, similar to how JavaScript uses arrays and objects.
- The function parameters and return type are explicitly typed using C++'s type system.
- The default value for the `ascending` parameter is set directly within the function declaration.