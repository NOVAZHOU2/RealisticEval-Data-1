Sure! Here is the equivalent Java code signature with the same comments:

```java
/**
 * Sorts an array of objects alphabetically based on a specified field.
 *
 * @param array - The array of objects to sort.
 * @param field - The field of the objects to sort by.
 * @param ascending - If true, sort in ascending order; if false, sort in descending order.
 * @return The sorted array of objects.
 */
public static <T> T[] sortByField(T[] array, String field, boolean ascending) {
    // Implementation goes here
}
```

### Explanation:
- `public static <T> T[] sortByField`: This defines a public static method named `sortByField` that takes an array of type `T`, a string representing the field, and a boolean indicating the sorting order. It returns an array of type `T`.
- `<T>`: This indicates that the method is generic, allowing it to work with any type of object.

Note: In Java, arrays are covariant, so you can't return a different type than what was passed in, which makes using arrays for this purpose somewhat limited. For more flexibility, consider using a `List<T>` instead of an array.