Hereâ€™s the Java version of your JavaScript code:

```java
import java.util.Arrays;
import java.util.Comparator;

public class SortUtil {
    public static Object[] sortByField(Object[] array, String field, boolean ascending) {
        if (array.length == 0 || !array[0].getClass().getDeclaredField(field).isAccessible()) {
            throw new IllegalArgumentException("Field does not exist in the objects.");
        }

        Arrays.sort(array, new Comparator<Object>() {
            @Override
            public int compare(Object a, Object b) {
                try {
                    String valueA = String.valueOf(a.getClass().getDeclaredField(field).get(a)).toLowerCase();
                    String valueB = String.valueOf(b.getClass().getDeclaredField(field).get(b)).toLowerCase();

                    int comparison = valueA.compareTo(valueB);
                    return ascending ? comparison : -comparison;
                } catch (Exception e) {
                    throw new RuntimeException(e);
                }
            }
        });

        return array;
    }
}
```

This Java code maintains the functionality of sorting an array of objects by a specified field in either ascending or descending order.