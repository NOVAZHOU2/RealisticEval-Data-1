Here is how you can write a Python unit test for your JavaScript function using `unittest`:

```python
import unittest

def sortByField(array, field, ascending=True):
    # Implementation goes here...
    pass

class TestSortByField(unittest.TestCase):

    def test_sorting_by_field_ascending(self):
        array = [{'name': 'John'}, {'name': 'Jane'}]
        sorted_array = sortByField(array, 'name', True)
        self.assertEqual(sorted_array, [{'name': 'Jane'}, {'name': 'John'}])

    def test_sorting_by_field_descending(self):
        array = [{'name': 'John'}, {'name': 'Jane'}]
        sorted_array = sortByField(array, 'name', False)
        self.assertEqual(sorted_array, [{'name': 'John'}, {'name': 'Jane'}])

if __name__ == '__main__':
    unittest.main()
```

In this example, we have two tests: one checks sorting in ascending order and another in descending order. The `sortByField` function needs to be implemented to make these tests pass.

Please note that the actual implementation of the `sortByField` function is not provided in the question. It should return the array sorted according to the specified field and order.