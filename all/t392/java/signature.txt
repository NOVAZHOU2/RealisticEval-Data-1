Sure, here’s the equivalent Java method for the given Python function:

```java
public class LookAndSay {

    /**
     * Generates the next sequence in the 'look-and-say' sequence by reading off the digits of the given number,
     * grouping by consecutive digits.
     *
     * @param number The current sequence as a string.
     * @return The next sequence in the 'look-and-say' series.
     */
    public static String lookAndSay(String number) {
        // Implementation goes here
        return "";  // Placeholder return value
    }
}
```

To complete the implementation, you would need to write the logic inside the `lookAndSay` method. Here’s a possible implementation:

```java
import java.util.*;

public class LookAndSay {

    /**
     * Generates the next sequence in the 'look-and-say' sequence by reading off the digits of the given number,
     * grouping by consecutive digits.
     *
     * @param number The current sequence as a string.
     * @return The next sequence in the 'look-and-say' series.
     */
    public static String lookAndSay(String number) {
        StringBuilder result = new StringBuilder();
        char[] digits = number.toCharArray();
        int count = 1;
        
        for (int i = 1; i < digits.length; i++) {
            if (digits[i] == digits[i - 1]) {
                count++;
            } else {
                result.append(count).append(digits[i - 1]);
                count = 1;
            }
        }
        
        // Append the last group
        result.append(count).append(digits[digits.length - 1]);
        
        return result.toString();
    }

    public static void main(String[] args) {
        // Example usage
        System.out.println(lookAndSay("1")); // Output: "11"
        System.out.println(lookAndSay("11")); // Output: "21"
        System.out.println(lookAndSay("21")); // Output: "1211"
    }
}
```

This Java method `lookAndSay` follows the same functionality and structure as the provided Python function, with appropriate Java-style comments and documentation.