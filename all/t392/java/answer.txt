Sure! Below is the equivalent Java code for the provided Python function, organized within the package `org.real.temp` and the class `Answer`. The Java code maintains the same functionality and logic as the Python code:

```java
package org.real.temp;

public class Answer {

    /**
     * Generates the next sequence in the 'look-and-say' sequence by reading off the digits of the given number,
     * grouping by consecutive digits.
     *
     * @param number The current sequence as a string.
     * @return The next sequence in the 'look-and-say' series.
     */
    public static String lookAndSay(String number) {
        StringBuilder result = new StringBuilder();
        int count = 1;
        int length = number.length();

        // Iterate through the number, group by consecutive digits and count them
        for (int i = 1; i < length; i++) {
            if (number.charAt(i) == number.charAt(i - 1)) {
                count++;
            } else {
                result.append(count).append(number.charAt(i - 1));
                count = 1;
            }
        }

        // Append the last group of digits
        result.append(count).append(number.charAt(length - 1));

        return result.toString();
    }

    public static void main(String[] args) {
        // Example usage
        String input = "1";
        String output = lookAndSay(input);
        System.out.println(output); // Expected output: "11"
    }
}
```

### Explanation:
1. **Method Signature**: The method `lookAndSay` is defined as `public static String lookAndSay(String number)` to match the Python function signature.
2. **StringBuilder**: Instead of using a list and joining it at the end, we use `StringBuilder` for efficient string manipulation.
3. **Character Access**: In Java, characters are accessed using `charAt(index)` instead of Python's indexing.
4. **String Concatenation**: We use `StringBuilder.append()` to concatenate strings efficiently.
5. **Main Method**: A simple `main` method is included to demonstrate how to call the `lookAndSay` method.

This Java code should provide the same functionality as the original Python code.