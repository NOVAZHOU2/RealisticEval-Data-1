Certainly! Here is the equivalent JavaScript code with the function signature and comments rewritten to conform to JSDoc standards:

```javascript
/**
 * Generates the next sequence in the 'look-and-say' sequence by reading off the digits of the given number,
 * grouping by consecutive digits.
 *
 * @param {string} number - The current sequence as a string.
 * @returns {string} - The next sequence in the 'look-and-say' series.
 */
function lookAndSay(number) {
    let result = [];
    let count = 1;
    const length = number.length;

    // Iterate through the number, group by consecutive digits and count them
    for (let i = 1; i < length; i++) {
        if (number[i] === number[i - 1]) {
            count += 1;
        } else {
            result.push(`${count}${number[i - 1]}`);
            count = 1;
        }
    }

    // Append the last group of digits
    result.push(`${count}${number[length - 1]}`);

    return result.join('');
}
```

In this JavaScript code:
- The function `look_and_say` is renamed to `lookAndSay` to follow camelCase naming conventions commonly used in JavaScript.
- The JSDoc comment block is placed above the function definition and includes the description, parameters, and return type.
- The rest of the logic remains the same, ensuring that the functionality is preserved.