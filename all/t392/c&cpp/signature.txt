Hereâ€™s the equivalent C++ function with comments and documentation adapted to C++ standards:

```cpp
#include <iostream>
#include <string>

// Function to generate the next sequence in the 'look-and-say' series
// by reading off the digits of the given number, grouping by consecutive digits.
std::string look_and_say(const std::string& number) {
    /*
    Generates the next sequence in the 'look-and-say' sequence by reading off the digits of the given number,
    grouping by consecutive digits.

    Args:
        number (std::string): The current sequence as a string.

    Returns:
        std::string: The next sequence in the 'look-and-say' series.
    */

    std::string result;
    if (number.empty()) return result;

    char current_digit = number[0];
    int count = 1;

    // Iterate through each character in the string
    for (size_t i = 1; i < number.length(); ++i) {
        if (number[i] == current_digit) {
            ++count;
        } else {
            // Append the count and digit to the result string
            result += std::to_string(count) + current_digit;
            current_digit = number[i];
            count = 1;
        }
    }

    // Append the last group
    result += std::to_string(count) + current_digit;

    return result;
}

int main() {
    std::string test_number = "1";
    std::string next_sequence = look_and_say(test_number);
    std::cout << "Next sequence: " << next_sequence << std::endl;
    return 0;
}
```

### Explanation:
- **Function Signature**: `std::string look_and_say(const std::string& number)` is the C++ equivalent of `def look_and_say(number: str)`.
- **Docstring Comments**: The Python docstring is converted into C++ multi-line comments (`/* ... */`).
- **Single-Line Comments**: Single-line comments (`//`) are used for brief explanations.
- **String Conversion**: `std::to_string(count)` is used to convert the integer count to a string.
- **Main Function**: A simple `main` function is included to demonstrate calling the `look_and_say` function and printing the result.