Certainly! Below is the equivalent C++ code that replicates the functionality of the provided Python script. This code will rename a Windows file path by replacing colons in the filename with underscores.

```cpp
#include <iostream>
#include <filesystem>
#include <string>

// Use the filesystem namespace for convenience
namespace fs = std::filesystem;

std::string rename_file_path(const std::string& path) {
    /**
     * Renames a Windows file path by replacing colons in the filename with underscores.
     *
     * Parameters:
     *     path (std::string): The original file path.
     *
     * Returns:
     *     std::string: The modified file path with colons in the filename replaced by underscores.
     */
    
    // Split the path into directory and filename
    fs::path p = path;
    std::string directory = p.parent_path().string();
    std::string filename = p.filename().string();

    // Replace colons in the filename with underscores
    std::string sanitized_filename;
    for (char c : filename) {
        if (c == ':') {
            sanitized_filename += '_';
        } else {
            sanitized_filename += c;
        }
    }

    // Reconstruct the full path with the sanitized filename
    std::string new_path = fs::path(directory) / sanitized_filename;

    return new_path;
}

int main() {
    // Example usage
    std::string path = "C:\\Users\\Example\\Documents\\file:name.txt";
    std::string new_path = rename_file_path(path);
    std::cout << "Original Path: " << path << std::endl;
    std::cout << "New Path: " << new_path << std::endl;

    return 0;
}
```

### Explanation:
1. **Header Files**: 
   - `#include <iostream>` for input/output operations.
   - `#include <filesystem>` for filesystem operations.
   - `#include <string>` for string manipulation.

2. **Namespace Alias**:
   - `namespace fs = std::filesystem;` to simplify the use of filesystem functions.

3. **Function Definition**:
   - `rename_file_path`: This function takes a string `path` and returns a new string with colons in the filename replaced by underscores.
   - It uses `fs::path` to split the path into directory and filename components.
   - It iterates over the characters in the filename and replaces colons with underscores.
   - It reconstructs the full path using the sanitized filename.

4. **Main Function**:
   - Demonstrates how to call the `rename_file_path` function and prints the original and new paths.

This code should work similarly to the Python version, handling the renaming of file paths on Windows systems.