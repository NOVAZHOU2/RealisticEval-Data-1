Sure, here is the equivalent C++ code for your Python function:

```c++
#include <string>
#include <algorithm>

std::string rename_file_path(const std::string& path) {
    std::string result = path;
    std::replace(result.begin(), result.end(), ':', '_');
    return result;
}
```

And here is the equivalent C code for your Python function:

```c
#include <stdio.h>
#include <string.h>

char* rename_file_path(char* path) {
    char* result = strdup(path);
    if (!result)
        return NULL;

    char* pos;
    while ((pos = strchr(result, ':')) != NULL) {
        *pos = '_';
    }

    return result;
}
```

In both versions of the code, the `rename_file_path` function takes a string representing a file path and returns a new string where all colons (`:`) have been replaced with underscores (`_`). The C version uses `strdup` to create a copy of the input string since strings in C are mutable.