Sure! Below is the equivalent JavaScript code that maintains the same functionality, logic, and structure as the provided Python code:

```javascript
const path = require('path');

function renameFilePath(path) {
    /**
     * Renames a Windows file path by replacing colons in the filename with underscores.
     *
     * @param {string} path - The original file path.
     * @returns {string} The modified file path with colons in the filename replaced by underscores.
     */
    // Split the path into directory and filename
    const [directory, filename] = path.parse(path);
    
    // Replace colons in the filename with underscores
    const sanitizedFilename = filename.replace(/:/g, '_');
    
    // Reconstruct the full path with the sanitized filename
    const newPath = path.format({ dir: directory, base: sanitizedFilename });
    
    return newPath;
}

// Example usage
console.log(renameFilePath('C:\\Users\\Example\\Documents\\file:name.txt'));
```

### Explanation:
1. **Importing `path` module**: In JavaScript, we use the `path` module from Node.js to handle file paths.
2. **Function Definition**: The function `renameFilePath` is defined similarly to the Python function.
3. **Splitting the Path**: We use `path.parse` to split the path into directory and filename components.
4. **Sanitizing the Filename**: We replace all colons (`:`) in the filename with underscores (`_`) using a regular expression.
5. **Reconstructing the Path**: We use `path.format` to reconstruct the full path with the sanitized filename.
6. **Example Usage**: An example call to the function is shown at the end for demonstration purposes.

This JavaScript code should provide the same functionality as the given Python code.