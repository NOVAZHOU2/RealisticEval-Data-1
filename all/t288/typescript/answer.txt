Sure, here is the equivalent TypeScript code for your Python function using the `typescript` language:

```typescript
function bresenhamLine(x1: number, y1: number, x2: number, y2: number): [number, number][] {
    const result: [number, number][] = [];
    
    let dx = Math.abs(x2 - x1);
    let dy = Math.abs(y2 - y1);
    let sx = (x1 < x2) ? 1 : -1;
    let sy = (y1 < y2) ? 1 : -1;
    let err = dx - dy;

    while(true) {
        result.push([x1, y1]);
        
        if ((x1 === x2) && (y1 === y2)) break;
        
        const e2 = 2 * err;
        if (e2 > -dy) { 
            err -= dy; 
            x1 += sx; 
        }
        if (e2 < dx) { 
            err += dx; 
            y1 += sy; 
        }
    }

    return result;
}
```

This TypeScript function `bresenhamLine` takes four arguments (`x1`, `y1`, `x2`, `y2`) which represent the coordinates of the start and end points of the line, respectively. It returns an array of tuples representing the points that the line passes through.

The logic inside the function closely follows the Bresenham line drawing algorithm, which efficiently calculates the pixels along a line between two points in a grid.