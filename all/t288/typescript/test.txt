Here is how you can convert your Python unittest test class into a TypeScript Jest test case:

```typescript
import { expect } from '@jest/globals';

function bresenhamLine(x1: number, y1: number, x2: number, y2: number): [number, number][] {
    // Your function implementation here...
}

describe('bresenhamLine', () => {
    it('should return an array of points for a vertical line', () => {
        const result = bresenhamLine(0, 0, 0, 3);
        expect(result).toEqual([[0, 0], [0, 1], [0, 2], [0, 3]]);
    });

    it('should return an array of points for a horizontal line', () => {
        const result = bresenhamLine(0, 0, 3, 0);
        expect(result).toEqual([[0, 0], [1, 0], [2, 0], [3, 0]]);
    });

    it('should return an array of points for a diagonal line', () => {
        const result = bresenhamLine(0, 0, 3, 3);
        expect(result).toEqual([[0, 0], [1, 1], [2, 2], [3, 3]]);
    });
});
```

This TypeScript code uses Jest's `expect` function to assert that the output of the `bresenhamLine` function matches the expected results. The `describe` function groups related tests together, while the `it` function defines individual test cases.