Here is the Java version of the provided Python code, organized within the `org.real.temp` package and the `Answer` class:

```java
package org.real.temp;

import java.util.ArrayList;
import java.util.List;

public class Answer {

    /**
     * Generate points of a line using Bresenham's line algorithm between two points.
     *
     * @param x1 Coordinate of the start point on the x-axis.
     * @param y1 Coordinate of the start point on the y-axis.
     * @param x2 Coordinate of the end point on the x-axis.
     * @param y2 Coordinate of the end point on the y-axis.
     * @return List of points: A list of points (pairs of x and y coordinates) that the line passes through.
     */
    public static List<Point> bresenhamLine(int x1, int y1, int x2, int y2) {
        List<Point> points = new ArrayList<>();
        int dx = Math.abs(x2 - x1);
        int dy = -Math.abs(y2 - y1);
        int sx = (x1 < x2) ? 1 : -1;
        int sy = (y1 < y2) ? 1 : -1;
        int err = dx + dy; // error value e_xy

        while (true) {
            points.add(new Point(x1, y1));
            if (x1 == x2 && y1 == y2) {
                break;
            }
            int e2 = 2 * err;
            // horizontal step
            if (e2 >= dy) {
                if (x1 == x2) {
                    break;
                }
                err += dy;
                x1 += sx;
            }
            // vertical step
            if (e2 <= dx) {
                if (y1 == y2) {
                    break;
                }
                err += dx;
                y1 += sy;
            }
        }

        return points;
    }

    // Helper class for storing points
    public static class Point {
        private final int x;
        private final int y;

        public Point(int x, int y) {
            this.x = x;
            this.y = y;
        }

        @Override
        public String toString() {
            return "(" + x + ", " + y + ")";
        }
    }

    // Example usage
    public static void main(String[] args) {
        List<Point> linePoints = bresenhamLine(0, 0, 5, 3);
        for (Point p : linePoints) {
            System.out.println(p);
        }
    }
}
```

### Explanation:
1. **Package and Class Definition**: The Java code is placed inside the `org.real.temp` package and the `Answer` class.
2. **Method Signature**: The `bresenhamLine` method takes four integer parameters (`x1`, `y1`, `x2`, `y2`) and returns a `List` of `Point` objects.
3. **Point Class**: A nested `Point` class is defined to store the coordinates of each point on the line. This class has `toString` method to print the point in a readable format.
4. **Logic Implementation**: The core logic of Bresenham's line algorithm is implemented similarly to the Python version, with appropriate type handling and variable declarations in Java.
5. **Example Usage**: The `main` method demonstrates how to call the `bresenhamLine` method and prints the resulting points.

This Java code maintains the functionality and logic of the original Python code while adhering to Java's syntax and object-oriented principles.