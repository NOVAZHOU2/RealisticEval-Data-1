Hereâ€™s the equivalent Java code for the provided C++ class, structured according to Java conventions and with comments formatted as Javadoc:

```java
package org.real.temp;

import java.util.HashMap;
import java.util.Map;

/**
 * This class contains RGB representations of various colors, which can be obtained directly by the functions provided.
 */
public class Color {
    
    /**
     * Enum to represent the color names.
     */
    public enum ColorName {
        RED,
        GREEN,
        BLUE,
        YELLOW,
        MAGENTA,
        CYAN,
        WHITE,
        BLACK,
        ORANGE,
        PURPLE,
        PINK,
        BROWN
    }

    // A map to store the RGB values of the colors
    private Map<ColorName, int[]> colors;

    /**
     * Constructor that initializes the color mappings.
     */
    public Color() {
        initializeColors();
    }

    /**
     * Function to get the RGB value of a color by its name.
     *
     * @param colorName The name of the color.
     * @return An array containing the RGB values of the color.
     */
    public int[] getColor(ColorName colorName) {
        return colors.get(colorName);
    }

    /**
     * Function to get the color name as a string.
     *
     * @param colorName The name of the color.
     * @return The name of the color as a string.
     */
    public String getColorName(ColorName colorName) {
        switch (colorName) {
            case RED: return "Red";
            case GREEN: return "Green";
            case BLUE: return "Blue";
            case YELLOW: return "Yellow";
            case MAGENTA: return "Magenta";
            case CYAN: return "Cyan";
            case WHITE: return "White";
            case BLACK: return "Black";
            case ORANGE: return "Orange";
            case PURPLE: return "Purple";
            case PINK: return "Pink";
            case BROWN: return "Brown";
            default: return "Unknown Color";
        }
    }

    /**
     * Function to initialize the colors.
     */
    private void initializeColors() {
        colors = new HashMap<>();
        colors.put(ColorName.RED, new int[]{255, 0, 0});
        colors.put(ColorName.GREEN, new int[]{0, 255, 0});
        colors.put(ColorName.BLUE, new int[]{0, 0, 255});
        colors.put(ColorName.YELLOW, new int[]{255, 255, 0});
        colors.put(ColorName.MAGENTA, new int[]{255, 0, 255});
        colors.put(ColorName.CYAN, new int[]{0, 255, 255});
        colors.put(ColorName.WHITE, new int[]{255, 255, 255});
        colors.put(ColorName.BLACK, new int[]{0, 0, 0});
        colors.put(ColorName.ORANGE, new int[]{255, 165, 0});
        colors.put(ColorName.PURPLE, new int[]{128, 0, 128});
        colors.put(ColorName.PINK, new int[]{255, 192, 203});
        colors.put(ColorName.BROWN, new int[]{165, 42, 42});
    }
}
```

### Changes Made:
1. Converted C++ types and structures to Java equivalents.
2. Used `Map<ColorName, int[]>` to represent the RGB values as arrays.
3. Converted C++ comments to Java-style Javadoc comments.
4. Preserved the overall logic and functionality from the original C++.