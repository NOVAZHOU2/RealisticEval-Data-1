Hereâ€™s the equivalent Jest test code for the provided C++ Catch2 test cases:

```typescript
import { Color } from './Color'; // Adjust the import based on your file structure

describe("Color RGB Values", () => {
    let color: Color;

    beforeEach(() => {
        color = new Color();
    });

    test("Verify RGB values for Red", () => {
        const rgb = color.getColor(Color.ColorName.RED);
        expect(rgb[0]).toBe(255);
        expect(rgb[1]).toBe(0);
        expect(rgb[2]).toBe(0);
    });

    test("Verify RGB values for Green", () => {
        const rgb = color.getColor(Color.ColorName.GREEN);
        expect(rgb[0]).toBe(0);
        expect(rgb[1]).toBe(255);
        expect(rgb[2]).toBe(0);
    });

    test("Verify RGB values for Blue", () => {
        const rgb = color.getColor(Color.ColorName.BLUE);
        expect(rgb[0]).toBe(0);
        expect(rgb[1]).toBe(0);
        expect(rgb[2]).toBe(255);
    });

    test("Verify RGB values for Yellow", () => {
        const rgb = color.getColor(Color.ColorName.YELLOW);
        expect(rgb[0]).toBe(255);
        expect(rgb[1]).toBe(255);
        expect(rgb[2]).toBe(0);
    });

    test("Verify RGB values for Magenta", () => {
        const rgb = color.getColor(Color.ColorName.MAGENTA);
        expect(rgb[0]).toBe(255);
        expect(rgb[1]).toBe(0);
        expect(rgb[2]).toBe(255);
    });

    test("Verify RGB values for Cyan", () => {
        const rgb = color.getColor(Color.ColorName.CYAN);
        expect(rgb[0]).toBe(0);
        expect(rgb[1]).toBe(255);
        expect(rgb[2]).toBe(255);
    });

    test("Verify RGB values for White", () => {
        const rgb = color.getColor(Color.ColorName.WHITE);
        expect(rgb[0]).toBe(255);
        expect(rgb[1]).toBe(255);
        expect(rgb[2]).toBe(255);
    });

    test("Verify RGB values for Black", () => {
        const rgb = color.getColor(Color.ColorName.BLACK);
        expect(rgb[0]).toBe(0);
        expect(rgb[1]).toBe(0);
        expect(rgb[2]).toBe(0);
    });

    test("Verify RGB values for Orange", () => {
        const rgb = color.getColor(Color.ColorName.ORANGE);
        expect(rgb[0]).toBe(255);
        expect(rgb[1]).toBe(165);
        expect(rgb[2]).toBe(0);
    });

    test("Verify RGB values for Purple", () => {
        const rgb = color.getColor(Color.ColorName.PURPLE);
        expect(rgb[0]).toBe(128);
        expect(rgb[1]).toBe(0);
        expect(rgb[2]).toBe(128);
    });

    test("Verify RGB values for Pink", () => {
        const rgb = color.getColor(Color.ColorName.PINK);
        expect(rgb[0]).toBe(255);
        expect(rgb[1]).toBe(192);
        expect(rgb[2]).toBe(203);
    });

    test("Verify RGB values for Brown", () => {
        const rgb = color.getColor(Color.ColorName.BROWN);
        expect(rgb[0]).toBe(165);
        expect(rgb[1]).toBe(42);
        expect(rgb[2]).toBe(42);
    });
});
```

### Key Changes and Adaptations:
1. **Test Structure**: Used `describe` to group tests and `test` for individual cases.
2. **Assertions**: Replaced `REQUIRE` with Jest's `expect` function.
3. **Setup**: Added `beforeEach` to instantiate the `Color` class before each test.
4. **Accessing Enum**: Adjusted access to the enum for colors using `Color.ColorName`.