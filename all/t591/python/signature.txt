Sure! Below is the C++ code converted to Python, with comments changed to Python style:
python
class Color:
    # Enum for color names
    class ColorName:
        RED = 0
        GREEN = 1
        BLUE = 2
        YELLOW = 3
        MAGENTA = 4
        CYAN = 5
        WHITE = 6
        BLACK = 7
        ORANGE = 8
        PURPLE = 9
        PINK = 10
        BROWN = 11

    # Constructor
    def __init__(self):
        self.initialize_colors()

    # Function to get the RGB value of a color by its name
    def get_color(self, color_name):
        pass

    # Function to get the color name as a string
    def get_color_name(self, color_name):
        pass

    # A dictionary to store the RGB values of the colors
    colors = {}

    # Function to initialize the colors
    def initialize_colors(self):
        pass
Key Changes:
The Color class is defined in Python with nested ColorName class.
Comments have been changed from C++ style (//) to Python style (#).
The function names have been converted to Python's snake_case convention.
The C++ tuple type has been omitted in Python since the default tuple syntax suffices.
The unordered_map is replaced with a dictionary (colors = {}).
Let me know if you need any further modifications!