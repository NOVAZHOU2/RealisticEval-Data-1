Sure! Here is the equivalent C++ code for the provided JavaScript functions:

```cpp
#include <iostream>
#include <fstream>
#include <sstream>
#include <string>
#include <vector>
#include <ctime>

// Function to convert the chat logs to Markdown format and generate a Blob object containing them
std::string convertChatToMarkdown(const std::vector<std::string>& chat, const std::string& title = "ChatGPT Conversation") {
    std::stringstream markdown;
    markdown << "# " << title << "\n\n";

    // Iterate over the chat conversation array
    for (size_t index = 0; index < chat.size(); ++index) {
        const std::string speaker = (index % 2 == 0) ? "Human" : "Assistant"; // Alternate speaker
        markdown << "**" << speaker << ":**\n" << chat[index] << "\n\n***\n\n";
    }

    // Get the current date and time
    std::time_t now = std::time(nullptr);
    std::tm* ltm = std::localtime(&now);

    // Format the date and time
    char date[11];
    char time[9];
    std::strftime(date, sizeof(date), "%Y-%m-%d", ltm);
    std::strftime(time, sizeof(time), "%H:%M:%S", ltm);

    // Append the timestamp
    markdown << "Exported on " << date << " " << time << ".";

    return markdown.str();
}

// Function to encode a string as a Blob object (simulated by returning a string)
std::string encodeStringAsBlob(const std::string& string) {
    // In C++, we don't have a direct equivalent of Blob, so we'll just return the string
    return string;
}

int main() {
    // Example usage
    std::vector<std::string> chat = {
        "Hello, how can I help you today?",
        "I need some advice on programming.",
        "Sure, what specific programming issue are you facing?"
    };

    std::string markdownContent = convertChatToMarkdown(chat);
    std::string blobContent = encodeStringAsBlob(markdownContent);

    std::cout << blobContent << std::endl;

    return 0;
}
```

### Explanation:
1. **convertChatToMarkdown**: This function converts the chat logs to Markdown format and appends a timestamp.
2. **encodeStringAsBlob**: This function simulates encoding a string as a Blob object. Since C++ does not have a direct equivalent of Blob, it simply returns the string.
3. **getDate** and **getTime**: These functions are combined into a single call using `std::strftime` to format the date and time.
4. **Main Function**: An example usage of the functions is shown in the `main` function.

This should give you a good starting point for converting your JavaScript code to C++.