Sure! Below is the Java version of your Python code with the same functionality and comments:

```java
import org.yaml.snakeyaml.Yaml;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.util.Map;

/**
 * Reads a YAML file and returns its content as a Java Map or List.
 *
 * @param filePath The path to the YAML file.
 * @return The parsed YAML content as a Java data structure.
 * @throws FileNotFoundException If the specified file does not exist.
 * @throws YamlException If there is an error parsing the YAML file.
 */
public class YamlReader {

    public static Object readYaml(String filePath) throws FileNotFoundException, YamlException {
        File file = new File(filePath);
        if (!file.exists()) {
            throw new FileNotFoundException("The specified file does not exist: " + filePath);
        }

        try (InputStream inputStream = new FileInputStream(file)) {
            Yaml yaml = new Yaml();
            return yaml.load(inputStream);
        } catch (Exception e) {
            throw new YamlException("Error parsing the YAML file", e);
        }
    }
}
```

### Explanation:
1. **Imports**: The necessary imports include `org.yaml.snakeyaml.Yaml` for handling YAML files, and standard I/O classes for file operations.
2. **Class Definition**: A class named `YamlReader` is defined to encapsulate the functionality.
3. **Method Signature**:
   - `readYaml(String filePath)` method reads a YAML file from the given `filePath`.
   - It uses `FileInputStream` to read the file content.
   - The `Yaml` object from the SnakeYAML library is used to parse the YAML content into a Java data structure (`Map` or `List`).
4. **Exception Handling**:
   - `FileNotFoundException` is thrown if the specified file does not exist.
   - A custom exception `YamlException` is thrown if there is an error parsing the YAML file. This exception wraps any underlying exceptions for better error handling.

This Java code maintains the same functionality and intent as your original Python code while adhering to Java conventions and syntax.