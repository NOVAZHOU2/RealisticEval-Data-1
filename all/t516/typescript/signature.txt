```typescript
import * as fs from 'fs';
import * as yaml from 'js-yaml';

/**
 * Reads a YAML file and returns its content as a TypeScript object or array.
 *
 * @param {string} filePath - The path to the YAML file.
 * @returns {any} - Parsed YAML content as a TypeScript data structure.
 * @throws {Error} - If the specified file does not exist or there is an error parsing the YAML file.
 */
function readYaml(filePath: string): any {
    try {
        const fileContent = fs.readFileSync(filePath, 'utf8');
        return yaml.load(fileContent);
    } catch (error) {
        if (error instanceof Error) {
            throw error;
        }
        throw new Error('An unexpected error occurred while reading the YAML file.');
    }
}
```

In this TypeScript version of the function, I've used the `fs` module to read the file synchronously and the `yaml` library to parse the YAML content. The function throws an error if the file does not exist or if there's an issue parsing the YAML. Note that you'll need to install the `js-yaml` package via npm (`npm install js-yaml`) for this to work.