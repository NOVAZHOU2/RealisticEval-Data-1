Here's the equivalent Java code signature for the given Python function:

```java
import java.util.List;

/**
 * Computes the n-th power of a matrix using the fast exponentiation method.
 *
 * @param matrix A square matrix to be exponentiated.
 * @param n      The exponent to raise the matrix to. Must be a non-negative integer.
 * @return The matrix raised to the power of n.
 * @throws IllegalArgumentException if n is negative.
 * @throws ClassCastException     if matrix is not a list of lists or n is not an integer.
 */
public static List<List<Integer>> power(List<List<Integer>> matrix, int n) {
```

This Java version keeps the same functionality and documentation as the original Python function. Note that in Java, exceptions are thrown explicitly, so I've replaced the `ValueError` and `TypeError` with `IllegalArgumentException`. Also, Java uses `int` for integers instead of `Integer`, and it doesn't have a built-in generic type system like Python, so we use `List<List<Integer>>` directly.