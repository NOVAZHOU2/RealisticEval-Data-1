Here's how you can write a Jest test case for your Python function in TypeScript:

```typescript
import { describe, it, expect } from '@jest/globals';

describe('power', () => {
  it('should return the correct result for positive exponents', () => {
    const matrix = [
      [1, 2],
      [3, 4]
    ];
    const n = 2;
    const expected = [
      [7, 10],
      [15, 22]
    ];

    // Assuming you have implemented the 'power' function in TypeScript
    const result = power(matrix, n);

    expect(result).toEqual(expected);
  });

  it('should throw error for negative exponents', () => {
    const matrix = [
      [1, 2],
      [3, 4]
    ];
    const n = -1;

    // Assuming you have implemented the 'power' function in TypeScript
    expect(() => power(matrix, n)).toThrowError('n must be a non-negative integer');
  });
});
```

In the above code, we're using `@jest/globals` to access the Jest testing functions like `describe`, `it`, and `expect`. We're also assuming that you have implemented the `power` function in TypeScript. This code tests both the functionality of the function with a positive exponent and its error handling when given a negative exponent.