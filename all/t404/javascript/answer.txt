Here's how you can convert your Python function into JavaScript:

```javascript
function power(matrix, n) {
    // Checks if input values are valid
    if (!Array.isArray(matrix) || !matrix.every(Array.isArray)) throw new Error('Matrix must be a 2D array');
    if (typeof n !== 'number' || n < 0) throw new Error('Exponent must be a non-negative number');

    // Initialize result as identity matrix
    let result = Array.from({length: matrix.length}, () => Array(matrix[0].length).fill(0));
    for(let i=0; i<matrix.length; i++) {
        result[i][i] = 1;
    }

    // Copy matrix to temp variable
    let temp = [...matrix];

    // Perform fast exponentiation
    while(n > 0) {
        if(n % 2 === 1) {
            result = multiplyMatrices(result, temp);
        }
        temp = multiplyMatrices(temp, temp);
        n = Math.floor(n / 2);
    }

    return result;
}

// Helper function to multiply two matrices
function multiplyMatrices(a, b) {
    let product = [];
    for(let i=0; i<a.length; i++) {
        product.push([]);
        for(let j=0; j<b[0].length; j++) {
            let sum = 0;
            for(let k=0; k<b.length; k++) {
                sum += a[i][k] * b[k][j];
            }
            product[i].push(sum);
        }
    }
    return product;
}
```

This JavaScript function `power` does the same thing as your Python function - it raises a given square matrix to the power of a specified non-negative integer. It uses the fast exponentiation algorithm to do so efficiently. Note that this implementation assumes that all elements in the input matrix are numbers and that the matrix is indeed square (i.e., has the same number of rows and columns).