Certainly! Below is the equivalent JavaScript function with JSDoc comments:

```javascript
/**
 * Computes the n-th power of a matrix using the fast exponentiation method.
 *
 * @param {number[][]} matrix - A square matrix to be exponentiated.
 * @param {number} n - The exponent to raise the matrix to. Must be a non-negative integer.
 * @returns {number[][]} The matrix raised to the power of n.
 * @throws {Error} If n is negative.
 * @throws {TypeError} If matrix is not an array of arrays or n is not an integer.
 */
function power(matrix, n) {
    // Function body goes here
}
```

Here's a brief explanation of the changes:
1. **Function Signature**: The Python function `def power(matrix: List[List[int]], n: int) -> List[List[int]]:` is converted to the JavaScript function `function power(matrix, n)`.

2. **JSDoc Comments**:
   - The docstring is converted to JSDoc format.
   - The `Args` section is converted to `@param`.
   - The `Returns` section is converted to `@returns`.
   - The `Raises` section is converted to `@throws`.

3. **Type Annotations**:
   - `List[List[int]]` is translated to `{number[][]}` for a two-dimensional array of numbers.
   - `int` is translated to `{number}` since JavaScript does not differentiate between integers and floating-point numbers.

4. **Exception Handling**:
   - The `ValueError` and `TypeError` are replaced with `Error` and `TypeError` respectively in JavaScript.

Feel free to add the actual implementation inside the function if needed.