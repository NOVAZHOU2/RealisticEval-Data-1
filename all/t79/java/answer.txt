Here's how you can translate your Python function into Java:

```java
package org.real.temp;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class Answer {
    public static String dateRangeString(String startDateStr, String endDateStr) throws Exception {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date startDate = dateFormat.parse(startDateStr);
        Date endDate = dateFormat.parse(endDateStr);

        Calendar startCal = Calendar.getInstance();
        startCal.setTime(startDate);
        Calendar endCal = Calendar.getInstance();
        endCal.setTime(endDate);

        String startMonth = new SimpleDateFormat("MMMM").format(startDate);
        int startDay = startCal.get(Calendar.DAY_OF_MONTH);
        int startYear = startCal.get(Calendar.YEAR);

        String endMonth = new SimpleDateFormat("MMMM").format(endDate);
        int endDay = endCal.get(Calendar.DAY_OF_MONTH);
        int endYear = endCal.get(Calendar.YEAR);

        StringBuilder sb = new StringBuilder();

        if (startMonth.equals(endMonth)) {
            sb.append(startMonth).append(" ").append(startDay).append(" to ").append(endDay).append(", ").append(startYear);
        } else {
            sb.append(startMonth).append(" ").append(startDay).append(", ").append(startYear)
                    .append(" to ")
                    .append(endMonth).append(" ").append(endDay).append(", ").append(endYear);
        }

        return sb.toString();
    }
}
```

This Java method does the same thing as your Python function. It takes two strings representing dates, parses them into `Date` objects, then formats them according to your requirements. Note that Java exceptions are thrown where necessary.