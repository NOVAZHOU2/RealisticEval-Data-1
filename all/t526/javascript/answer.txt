Sure! Below is the equivalent JavaScript code for the given Python function:

```javascript
function minWindow(s, t) {
    /**
     * Find the minimum window substring in `s` that contains all characters of `t`.
     *
     * @param {string} s - The input string in which to search for the substring.
     * @param {string} t - The target string whose characters must be included in the substring.
     * @returns {string} - The minimum window substring of `s` that contains all characters of `t`. Returns an empty string if no such substring exists.
     */
    
    // Helper function to create a frequency map
    function createFrequencyMap(str) {
        const freqMap = {};
        for (let char of str) {
            if (freqMap[char]) {
                freqMap[char]++;
            } else {
                freqMap[char] = 1;
            }
        }
        return freqMap;
    }

    // Create frequency maps for t and the current window
    const targetFreqMap = createFrequencyMap(t);
    let required = Object.keys(targetFreqMap).length;

    let left = 0;
    let right = 0;
    let formed = 0;
    let windowCounts = {};

    let ans = [-1, 0, 0]; // [ansLen, startIdx, endIdx]

    while (right < s.length) {
        let character = s[right];
        windowCounts[character] = (windowCounts[character] || 0) + 1;

        if (targetFreqMap[character] && windowCounts[character] === targetFreqMap[character]) {
            formed++;
        }

        while (left <= right && formed === required) {
            character = s[left];

            if (ans[0] === -1 || right - left + 1 < ans[0]) {
                ans = [right - left + 1, left, right];
            }

            windowCounts[character]--;
            if (targetFreqMap[character] && windowCounts[character] < targetFreqMap[character]) {
                formed--;
            }

            left++;
        }

        right++;
    }

    return ans[0] === -1 ? "" : s.substring(ans[1], ans[2] + 1);
}

// Example usage:
console.log(minWindow("ADOBECODEBANC", "ABC")); // Output: "BANC"
```

This JavaScript function `minWindow` implements the same logic as the provided Python function using a sliding window approach with frequency maps. It finds the minimum window substring in `s` that contains all characters of `t`. If no such substring exists, it returns an empty string.