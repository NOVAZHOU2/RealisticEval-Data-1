Sure, here’s the equivalent Java method with the appropriate comments and structure:

```java
/**
 * Check whether the IP address is a legal IP address.
 *
 * @param ip The IP address in string format.
 * @return True if the IP is compliant, False otherwise.
 */
public static boolean isCompliantIP(String ip) {
    // Implementation goes here.
    // Example check:
    // Split the IP address by dots and validate each part.
    // This is just a placeholder for the actual implementation.
    
    String[] parts = ip.split("\\.");
    if (parts.length != 4) {
        return false;
    }
    
    for (String part : parts) {
        try {
            int value = Integer.parseInt(part);
            if (value < 0 || value > 255) {
                return false;
            }
        } catch (NumberFormatException e) {
            return false;
        }
    }
    
    return true;
}
```

Here’s a breakdown of the changes:
- The method name `is_compliant_ip` has been converted to `isCompliantIP` following Java naming conventions (camelCase).
- The Python type annotation `str` has been replaced with the corresponding Java type `String`.
- The Python type annotation `bool` has been replaced with the corresponding Java type `boolean`.
- The Python docstring has been converted to the standard JavaDoc format.
- A simple implementation for checking if an IP address is valid has been added as an example. You can replace this with your own logic if needed.