Certainly! Below is the equivalent JavaScript code for the given Python function, including the JSDoc comments:

```javascript
/**
 * Checks the XOR sums of specific columns in a given combination array.
 *
 * @param {Array<Array<number>>} combination - A 2D array where each column corresponds to a specific value.
 * @returns {boolean} - True if the XOR sums of the specified columns match the required values; otherwise, false.
 */
function checkXorSum(combination) {
    // Ensure that combination is an array of integers
    combination = combination.map(row => row.map(item => Math.floor(item)));

    // Calculate XOR sums for specified columns
    const xorSum036 = combination.map(row => row[0] ^ row[3] ^ row[6]);
    const xorSum147 = combination.map(row => row[1] ^ row[4] ^ row[7]);
    const xorSum25 = combination.map(row => row[2] ^ row[5]);

    // Check if the XOR sums match the expected values
    const allMatch036 = xorSum036.every(value => value === 0x6b);
    const allMatch147 = xorSum147.every(value => value === 0x76);
    const allMatch25 = xorSum25.every(value => value === 0x12);

    return allMatch036 && allMatch147 && allMatch25;
}
```

### Explanation:
1. **JSDoc Comments**:
   - The JSDoc comment block at the beginning provides a clear description of the function, its parameters, and its return type.
   - The parameter `combination` is documented as a 2D array of numbers.
   - The return type is documented as a boolean.

2. **Function Implementation**:
   - The function `checkXorSum` takes a 2D array `combination` as input.
   - The array is converted to an array of integers using `Math.floor(item)` to ensure that all elements are integers.
   - The XOR sums for the specified columns are calculated using the `map` method.
   - The `every` method is used to check if all values in the calculated XOR sums match the expected values (`0x6b`, `0x76`, and `0x12`).

This JavaScript function preserves the purpose and structure of the original Python function, including the documentation and functionality.