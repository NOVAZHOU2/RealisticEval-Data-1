Sure! Below is the equivalent JavaScript code for the provided Python function:

```javascript
const fs = require('fs');
const path = require('path');

function parseXamlToDict(xamlFilePath) {
    /**
     * Parse the XAML file, extract the key-value pairs within the String element, and return the model_answer_result in a dictionary
     * @param {string} xamlFilePath - Path to the XAML file.
     * @returns {Object} - A dictionary containing the key-value pairs extracted from 'String' elements.
     */

    // Read the content of the XAML file
    const xamlContent = fs.readFileSync(xamlFilePath, 'utf8');

    // Regular expression to match <String> tags and their content
    const stringRegex = /<String>(.*?)<\/String>/g;
    let match;

    const result = {};

    // Extract key-value pairs using regex
    while ((match = stringRegex.exec(xamlContent)) !== null) {
        // Assuming the content inside <String> tag is in the format "key=value"
        const keyValue = match[1].trim();
        const [key, value] = keyValue.split('=');
        if (key && value) {
            result[key.trim()] = value.trim();
        }
    }

    return result;
}

// Example usage:
const xamlFilePath = path.join(__dirname, 'example.xaml');
const dict = parseXamlToDict(xamlFilePath);
console.log(dict);
```

### Explanation:
1. **Reading the File**: The `fs.readFileSync` method reads the entire content of the XAML file synchronously.
2. **Regular Expression**: The regular expression `<String>(.*?)<\/String>` is used to find all occurrences of `<String>` tags and capture their content.
3. **Extracting Key-Value Pairs**: For each match found, the content inside the `<String>` tag is expected to be in the format `key=value`. This format is split into `key` and `value`, which are then added to the result object.
4. **Returning the Result**: The function returns an object containing the extracted key-value pairs.

Make sure you have Node.js installed to run this JavaScript code. You can install any required dependencies using npm or yarn if needed.