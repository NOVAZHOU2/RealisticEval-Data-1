Sure! Here's the TypeScript version of the Python code signature with the same comments:

```typescript
/**
 * Divide a list evenly into `n` parts and return a list of these parts. 
 * If the list length is not divisible by `n`, additional elements are added to the previous sections one by one.
 *
 * @param lst - The list to be divided.
 * @param n - The number of parts to divide the list into.
 * @returns A list containing `n` sublists, where each sublist represents a part of the original list.
 */
function divideList<T>(lst: T[], n: number): T[][] {
    // Function implementation goes here
}
```

In this TypeScript version:
- The function `divideList` takes two parameters: `lst` which is an array of type `T[]`, and `n` which is a number.
- The return type is `T[][]`, indicating that the function returns an array of arrays, where each inner array is of type `T`.
- The comment above the function describes its purpose and behavior, just like in the Python version.