Certainly! Hereâ€™s the equivalent JUnit 4 test case in Java for the given Jest test cases:

```java
package org.real.temp;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class Tester {

    @Test
    public void shouldReturnTheOriginalStringIfItIsShorterThanMaxLength() {
        String result = truncateStringWithReplacement("Hello World", 20);
        assertEquals("Hello World", result);
    }

    @Test
    public void shouldTruncateTheStringAndReplaceTheExcessWithEllipsisWhenLongerThanMaxLength() {
        String result = truncateStringWithReplacement("This is a long string that needs to be truncated.", 20);
        assertEquals("This is a long str...", result);
    }

    @Test
    public void shouldTruncateTheStringAtMaxLengthAndAddEllipsis() {
        String result = truncateStringWithReplacement("Short string", 10);
        assertEquals("Short str...", result);
    }

    @Test
    public void shouldHandleEmptyStringCorrectly() {
        String result = truncateStringWithReplacement("", 10);
        assertEquals("", result);
    }

    @Test
    public void shouldReturnTheOriginalStringWhenMaxLengthIsEqualToStringLength() {
        String result = truncateStringWithReplacement("Exact length", 12);
        assertEquals("Exact length", result);
    }

    @Test
    public void shouldReplaceExcessPartWithEllipsisInAStringWithSpecialCharacters() {
        String result = truncateStringWithReplacement("This string has special characters: !@#$%^&*()", 30);
        assertEquals("This string has special c...", result);
    }

    @Test
    public void shouldReturnEllipsisOnlyWhenTheMaxLengthIsZero() {
        String result = truncateStringWithReplacement("Hello, world!", 0);
        assertEquals("...", result);
    }

    // Method to be tested
    private String truncateStringWithReplacement(String str, int maxLength) {
        // Check if the string length is less than or equal to the specified length
        if (str.length() <= maxLength) {
            return str; // No need to truncate
        }

        // Replace the excess part with ellipsis
        return str.substring(0, maxLength) + "...";
    }
}
```

### Explanation:
1. **Package Declaration**: The package declaration is set to `org.real.temp`.
2. **Import Statements**: Import `org.junit.Test` and `static org.junit.Assert.assertEquals` for assertions.
3. **Class Definition**: The test class is named `Tester`.
4. **JUnit Test Methods**: Each test method corresponds to a Jest test case and uses `assertEquals` to verify the expected results.
5. **Method to Be Tested**: The `truncateStringWithReplacement` method is defined within the test class for convenience.

This setup ensures that the tests are structured similarly to the Jest tests and use JUnit 4 for verification.