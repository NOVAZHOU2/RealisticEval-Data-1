Sure! Here is the equivalent Java code for the given JavaScript function:

```java
public class StringTruncator {

    /**
     * Truncate a string to the specified length, replacing the excess part with an ellipsis.
     *
     * @param str The string to truncate.
     * @param maxLength The maximum length of the resulting string.
     * @return The truncated string with ellipsis if applicable.
     */
    public static String truncateStringWithReplacement(String str, int maxLength) {
        // Check if the string length is less than or equal to the specified length
        if (str.length() <= maxLength) {
            return str; // No need to truncate
        }

        // Replace the excess part with ellipsis
        return str.substring(0, maxLength) + "...";
    }

    // Example usage
    public static void main(String[] args) {
        String exampleString = "This is a very long string that needs to be truncated.";
        System.out.println(truncateStringWithReplacement(exampleString, 20));
    }
}
```

This Java code defines a method `truncateStringWithReplacement` that takes a string and a maximum length as parameters and returns the truncated string with an ellipsis if necessary. The `main` method demonstrates how to use this function.