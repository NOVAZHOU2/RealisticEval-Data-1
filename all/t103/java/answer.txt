Here's the equivalent Java code for your JavaScript function that truncates a string and adds an ellipsis if it exceeds a specified length:

```java
/**
 * Truncate a string to the specified length, replacing the excess part with an ellipsis.
 *
 * @param str - The string to truncate.
 * @param maxLength - The maximum length of the resulting string.
 * @return - The truncated string with ellipsis if applicable.
 */
public class StringTruncator {
    public static String truncateStringWithReplacement(String str, int maxLength) {
        // Check if the string length is less than or equal to the specified length
        if (str.length() <= maxLength) {
            return str; // No need to truncate
        }

        // Replace the excess part with ellipsis
        return str.substring(0, maxLength) + "...";
    }

    public static void main(String[] args) {
        String original = "This is a long string that needs to be truncated.";
        int maxLength = 20;

        String truncated = truncateStringWithReplacement(original, maxLength);
        System.out.println(truncated); // Output: This is a long str...
    }
}
```

### Explanation:
- The function `truncateStringWithReplacement` takes a `String` and an `int` as parameters.
- It checks if the string length is less than or equal to the maximum length. If so, it returns the original string.
- If truncation is needed, it uses `substring` to get the portion of the string up to `maxLength` and appends an ellipsis (`"..."`).