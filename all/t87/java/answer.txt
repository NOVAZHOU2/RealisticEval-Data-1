Sure! Here is the equivalent Java code for converting a Unix timestamp to a readable date format:

```java
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;

public class TimestampConverter {

    public static String timestampToReadableDate(long unixTimestamp) {
        Date date = new Date(unixTimestamp * 1000);
        
        SimpleDateFormat dateFormat = new SimpleDateFormat("MMM d, HH:mm", Locale.ENGLISH);
        
        return dateFormat.format(date);
    }
    
    public static void main(String[] args) {
        long unixTimestamp = 1689274800; // Example timestamp
        System.out.println(timestampToReadableDate(unixTimestamp));
    }
}
```

### Explanation:
1. **Import Statements**:
   - `java.text.SimpleDateFormat`: Used for formatting dates.
   - `java.util.Date`: Used to represent the date and time.
   - `java.util.Locale`: Used to specify the locale for the date format.

2. **Method `timestampToReadableDate`**:
   - Takes a `long` Unix timestamp as input.
   - Converts the Unix timestamp to a `Date` object by multiplying it by 1000 (since Unix timestamps are in seconds and Java's `Date` uses milliseconds).
   - Uses `SimpleDateFormat` to format the date into a string with the desired format (`"MMM d, HH:mm"`).

3. **Main Method**:
   - Demonstrates how to call the `timestampToReadableDate` method with an example Unix timestamp.

This approach simplifies the process of converting a Unix timestamp to a readable date format using Java's built-in date and time libraries.