Hereâ€™s the equivalent JavaScript code that maintains the functionality, logic, and structure of the provided Python code:

```javascript
const fs = require('fs');

function parseJsonFile(filePath) {
    /**
     * Parses a JSON file and stores its contents in an object.
     *
     * This function reads a JSON file from the specified file path, parses the JSON data, and stores
     * each key-value pair from the JSON object into an object.
     *
     * @param {string} filePath - The path to the JSON file to be parsed. The file must exist and contain valid JSON.
     * @returns {Object} - An object containing the key-value pairs parsed from the JSON file.
     *                     The function returns an empty object if the file is empty.
     */
    let resultObj = {};

    try {
        const data = fs.readFileSync(filePath, 'utf8');
        resultObj = JSON.parse(data);
    } catch (error) {
        if (error.code === 'ENOENT') {
            console.log(`File not found: ${filePath}`);
        } else if (error instanceof SyntaxError) {
            console.log(`Error decoding JSON from the file: ${filePath}`);
        }
    }

    return resultObj;
}
```

### Key Points:
- The `fs` module is used to read files synchronously.
- Error handling is performed using a `try-catch` block to catch file not found errors and JSON parse errors.
- The function returns an empty object if there are any issues with reading or parsing the JSON.