Sure, here's how you can translate your Python unittest test class into a TypeScript test case using Jest:

```typescript
import { describe, it, expect } from '@jest/globals';

// Assuming the dijkstra function is defined somewhere in your project
import { dijkstra } from './path-to-your-dijkstra-function'; // Adjust the import accordingly

describe('dijkstra', () => {
  it('should return the correct shortest paths', () => {
    const graph = {
      'A': [['B', 1], ['C', 4]],
      'B': [['A', 1], ['C', 2], ['D', 5]],
      'C': [['A', 4], ['B', 2], ['D', 1]],
      'D': [['B', 5], ['C', 1]]
    };

    const result = dijkstra(graph, 'A');

    expect(result).toEqual({
      'A': 0,
      'B': 1,
      'C': 3,
      'D': 4
    });
  });

  it('should handle graphs with negative weights', () => {
    const graph = {
      'A': [['B', -1], ['C', 4]],
      'B': [['A', -1], ['C', 2], ['D', 5]],
      'C': [['A', 4], ['B', 2], ['D', 1]],
      'D': [['B', 5], ['C', 1]]
    };

    const result = dijkstra(graph, 'A');

    expect(result).toEqual({
      'A': 0,
      'B': -1,
      'C': 3,
      'D': 4
    });
  });

  it('should handle disconnected graphs', () => {
    const graph = {
      'A': [['B', 1]],
      'B': [['A', 1]],
      'C': []
    };

    const result = dijkstra(graph, 'A');

    expect(result).toEqual({
      'A': 0,
      'B': 1,
      'C': Infinity
    });
  });
});
```

### Explanation:
1. **Imports**: We import `describe`, `it`, and `expect` from `@jest/globals`. These are Jest's testing utilities.
2. **Test Suite**: We create a `describe` block named 'dijkstra' to group related tests.
3. **Test Cases**:
   - `it('should return the correct shortest paths', ...)` tests the basic functionality of Dijkstra's algorithm.
   - `it('should handle graphs with negative weights', ...)` tests how the algorithm handles negative edge weights.
   - `it('should handle disconnected graphs', ...)` tests how the algorithm behaves when there are nodes that are not connected to the start node.
4. **Assertions**: We use `expect` to assert that the output of the `dijkstra` function matches the expected results.

Make sure to adjust the import path to where your `dijkstra` function is located.