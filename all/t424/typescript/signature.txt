Sure! Below is the equivalent TypeScript code signature for the given Python code, keeping the comments intact:

```typescript
import { MinHeap } from 'typescript-collections';

interface GraphNode {
    neighbor: string;
    weight: number;
}

interface Graph {
    [node: string]: GraphNode[];
}

interface DistanceMap {
    [node: string]: number | undefined;
}

/**
 * Implements Dijkstra's algorithm to find the shortest path from the start node to all other nodes in the graph.
 * @param graph - A dictionary representing the adjacency list of the graph. Each key is a node, and the value is a list of tuples (neighbor, weight).
 * @param start - The starting node for the shortest path search.
 * @returns A dictionary with the shortest distance from the start node to each node.
 */
function dijkstra(graph: Graph, start: string): DistanceMap {
    // Your implementation here...
}
```

### Explanation:
1. **Interfaces**:
   - `GraphNode`: Represents a neighbor and its associated weight.
   - `Graph`: Represents the entire graph where each key is a node and the value is an array of `GraphNode`.
   - `DistanceMap`: Represents a mapping of nodes to their shortest distances from the start node.

2. **Function Signature**:
   - The function `dijkstra` takes two parameters: `graph` (of type `Graph`) and `start` (of type `string`), and returns a `DistanceMap`.

3. **Comments**:
   - The docstring is kept intact to describe the purpose of the function, its arguments, and its return value.

Make sure you have the `typescript-collections` package installed if you plan to use the `MinHeap` class. You can install it using npm or yarn:

```sh
npm install typescript-collections
# or
yarn add typescript-collections
```