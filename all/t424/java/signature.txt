Here is the equivalent Java code signature for your Python function:

```java
import java.util.*;

public class Graph {
    
    /**
     * Implements Dijkstra's algorithm to find the shortest path from the start node to all other nodes in the graph.
     *
     * @param graph   A map representing the adjacency list of the graph. Each key is a node, and the value is a list of pairs (neighbor, weight).
     * @param start   The starting node for the shortest path search.
     * @return        A map with the shortest distance from the start node to each node.
     */
    public static Map<String, Integer> dijkstra(Map<String, List<Pair<String, Integer>>> graph, String start) {
        // ...
    }
}
```

In this Java version, I've used `Map` instead of `Dict`, `List` instead of `list`, and `Pair` instead of `tuple`. Note that `Pair` is a simple generic class you would need to implement or use an existing one like Apache Commons Lang's `Pair`. Also note that Java uses `null` instead of `None` for null values, and it doesn't have type hints like Python does.