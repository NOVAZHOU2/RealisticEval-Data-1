Here's how you can convert the Python code to TypeScript:

```typescript
function calculateRedProportion(pixels: [number, number, number][]): number {
    /**
     * Analyze an array of pixels, each represented by RGB, and calculate the proportion of red in the array.
     *
     * @param {Array<Array<number>>} pixels - An array of pixels, where each pixel is represented as an array of [R, G, B].
     * @returns {number} The proportion of red in the array of pixels, as a value between 0 and 1.
     */
    
    let totalPixels = pixels.length;
    let redPixels = pixels.filter(pixel => pixel[0] > 200 && pixel[1] < 50 && pixel[2] < 50).length;

    return totalPixels === 0 ? 0 : redPixels / totalPixels;
}
```

This TypeScript function `calculateRedProportion` takes an array of pixels as input, where each pixel is represented as an array of three numbers `[R, G, B]`. It calculates the proportion of pixels that are predominantly red based on the RGB values provided. Pixels with a significant amount of red (`R > 200`) and very low green and blue values (`G < 50`, `B < 50`) are considered red pixels. The function returns this proportion as a value between 0 and 1. If there are no pixels at all, it returns 0 to avoid division by zero.