Sure, here's how you can convert the Python function signature to a C++ function signature while keeping the comments intact:

```cpp
#include <vector>
#include <tuple>

/**
 * Analyze a list of pixels, each represented by RGB, and calculate the proportion of red in the list.
 *
 * @param pixels A vector of tuples representing pixels, where each pixel is a tuple of (R, G, B).
 * @return The proportion of red in the list of pixels, as a value between 0 and 1.
 */
double calculateRedProportion(const std::vector<std::tuple<int, int, int>>& pixels);
```

This C++ version uses `std::vector` to represent the list of pixels and `std::tuple<int, int, int>` to represent each pixel. The return type is `double` to match the Python function's return type of `float`.