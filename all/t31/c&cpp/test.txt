Sure! Below is an equivalent C++ unit test case using Catch2 for the `calculate_red_proportion` function. Note that I'll assume you have a similar function implemented in C++.

```cpp
#include <catch2/catch.hpp>
#include <vector>
#include <tuple>

// Assuming this function is implemented somewhere in your C++ code
float calculate_red_proportion(const std::vector<std::tuple<int, int, int>>& pixels);

TEST_CASE("Calculate Red Proportion", "[calculate_red_proportion]") {
    SECTION("Empty list") {
        std::vector<std::tuple<int, int, int>> pixels = {};
        REQUIRE(calculate_red_proportion(pixels) == 0.0f);
    }

    SECTION("All pixels are red") {
        std::vector<std::tuple<int, int, int>> pixels = {{255, 0, 0}, {255, 0, 0}, {255, 0, 0}};
        REQUIRE(calculate_red_proportion(pixels) == 1.0f);
    }

    SECTION("Half pixels are red") {
        std::vector<std::tuple<int, int, int>> pixels = {{255, 0, 0}, {0, 255, 0}, {0, 0, 255}, {255, 0, 0}};
        REQUIRE(calculate_red_proportion(pixels) == 0.5f);
    }

    SECTION("Mix of colors") {
        std::vector<std::tuple<int, int, int>> pixels = {{255, 0, 0}, {0, 255, 0}, {0, 0, 255}, {128, 0, 0}};
        REQUIRE(calculate_red_proportion(pixels) == 0.375f);
    }
}
```

### Explanation:
- **Catch2**: This is a header-only C++ testing framework.
- **TEST_CASE** and **SECTION**: These macros define test cases and sub-sections within those test cases.
- **REQUIRE**: This macro asserts that a condition must be true; if it's not, the test fails.

Make sure you have Catch2 installed and properly linked in your project to compile these tests.