Here's how you can translate your Python function into C++:

```c++
#include <vector>
#include <tuple>

double calculateRedProportion(const std::vector<std::tuple<int, int, int>>& pixels) {
    double totalPixels = pixels.size();
    double redPixels = 0;

    for(auto pixel : pixels) {
        if(std::get<0>(pixel) > std::get<1>(pixel) && std::get<0>(pixel) > std::get<2>(pixel)) {
            ++redPixels;
        }
    }

    return redPixels / totalPixels;
}
```

This function takes a vector of tuples representing RGB values as input and calculates the proportion of red pixels. It counts the number of pixels where the red component is greater than both green and blue components, indicating it is predominantly red. This count is then divided by the total number of pixels to get the proportion of red pixels.

Please note that this function assumes that all pixel values are within the range [0, 255] which is typical for RGB color space. If pixel values might be outside this range, additional checks would need to be added to handle those cases appropriately.