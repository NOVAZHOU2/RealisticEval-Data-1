Here is your Python function converted into TypeScript:

```typescript
interface AgentObservation {
  x: number;
  y: number;
}

function calculateDistance(agent1: string, agent2: string, observations: { [key: string]: AgentObservation }): number {
  const obs1 = observations[agent1];
  const obs2 = observations[agent2];

  if (!obs1 || !obs2) {
    throw new Error('One or both agents not found in observations.');
  }

  const dx = obs1.x - obs2.x;
  const dy = obs1.y - obs2.y;

  return Math.sqrt(dx * dx + dy * dy);
}
```

This TypeScript version of your Python function uses an interface `AgentObservation` to define the structure of the observation objects. The `calculateDistance` function then uses these interfaces for type checking. It also throws an error if one or both of the agents are not found in the observations.