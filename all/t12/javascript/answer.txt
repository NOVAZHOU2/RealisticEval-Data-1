Sure! Below is the equivalent JavaScript function for your Python code:

```javascript
/**
 * Calculates the Euclidean distance between two agents based on their coordinates in the observations.
 *
 * @param {string} agent1 - String representation of agent1's identifier.
 * @param {string} agent2 - String representation of agent2's identifier.
 * @param {Object} observations - Object containing observation questions with agent identifiers as keys. Each value is an object with 'x' and 'y' keys representing coordinates.
 * @returns {number} - Euclidean distance between the two agents.
 */
function calculateDistance(agent1, agent2, observations) {
    // Extract coordinates for agent1
    const agent1Coords = observations[agent1];
    if (!agent1Coords || !('x' in agent1Coords) || !('y' in agent1Coords)) {
        throw new Error(`Invalid coordinates for agent ${agent1}`);
    }

    // Extract coordinates for agent2
    const agent2Coords = observations[agent2];
    if (!agent2Coords || !('x' in agent2Coords) || !('y' in agent2Coords)) {
        throw new Error(`Invalid coordinates for agent ${agent2}`);
    }

    // Calculate the difference in x and y coordinates
    const deltaX = agent1Coords.x - agent2Coords.x;
    const deltaY = agent1Coords.y - agent2Coords.y;

    // Calculate the Euclidean distance
    return Math.sqrt(deltaX * deltaX + deltaY * deltaY);
}
```

This JavaScript function `calculateDistance` takes three parameters: `agent1`, `agent2`, and `observations`. It calculates the Euclidean distance between the two agents based on their coordinates provided in the `observations` object. If any of the required coordinates are missing or invalid, it throws an error.