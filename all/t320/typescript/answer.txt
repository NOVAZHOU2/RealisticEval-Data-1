Sure! Here is the JavaScript code converted to TypeScript:

```typescript
/**
 * Calculate the average of an array of numbers
 *
 * @param {number[]} array - An array of numbers for which the average is to be calculated.
 * @returns {number} - The average (mean) of the array's elements, or NaN if the array is empty.
 */
function getArrayAverage(array: number[]): number {
    if (array.length === 0) {
        return NaN;
    }
    
    const sum = array.reduce((acc, curr) => acc + curr, 0);
    return sum / array.length;
}
```

In this TypeScript version:
- The function parameter `array` is explicitly typed as `number[]`.
- The return type of the function is specified as `number`.
- A check is added to handle the case where the array is empty, returning `NaN`.