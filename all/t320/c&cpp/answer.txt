Here is the equivalent C++ code:

```cpp
#include <vector>
#include <numeric> // For std::accumulate

/**
 * Calculate the average of an array of numbers
 *
 * @param {std::vector<double>} array - A vector of doubles for which the average is to be calculated.
 * @return {double} - The average (mean) of the vector's elements, or NaN if the vector is empty.
 */
double getArrayAverage(const std::vector<double>& array) {
    if(array.empty())
        return NAN;
    else
        return std::accumulate(array.begin(), array.end(), 0.0) / array.size();
}
```

Please note that in C++, we use `std::vector` instead of JavaScript arrays and `std::accumulate` from `<numeric>` header to sum up the elements of the vector. Also, we use `NAN` to represent Not-a-Number values, similar to how it's done in JavaScript. 

The function signature has been changed to match C++ syntax. The `const` keyword is used to indicate that the function does not modify its argument.