Certainly! Here is the equivalent Java code for the provided Python function, including proper Javadoc comments and Java conventions:

```java
package org.real.temp;

/**
 * A utility class for converting snake_case strings to CamelCase.
 */
public class Answer {

    /**
     * Converts a snake_case string to CamelCase.
     *
     * @param snakeStr The snake_case string to convert.
     * @return The converted CamelCase string.
     */
    public static String snakeToCamel(String snakeStr) {
        // Split the snake_case string into words
        String[] words = snakeStr.split("_");
        
        // Capitalize the first letter of each word and join them
        StringBuilder camelCaseStr = new StringBuilder();
        for (String word : words) {
            if (!word.isEmpty()) {
                camelCaseStr.append(Character.toUpperCase(word.charAt(0)));
                camelCaseStr.append(word.substring(1));
            }
        }
        return camelCaseStr.toString();
    }

    // Example usage
    public static void main(String[] args) {
        String snakeStr = "example_snake_case_string";
        String camelCaseStr = snakeToCamel(snakeStr);
        System.out.println(camelCaseStr); // Output: ExampleSnakeCaseString
    }
}
```

### Explanation:
1. **Package Declaration**: 
   ```java
   package org.real.temp;
   ```

2. **Class Definition**:
   ```java
   public class Answer {
   ```

3. **Javadoc Comments**:
   ```java
   /**
    * Converts a snake_case string to CamelCase.
    *
    * @param snakeStr The snake_case string to convert.
    * @return The converted CamelCase string.
    */
   ```

4. **Method Definition**:
   ```java
   public static String snakeToCamel(String snakeStr) {
       // Split the snake_case string into words
       String[] words = snakeStr.split("_");
       
       // Capitalize the first letter of each word and join them
       StringBuilder camelCaseStr = new StringBuilder();
       for (String word : words) {
           if (!word.isEmpty()) {
               camelCaseStr.append(Character.toUpperCase(word.charAt(0)));
               camelCaseStr.append(word.substring(1));
           }
       }
       return camelCaseStr.toString();
   }
   ```

5. **Example Usage**:
   ```java
   public static void main(String[] args) {
       String snakeStr = "example_snake_case_string";
       String camelCaseStr = snakeToCamel(snakeStr);
       System.out.println(camelCaseStr); // Output: ExampleSnakeCaseString
   }
   ```

This Java code preserves the functionality of converting a snake_case string to CamelCase, adheres to Java's syntax and conventions, and includes appropriate Javadoc comments.