Sure! Below is the equivalent Java code for your Python function:

```java
package org.real.temp;

public class Answer {

    /**
     * Convert a snake_case string to CamelCase.
     *
     * @param snakeStr The snake_case string to convert.
     * @return The converted CamelCase string.
     */
    public static String snakeToCamel(String snakeStr) {
        StringBuilder camelCaseString = new StringBuilder();
        boolean nextUpperCase = false;

        for (char c : snakeStr.toCharArray()) {
            if (c == '_') {
                nextUpperCase = true;
            } else {
                if (nextUpperCase) {
                    camelCaseString.append(Character.toUpperCase(c));
                    nextUpperCase = false;
                } else {
                    camelCaseString.append(c);
                }
            }
        }

        return camelCaseString.toString();
    }

    // Example usage
    public static void main(String[] args) {
        String snakeStr = "example_string";
        String camelStr = snakeToCamel(snakeStr);
        System.out.println("Snake Case: " + snakeStr);
        System.out.println("Camel Case: " + camelStr);
    }
}
```

### Explanation:
1. **Package Declaration**: The `package` declaration is set to `org.real.temp`.
2. **Class Declaration**: The class `Answer` is declared with the same name as in the Python code.
3. **Method Declaration**: The method `snakeToCamel` is declared as `static` so it can be called without creating an instance of the class.
4. **StringBuilder**: A `StringBuilder` is used to efficiently build the resulting CamelCase string.
5. **Loop Through Characters**: The method iterates through each character of the input string.
6. **Handling Underscores**: When an underscore (`_`) is encountered, the flag `nextUpperCase` is set to `true`, indicating that the next character should be uppercase.
7. **Uppercase Conversion**: If `nextUpperCase` is `true`, the current character is converted to uppercase and appended to the `StringBuilder`. Then, `nextUpperCase` is reset to `false`.
8. **Main Method**: An example usage of the `snakeToCamel` method is provided in the `main` method.

This Java code will perform the same functionality as your Python function, converting snake_case strings to CamelCase.