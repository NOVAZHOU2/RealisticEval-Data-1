Sure! Below is the equivalent JavaScript test case using Jest for the provided Python function `snake_to_camel`.

```javascript
// Assuming the function is defined in a file named utils.js
const { snakeToCamel } = require('./utils');

describe('snakeToCamel', () => {
  it('converts snake_case strings to CamelCase', () => {
    expect(snakeToCamel('hello_world')).toBe('helloWorld');
    expect(snakeToCamel('this_is_a_test_string')).toBe('thisIsATestString');
    expect(snakeToCamel('example_string')).toBe('exampleString');
    expect(snakeToCamel('singleword')).toBe('singleword');
    expect(snakeToCamel('')).toBe('');
  });

  it('handles empty input correctly', () => {
    expect(snakeToCamel('')).toBe('');
  });

  it('handles strings with leading and trailing underscores correctly', () => {
    expect(snakeToCamel('_leading_underscore')).toBe('LeadingUnderscore');
    expect(snakeToCamel('trailing_underscore_')).toBe('TrailingUnderscore');
  });
});
```

In this example:
- We import the `snakeToCamel` function from a file named `utils.js`.
- We use Jest's `describe` block to group related tests.
- Each `it` block contains a single test case.
- We use Jest's `expect` function to assert that the output of `snakeToCamel` matches the expected result.

Make sure you have Jest installed in your project. If not, you can install it using npm:

```sh
npm install --save-dev jest
```

Then, you can run the tests using:

```sh
npx jest
```