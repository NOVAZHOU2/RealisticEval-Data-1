Certainly! Hereâ€™s the equivalent TypeScript code for the provided Python function, including appropriate JSDoc-style documentation:

```typescript
/**
 * Converts a snake_case string to CamelCase.
 * 
 * @param snakeStr - The snake_case string to convert.
 * @returns The converted CamelCase string.
 */
function snakeToCamel(snakeStr: string): string {
    // Split the snake_case string into words
    const words = snakeStr.split('_');
    // Capitalize the first letter of each word and join them
    const camelCaseStr = words.map(word => word.charAt(0).toUpperCase() + word.slice(1)).join('');
    return camelCaseStr;
}
```

### Explanation:
1. **Function Definition**: The function `snakeToCamel` takes a single parameter `snakeStr` of type `string` and returns a `string`.
2. **JSDoc Documentation**:
   - The `/** */` block is used for JSDoc-style documentation.
   - The `@param` tag is used to describe the parameter `snakeStr`.
   - The `@returns` tag is used to describe the return value.
3. **Splitting the String**: The `split('_')` method is used to split the input string into an array of words.
4. **Capitalizing Each Word**: The `map` method is used to transform each word by capitalizing its first letter. This is done using `charAt(0).toUpperCase()` to get the uppercase first character and `word.slice(1)` to get the rest of the word.
5. **Joining the Words**: The `join('')` method is used to concatenate the transformed words back into a single string without any separators.

This TypeScript function preserves the original functionality and structure of the Python code while adhering to TypeScript conventions and documentation standards.