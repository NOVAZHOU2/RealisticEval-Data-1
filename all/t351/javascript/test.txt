Here's the equivalent Jest test class, maintaining the functionality and logic of the original Python unittest code:

```javascript
const { bezier } = require('./path/to/your/bezier'); // Adjust the path as necessary

describe('TestAnswer', () => {
    test('bezier at start', () => {
        expect(bezier(0, 1, 3, 3, 1)).toBeCloseTo(1.0, 3); // Using toBeCloseTo for floating-point comparison
    });

    test('bezier at end', () => {
        expect(bezier(1, 1, 3, 3, 1)).toBeCloseTo(1.0, 3);
    });

    test('bezier at middle', () => {
        const expected = 1.0 * 0.125 + 3 * 0.375 + 3 * 0.375 + 1 * 0.125; // Calculate manually for t=0.5
        expect(bezier(0.5, 1, 3, 3, 1)).toBeCloseTo(expected, 3); // Delta of 0.001 corresponds to 3 decimal places
    });

    test('bezier with identical control points', () => {
        expect(bezier(0.5, 2, 2, 2, 2)).toBeCloseTo(2.0, 3);
    });
});
```

### Changes and Documentation:
1. **Test Framework**: Replaced `unittest` with `Jest`, which uses `describe` and `test` for organizing tests.
2. **Assertions**: Used `toBeCloseTo` for floating-point comparisons, which handles precision similarly to `assertAlmostEqual` in Python.
3. **Function Import**: Added a line to import the `bezier` function, which is necessary in JavaScript.
4. **Delta Handling**: The `delta` parameter in `assertAlmostEqual` was replaced with a precision argument in `toBeCloseTo`.

This JavaScript version preserves the original test logic while adapting to Jest's syntax and conventions.