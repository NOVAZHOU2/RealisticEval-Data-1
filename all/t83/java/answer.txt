Here's how you can convert the Python code to Java:

```java
package org.real.temp;

import java.util.Arrays;
import java.util.List;

public class Answer {

    /**
     * Rotate the elements of the list to the left by one position. The first element
     * is moved to the end of the list, and all other elements are shifted one position to the left.
     *
     * @param elements A list of integers to be rotated.
     * @return The rotated list with elements shifted to the left by one position.
     */
    public static int[] rotateListElements(int[] elements) {
        if (elements == null || elements.length <= 1) {
            return elements; // No rotation needed for empty or single-element array
        }

        int firstElement = elements[0];
        System.arraycopy(elements, 1, elements, 0, elements.length - 1);
        elements[elements.length - 1] = firstElement;

        return elements;
    }
}
```

In this Java version, we've converted the Python function into a static method in a Java class. We also used `System.arraycopy()` to shift the elements, which is more efficient than manually shifting each element. Note that Java arrays are fixed-size, so we're returning the modified original array rather than creating a new one.