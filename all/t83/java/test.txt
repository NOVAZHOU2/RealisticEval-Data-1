Sure! Below is the equivalent Java test case using JUnit for the provided Python `rotate_list_elements` function. The package name is `org.real.temp`, and the class name is `Tester`.

```java
package org.real.temp;

import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;

import java.util.Arrays;
import java.util.List;

public class Tester {

    @Test
    public void testRotateListElements() {
        // Test case 1: Empty list
        List<Integer> emptyList = Arrays.asList();
        assertEquals(Arrays.asList(), rotateListElements(emptyList));

        // Test case 2: Single element list
        List<Integer> singleElementList = Arrays.asList(42);
        assertEquals(Arrays.asList(42), rotateListElements(singleElementList));

        // Test case 3: Multiple elements list
        List<Integer> multipleElementsList = Arrays.asList(1, 2, 3, 4, 5);
        assertEquals(Arrays.asList(2, 3, 4, 5, 1), rotateListElements(multipleElementsList));
    }

    private List<Integer> rotateListElements(List<Integer> elements) {
        if (elements == null || elements.isEmpty()) {
            return elements;
        }
        
        int firstElement = elements.get(0);
        elements.remove(0);
        elements.add(firstElement);
        
        return elements;
    }
}
```

### Explanation:
1. **Package Declaration**: The package declaration at the top specifies that the class belongs to the `org.real.temp` package.
2. **Class Declaration**: The class `Tester` contains the test methods.
3. **Test Methods**:
   - `testRotateListElements`: This method contains three test cases:
     - An empty list.
     - A list with a single element.
     - A list with multiple elements.
4. **Assertions**: The `assertEquals` method from JUnit is used to verify that the output of the `rotateListElements` method matches the expected result.
5. **Private Method**: The `rotateListElements` method is defined within the same class to mimic the functionality of the Python function.

This Java code should work similarly to the provided Python unit tests.