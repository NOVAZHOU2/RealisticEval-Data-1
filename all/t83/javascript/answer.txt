Sure! Below is the equivalent JavaScript code for the provided Python code:

```javascript
function rotateListElements(elements) {
    /**
     * Rotate the elements of the array to the left by one position. The first element
     * is moved to the end of the array, and all other elements are shifted one position to the left.
     *
     * @param {number[]} elements - An array of numbers to be rotated.
     * @returns {number[]} The rotated array with elements shifted to the left by one position.
     */
    if (elements.length > 1) {
        elements = elements.slice(1).concat([elements[0]]);
    }
    return elements;
}

function rotateList(elements) {
    /**
     * Rotate the elements of the array, moving the first element to the end and shifting all others forward.
     *
     * @param {Array} elements - The array of elements to rotate.
     * @returns {Array} The array after rotation.
     */
    if (!elements.length) {
        return elements; // Return the array as is if it's empty
    }

    // Move the first element to the last and shift others forward
    const rotatedList = elements.slice(1).concat(elements[0]);

    return rotatedList;
}
```

### Explanation:
1. **Function Definitions**:
   - `rotateListElements` and `rotateList` functions are defined to perform the same operation as the Python functions.
   
2. **Parameter Handling**:
   - Both functions take an array `elements` as input.
   
3. **Empty Array Check**:
   - If the array is empty (`elements.length === 0`), the function returns the array as is.
   
4. **Rotation Logic**:
   - For non-empty arrays, the first element is moved to the end using `slice` and `concat` methods.
     - `elements.slice(1)` creates a new array containing all elements except the first one.
     - `[elements[0]]` creates an array containing only the first element.
     - `concat` combines these two arrays to achieve the desired rotation.

This JavaScript code maintains the same functionality, logic, and structure as the original Python code.