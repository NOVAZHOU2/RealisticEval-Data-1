Here's how you can convert your Python unittest test class into a Jest test case in JavaScript:

```javascript
const { describe, it, expect } = require('@jest/globals');

function rotateListElements(elements) {
  if (elements.length === 0) return [];

  const firstElement = elements.shift();
  elements.push(firstElement);

  return elements;
}

describe('rotateListElements', () => {
  it('should rotate the elements of the list to the left by one position', () => {
    const input = [1, 2, 3, 4];
    const expectedOutput = [2, 3, 4, 1];

    const output = rotateListElements(input);

    expect(output).toEqual(expectedOutput);
  });

  it('should handle an empty array correctly', () => {
    const input = [];
    const expectedOutput = [];

    const output = rotateListElements(input);

    expect(output).toEqual(expectedOutput);
  });
});
```

In this example, I used `@jest/globals` to import the necessary functions (`describe`, `it`, and `expect`) from Jest. Then, I defined the `rotateListElements` function that does the same thing as your Python function. Finally, I wrote two tests using Jest's syntax to check that the function works correctly for both non-empty and empty arrays.