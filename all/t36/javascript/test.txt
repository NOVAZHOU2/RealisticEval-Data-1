To convert your Python unittest test class into a Jest test case using JavaScript, you would first need to have the actual test cases written in Python. Since the provided code snippet does not include any test cases, I'll create some hypothetical test cases based on typical scenarios for the Floyd-Warshall algorithm.

Here's how you might write these tests in Jest:

```javascript
const { floydWarshallShortestPaths } = require('./path_to_your_module'); // Adjust the path accordingly

describe('Floyd-Warshall Shortest Paths Algorithm', () => {
  it('should correctly compute shortest paths for a simple graph', () => {
    const adjacencyMatrix = [
      [0, 3, float('inf'), 7],
      [8, 0, 2, float('inf')],
      [5, float('inf'), 0, 1],
      [2, float('inf'), float('inf'), 0]
    ];
    const expectedOutput = [
      [0, 3, 6, 7],
      [8, 0, 2, 6],
      [5, 4, 0, 1],
      [2, 5, 9, 0]
    ];

    expect(floydWarshallShortestPaths(adjacencyMatrix)).toEqual(expectedOutput);
  });

  it('should handle graphs with negative weights', () => {
    const adjacencyMatrix = [
      [0, -1, float('inf'), float('inf')],
      [float('inf'), 0, -2, float('inf')],
      [float('inf'), float('inf'), 0, float('inf')],
      [float('inf'), float('inf'), float('inf'), 0]
    ];
    const expectedOutput = [
      [0, -1, -3, -4],
      [float('inf'), 0, -2, -3],
      [float('inf'), float('inf'), 0, float('inf')],
      [float('inf'), float('inf'), float('inf'), 0]
    ];

    expect(floydWarshallShortestPaths(adjacencyMatrix)).toEqual(expectedOutput);
  });

  it('should return the same matrix for an already optimal graph', () => {
    const adjacencyMatrix = [
      [0, 2, float('inf'), 6],
      [float('inf'), 0, 3, float('inf')],
      [float('inf'), float('inf'), 0, 1],
      [float('inf'), float('inf'), float('inf'), 0]
    ];
    const expectedOutput = [
      [0, 2, float('inf'), 6],
      [float('inf'), 0, 3, float('inf')],
      [float('inf'), float('inf'), 0, 1],
      [float('inf'), float('inf'), float('inf'), 0]
    ];

    expect(floydWarshallShortestPaths(adjacencyMatrix)).toEqual(expectedOutput);
  });
});
```

In this example, we're assuming that `floydWarshallShortestPaths` function is exported from a module at `'./path_to_your_module'`. Each `it` block represents a single test case, and we're using `expect` along with `.toEqual()` to compare the output of our function against the expected result.

Note: In JavaScript, `float('inf')` is typically represented as `Infinity`. Also, make sure to install Jest if you haven't done so yet, and run the tests using `npm test` or `yarn test`, depending on your setup.