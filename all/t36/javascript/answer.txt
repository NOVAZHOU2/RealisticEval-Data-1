Here is the equivalent JavaScript code for your Python function:

```javascript
function floydWarshallShortestPaths(adjacencyMatrix) {
    let n = adjacencyMatrix.length;
    let shortestPaths = new Array(n);
    
    // Initialize the shortestPaths array with the input adjacencyMatrix values
    for(let i=0; i<n; i++) {
        shortestPaths[i] = [...adjacencyMatrix[i]];
    }

    // Iterate over each pair of vertices
    for(let k=0; k<n; k++) {
        for(let i=0; i<n; i++) {
            for(let j=0; j<n; j++) {
                // Update the shortestPath if a shorter path is found via vertex k
                if(shortestPaths[i][k] !== Infinity && shortestPaths[k][j] !== Infinity &&
                   shortestPaths[i][k] + shortestPaths[k][j] < shortestPaths[i][j]) {
                    shortestPaths[i][j] = shortestPaths[i][k] + shortestPaths[k][j];
                }
            }
        }
    }

    return shortestPaths;
}
```

In this JavaScript version, `Infinity` is used instead of `float('inf')` to represent infinite distances in the adjacency matrix. Also note that JavaScript uses zero-based indexing, so it matches the behavior of Python's list indexing.