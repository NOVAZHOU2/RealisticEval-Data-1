Sure! Here's how you can convert your JavaScript function to TypeScript:

```typescript
/**
 * Calculates the time difference between a given date and the current date.
 *
 * @param {Date | string} givenDate - The date to compare against the current date.
 * @returns {Object} - An object containing days, hours, and minutes elapsed.
 * {
 *     days: number,
 *     hours: number,
 *     minutes: number,
 * }
 */
function calculateTimeDifference(givenDate: Date | string): { days: number; hours: number; minutes: number } {
    // Convert the given date to a Date object if it is not already one
    const date = new Date(givenDate);
    
    // Get the current date and time
    const now = new Date();
    
    // Calculate the time difference in milliseconds
    const diffInMilliseconds = now.getTime() - date.getTime();
    
    // Convert milliseconds to seconds
    const diffInSeconds = diffInMilliseconds / 1000;
    
    // Calculate days, hours, and minutes
    const days = Math.floor(diffInSeconds / (3600 * 24));
    const remainingSeconds = diffInSeconds % (3600 * 24);
    const hours = Math.floor(remainingSeconds / 3600);
    const remainingMinutes = Math.floor((remainingSeconds % 3600) / 60);

    return {
        days: days,
        hours: hours,
        minutes: remainingMinutes,
    };
}
```

This TypeScript version of the function includes type annotations for the input parameter and the return value, ensuring that the function behaves correctly with the specified data types.