```cpp
/**
 * Calculates the time difference between a given date and the current date.
 *
 * @param {Date | string} givenDate - The date to compare against the current date.
 * @returns {std::map<std::string, int>} - A map containing days, hours, and minutes elapsed.
 * {
 *         "days": days,
 *         "hours": remainingHours,
 *         "minutes": remainingMinutes,
 * }
 */
#include <map>
#include <chrono>
#include <ctime>

std::map<std::string, int> calculateTimeDifference(const std::string& givenDate) {
    // Convert givenDate string to time_t
    std::tm tm = {};
    strptime(givenDate.c_str(), "%Y-%m-%d %H:%M:%S", &tm);
    auto givenDateTime = std::mktime(&tm);

    // Get current time
    auto now = std::chrono::system_clock::now();
    auto nowTimeT = std::chrono::system_clock::to_time_t(now);
    
    // Calculate the difference in seconds
    double diff_seconds = difftime(nowTimeT, givenDateTime);

    // Convert seconds to days, hours, and minutes
    int days = static_cast<int>(diff_seconds / (24 * 3600));
    int remainingSeconds = static_cast<int>(diff_seconds) % (24 * 3600);
    int hours = remainingSeconds / 3600;
    int remainingMinutes = remainingSeconds % 3600;

    // Store results in a map
    std::map<std::string, int> result = {
        {"days", days},
        {"hours", hours},
        {"minutes", remainingMinutes}
    };

    return result;
}
```
Note: This C++ code assumes that the input date is in the format "YYYY-MM-DD HH:MM:SS". If your input date format differs, you will need to adjust the `strptime` call accordingly. Also, please ensure that any necessary error checking or validation for the input date is included in your actual implementation.