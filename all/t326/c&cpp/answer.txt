Here is your JavaScript function translated into C++:

```cpp
#include <iostream>
#include <ctime>

struct TimeDiff {
    int days;
    int hours;
    int minutes;
};

TimeDiff calculateTimeDifference(std::string givenDate) {
    std::time_t now = std::time(nullptr);
    std::tm* localNow = std::localtime(&now);

    std::tm givenTm;
    strptime(givenDate.c_str(), "%Y-%m-%d %H:%M", &givenTm);

    if (difftime(mktime(localNow), mktime(&givenTm)) < 0) {
        throw std::invalid_argument("Given date must be in the future");
    }

    double diffSeconds = difftime(mktime(localNow), mktime(&givenTm));
    int days = static_cast<int>(diffSeconds / (24 * 3600));
    int hours = static_cast<int>((diffSeconds - (days * 24 * 3600)) / 3600);
    int minutes = static_cast<int>((diffSeconds - (days * 24 * 3600) - (hours * 3600)) / 60);

    return {days, hours, minutes};
}

int main() {
    try {
        auto diff = calculateTimeDifference("2024-12-31 23:59");
        std::cout << "Days: " << diff.days << ", Hours: " << diff.hours << ", Minutes: " << diff.minutes << std::endl;
    } catch (const std::exception& e) {
        std::cerr << "Error: " << e.what() << std::endl;
    }
    return 0;
}
```

Please note that this C++ version assumes that the input `givenDate` string is in the format "YYYY-MM-DD HH:MM". If you want to support different formats or handle errors differently, you may need to modify the `strptime` call accordingly. Also, make sure to link with the C++ Standard Library when compiling this code.