Certainly! Below is an equivalent C++ test case using Catch2 for the `calculateTimeDifference` function. Note that I'll assume you have a function signature similar to the JavaScript one in your C++ code.

First, let's define the `calculateTimeDifference` function in C++. For simplicity, we'll use `std::chrono` to handle dates and times.

```cpp
#include <iostream>
#include <chrono>
#include <ctime>

struct TimeDifference {
    int days;
    int hours;
    int minutes;
};

TimeDifference calculateTimeDifference(const std::string& givenDateString) {
    // Parse the given date string into a time_t object
    std::tm tm = {};
    strptime(givenDateString.c_str(), "%Y-%m-%d %H:%M:%S", &tm);
    std::time_t givenDate = mktime(&tm);

    // Get the current date and time
    auto now = std::chrono::system_clock::now();
    std::time_t currentDate = std::chrono::system_clock::to_time_t(now);

    // Calculate the difference in seconds
    std::time_t diffSeconds = difftime(currentDate, givenDate);

    // Convert seconds to days, hours, and minutes
    int days = static_cast<int>(diffSeconds / (60 * 60 * 24));
    int remainingSeconds = static_cast<int>(diffSeconds % (60 * 60 * 24));
    int hours = remainingSeconds / (60 * 60);
    int remainingMinutes = (remainingSeconds % (60 * 60)) / 60;

    return {days, hours, remainingMinutes};
}
```

Next, let's write the Catch2 test cases:

```cpp
#define CATCH_CONFIG_MAIN
#include "catch.hpp"

TEST_CASE("Calculate time difference", "[time_difference]") {
    SECTION("Given date is before current date") {
        TimeDifference result = calculateTimeDifference("2023-10-01 12:00:00");
        REQUIRE(result.days > 0);
        REQUIRE(result.hours >= 0);
        REQUIRE(result.minutes >= 0);
    }

    SECTION("Given date is the same day but later") {
        TimeDifference result = calculateTimeDifference("2023-10-05 18:00:00");
        REQUIRE(result.days == 0);
        REQUIRE(result.hours > 0);
        REQUIRE(result.minutes >= 0);
    }

    SECTION("Given date is the same day but earlier") {
        TimeDifference result = calculateTimeDifference("2023-10-05 10:00:00");
        REQUIRE(result.days == 0);
        REQUIRE(result.hours >= 0);
        REQUIRE(result.minutes >= 0);
    }

    SECTION("Given date is in the past") {
        TimeDifference result = calculateTimeDifference("2020-01-01 00:00:00");
        REQUIRE(result.days > 0);
        REQUIRE(result.hours >= 0);
        REQUIRE(result.minutes >= 0);
    }
}
```

### Explanation:
1. **Function Definition**: The `calculateTimeDifference` function takes a date string in the format `"YYYY-MM-DD HH:MM:SS"`, parses it into a `std::time_t` object, and then calculates the difference from the current date.
2. **Catch2 Test Cases**:
   - **Given date is before current date**: Checks if the function returns positive values for days, hours, and minutes.
   - **Given date is the same day but later**: Ensures the function correctly handles the case where the given date is the same day but later than the current time.
   - **Given date is the same day but earlier**: Ensures the function correctly handles the case where the given date is the same day but earlier than the current time.
   - **Given date is in the past**: Verifies that the function correctly calculates the time difference even if the given date is in the past.

Make sure you have Catch2 installed and properly configured in your project to run these tests.