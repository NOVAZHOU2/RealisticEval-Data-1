Sure! Here is the equivalent Python unit test case using the `unittest` framework for the provided JavaScript function:

```python
import json
import unittest

def save_as_json(data, output_file_path):
    with open(output_file_path, 'w') as file:
        json.dump(data, file)

class TestSaveAsJson(unittest.TestCase):

    def test_save_as_json(self):
        # Define test data
        test_data = {
            "name": "John",
            "age": 30,
            "city": "New York"
        }
        
        # Define the output file path
        output_file_path = 'test_output.json'
        
        # Call the function to save the data as JSON
        save_as_json(test_data, output_file_path)
        
        # Read the content of the output file
        with open(output_file_path, 'r') as file:
            saved_data = json.load(file)
        
        # Check if the saved data matches the original data
        self.assertEqual(saved_data, test_data)
        
        # Clean up the output file
        import os
        os.remove(output_file_path)

if __name__ == '__main__':
    unittest.main()
```

### Explanation:
1. **Function Definition**: The `save_as_json` function takes a dictionary (`data`) and a file path (`output_file_path`). It writes the dictionary to a JSON file at the specified path.

2. **Test Case Class**: A test class `TestSaveAsJson` is defined, inheriting from `unittest.TestCase`.

3. **Test Method**: The `test_save_as_json` method contains the actual test logic:
   - Defines test data.
   - Specifies the output file path.
   - Calls the `save_as_json` function to save the test data.
   - Reads the saved JSON file back into memory.
   - Uses `self.assertEqual` to check if the saved data matches the original data.
   - Cleans up the output file after the test completes.

4. **Running the Tests**: The script can be run directly, which will execute the tests and provide feedback on whether they passed or failed.

This should give you a good starting point for testing your Python functions using the `unittest` framework.