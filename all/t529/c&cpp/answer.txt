Here is how you can translate your JavaScript function into C++ using the standard library:

```cpp
#include <fstream>
#include <nlohmann/json.hpp>

using json = nlohmann::json;

/**
 * Converts the data object to JSON format and saves it to the specified file path.
 * @param {json} data - The data object to be converted to JSON.
 * @param {std::string} outputFilePath - The file path where the JSON will be saved.
 */
void saveAsJSON(const json& data, const std::string& outputFilePath) {
    std::ofstream o(outputFilePath);
    o << std::setw(4) << data;
}
```

In this C++ version, we use `nlohmann/json.hpp` which is a popular C++ library for parsing JSON. It provides a class `json` that can represent JSON data in memory.

Please make sure to include `nlohmann/json.hpp` in your project or install it via package manager like vcpkg or conan if not already available.

Also note that unlike JavaScript's `require`, C++ doesn't have an equivalent of Node.js modules system. If you're working on a larger project with multiple files, you may need to organize your code differently or find another way to manage dependencies.