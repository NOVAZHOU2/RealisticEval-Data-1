Here's how you can convert the JavaScript function signature to a C++ function signature:

```cpp
#include <fstream>
#include <nlohmann/json.hpp>

using json = nlohmann::json;

/**
 * Converts the data object to JSON format and saves it to the specified file path.
 * @param data - The data object to be converted to JSON.
 * @param outputFilePath - The file path where the JSON will be saved.
 */
void saveAsJSON(const json& data, const std::string& outputFilePath) {
    // Implementation of the function goes here
}
```

In this C++ version:
- We include `<fstream>` for file handling and `<nlohmann/json.hpp>` for JSON manipulation.
- We use `const json&` instead of `{Object}` to indicate that we're passing a constant reference to a JSON object.
- We use `const std::string&` instead of `{string}` to indicate that we're passing a constant reference to a string (file path).
- The function is declared with `void` return type since it doesn't return any value.

Please note that the actual implementation of the function body (`// Implementation of the function goes here`) would depend on your specific requirements, such as error handling and writing the JSON content to the file.