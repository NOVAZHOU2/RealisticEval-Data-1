Sure! Here is the TypeScript version of your JavaScript code:

```typescript
import * as fs from 'fs';

/**
 * Converts the data object to JSON format and saves it to the specified file path.
 * @param {object} data - The data object to be converted to JSON.
 * @param {string} outputFilePath - The file path where the JSON will be saved.
 */
function saveAsJSON(data: object, outputFilePath: string): void {
    const jsonData = JSON.stringify(data, null, 2);
    fs.writeFile(outputFilePath, jsonData, (err) => {
        if (err) {
            console.error(`Error writing to file ${outputFilePath}:`, err);
        } else {
            console.log(`Data successfully written to ${outputFilePath}`);
        }
    });
}
```

In this TypeScript version:
- I imported the `fs` module using ES6 import syntax.
- Added type annotations for the parameters `data` and `outputFilePath`.
- Added a return type annotation for the function `saveAsJSON` as `void` since it doesn't return any value.
- Used `JSON.stringify` with an indentation of 2 spaces for better readability of the JSON output.
- Added error handling for the `fs.writeFile` method to log any errors that occur during the file write operation.