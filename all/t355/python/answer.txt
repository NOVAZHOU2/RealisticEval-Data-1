Here's the equivalent Python code for the provided C++ function that calculates the spatial weight based on the difference in spatial coordinates and a space standard deviation:
python
import math  # Include math for the exp function

def spatial_weight(spatial_diff: float, sigma_space: float) -> float:
    """
    Calculates the spatial weight based on the difference in spatial coordinates and a space standard deviation.

    The spatial weight is calculated using the formula:
    weight = exp(- (spatial_diff^2) / (2 * sigma_space^2))

    :param spatial_diff: The difference in spatial coordinates, which is used to compute the weight.
    :param sigma_space: The standard deviation for spatial distance, affecting the spread of the weight.
    :return: The spatial weight as a float.
    :raises ValueError: If sigma_space is less than or equal to zero.
    """
    
    # Validate that sigma_space is greater than zero to avoid division by zero
    if sigma_space <= 0.0:
        raise ValueError("sigma_space must be greater than zero.")

    # Calculate the squared spatial difference
    squared_diff = spatial_diff ** 2

    # Calculate the denominator using sigma_space squared
    denominator = 2 * (sigma_space ** 2)

    # Calculate and return the spatial weight
    return math.exp(-squared_diff / denominator)
Explanation:
Imports: The math module is imported to use the exponential function (exp).
Function Definition: The function is named spatial_weight, following Python's naming conventions (snake_case). It takes two parameters, spatial_diff and sigma_space, both of which are annotated with their expected types (float).
Docstring: The docstring explains the function's purpose, its parameters, and its return value. It also specifies that a ValueError will be raised if sigma_space is less than or equal to zero.
Validation: The function checks if sigma_space is greater than zero. If not, it raises a ValueError, which is the Python equivalent of throwing an exception in C++.
Calculations:
The squared difference is calculated using spatial_diff ** 2.
The denominator is computed using 2 * (sigma_space ** 2).
The spatial weight is then calculated and returned using math.exp().
This Python function preserves the logic and functionality of the original C++ code while adhering to Python conventions and practices.