Hereâ€™s the TypeScript equivalent of the provided C++ function signature, including the adapted comments:

```typescript
/**
 * @brief Calculates the spatial weight based on the difference in spatial coordinates and a space standard deviation.
 *
 * The spatial weight is calculated using the formula:
 * weight = exp(- (spatial_diff^2) / (2 * sigma_space^2))
 *
 * @param spatial_diff The difference in spatial coordinates, which is used to compute the weight.
 * @param sigma_space The standard deviation for spatial distance, affecting the spread of the weight.
 * @returns The spatial weight as a number.
 */
function spatialWeight(spatial_diff: number, sigma_space: number): number {
    // Implementation goes here
}
```

### Key Adaptations:
1. **Function Declaration**: The C++ `inline` keyword is omitted as it's not applicable in TypeScript.
2. **Type Annotations**: C++ `float` is converted to TypeScript `number`.
3. **Return Type**: The return type is specified as `: number` in TypeScript.
4. **Comment Style**: C++ comments are converted to TypeScript-style comments while retaining their original content. 

This preserves the original structure and functionality in a TypeScript context.