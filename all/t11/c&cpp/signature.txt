Hereâ€™s the equivalent C++ code signature with comments converted to C++ style documentation:

```cpp
/**
 * @brief Implement a dictionary tree for fast string retrieval and storage
 */
class Trie {
public:
    void insert(const std::string& word);
    bool search(const std::string& word);
    bool starts_with(const std::string& prefix);
};

/**
 * @brief Represents a node in the Trie
 */
class TrieNode {
public:
    TrieNode();

private:
    std::unordered_map<char, TrieNode*> children;
};
```

### Notes:
- The method signatures are adjusted to C++ conventions.
- The constructor for `TrieNode` is declared without parameters.
- The `children` map uses `unordered_map` from the C++ Standard Library for efficient lookups.