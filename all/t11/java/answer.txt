Here's the equivalent Java code for your provided Python `Trie` and `TrieNode` classes, organized in the specified package and class:

```java
package org.real.temp;

import java.util.HashMap;
import java.util.Map;

class TrieNode {
    Map<Character, TrieNode> children;

    public TrieNode() {
        children = new HashMap<>();
    }
}

public class Answer {
    private TrieNode root;

    public Answer() {
        root = new TrieNode();
    }

    public void insert(String word) {
        TrieNode node = root;
        for (char ch : word.toCharArray()) {
            node.children.putIfAbsent(ch, new TrieNode());
            node = node.children.get(ch);
        }
    }

    public boolean search(String word) {
        TrieNode node = root;
        for (char ch : word.toCharArray()) {
            node = node.children.get(ch);
            if (node == null) return false;
        }
        return true;
    }

    public boolean startsWith(String prefix) {
        TrieNode node = root;
        for (char ch : prefix.toCharArray()) {
            node = node.children.get(ch);
            if (node == null) return false;
        }
        return true;
    }
}
```

This Java implementation mirrors the functionality of your Python code. Let me know if you need further details!