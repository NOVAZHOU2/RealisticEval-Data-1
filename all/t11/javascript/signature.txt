Certainly! Below is the equivalent JavaScript code with the function/class signatures and comments rewritten to conform to JSDoc format:

```javascript
/**
 * Implements a dictionary tree (Trie) for fast string retrieval and storage.
 */
class Trie {
    /**
     * Inserts a word into the trie.
     * @param {string} word - The word to insert.
     */
    insert(word) {
        // Implementation goes here
    }

    /**
     * Searches for a word in the trie.
     * @param {string} word - The word to search for.
     * @returns {boolean} - Returns true if the word is found, false otherwise.
     */
    search(word) {
        // Implementation goes here
    }

    /**
     * Checks if there is any word in the trie that starts with the given prefix.
     * @param {string} prefix - The prefix to check.
     * @returns {boolean} - Returns true if there is any word with the prefix, false otherwise.
     */
    startsWith(prefix) {
        // Implementation goes here
    }
}

/**
 * Represents a node in the Trie.
 */
class TrieNode {
    /**
     * Constructs a new TrieNode.
     */
    constructor() {
        this.children = {};
    }
}
```

In this JavaScript code:
- The class `Trie` and `TrieNode` are defined with their respective methods.
- JSDoc comments are used to document the purpose and parameters of each method.
- The `insert`, `search`, and `startsWith` methods in the `Trie` class are documented with their intended functionality and parameter descriptions.
- The `TrieNode` class is documented with a brief description of its purpose.

This ensures that the structure and purpose of the code are preserved while adhering to JavaScript documentation standards.