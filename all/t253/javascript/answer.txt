Sure! Here is the equivalent JavaScript code that maintains the same functionality, logic, and structure as the provided Python code:

```javascript
const json = require('json');

function log(item) {
    /**
     * Logs an item by printing it. Handles strings, numbers, arrays, and objects by printing
     * them directly or as a JSON-formatted string. Other types are reported as errors.
     *
     * @param {*} item - The item to be logged. Can be of any type.
     */
    // Handling for strings, numbers
    if (typeof item === 'string' || typeof item === 'number') {
        console.log(item);
    }
    // Handling for objects and arrays to convert to JSON string
    else if (Array.isArray(item) || typeof item === 'object' && item !== null) {
        try {
            console.log(JSON.stringify(item, null, 4));  // Pretty print JSON for better readability
        } catch (e) {
            console.log(`Error: Failed to serialize item to JSON. ${e.message}`);
        }
    } else {
        // Print an informative error message for unsupported types
        console.log(`Error: Unsupported type ${typeof item} for logging.`);
    }
}

// Example usage
log("Hello, world!");
log(123);
log(3.14);
log({ key: "value" });
log([1, 2, 3]);
log(null);  // This will trigger the error message
```

### Explanation:
1. **Logging Strings and Numbers:**
   - In JavaScript, we use `typeof` to check the type of the item. If it's a string or number, we simply log it using `console.log`.

2. **Handling Arrays and Objects:**
   - We use `Array.isArray` to check if the item is an array and `typeof item === 'object' && item !== null` to check if it's an object.
   - We use `JSON.stringify` with indentation (`null, 4`) to pretty-print the JSON for better readability.
   - If there is an error during serialization, we catch it and log an error message.

3. **Unsupported Types:**
   - For any other unsupported types, we log an error message indicating the type of the item.

This JavaScript code should behave similarly to the original Python code.