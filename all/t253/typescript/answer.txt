Here's the equivalent TypeScript function for your Python code:

```typescript
interface Loggable {
  toString(): string;
}

function log<T extends Loggable>(item: T): T {
  try {
    console.log(item.toString());
  } catch (error) {
    console.error(`Error logging item: ${error}`);
  }
  return item;
}
```

In this TypeScript version, we define a `Loggable` interface that includes a `toString()` method. This ensures that our `log` function can handle various types of objects that have a meaningful string representation. If the object does not implement `toString()`, an error will be caught and logged.