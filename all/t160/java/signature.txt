Here's the Java method signature with comments converted from the provided TypeScript code:

```java
/**
 * Compresses long filenames to the specified maximum length by inserting an ellipsis in the middle while preserving the filename extension, which defaults to 18 characters.
 * For example:
 *      compressFileName("verylongfilename.txt", 10) output: "verylongfi***.txt"
 *
 * @param fileName - The original file name to be compressed.
 * @param maxLength - The maximum allowed length for the compressed file name. Defaults to 18.
 * @return The compressed file name, with the middle section replaced by ellipses ('...'), or the original file name if it is within the maximum length.
 */
public static String compressFileName(String fileName, int maxLength) {
    // Default maxLength to 18 if not provided
    if (maxLength <= 0) {
        maxLength = 18;
    }
    // Implementation goes here
}
```

### Notes:
1. **Default Parameter**: Java doesn't support default parameters like TypeScript, so we check the `maxLength` and set it within the method.
2. **Comments**: The comments are retained and adjusted for Java's syntax.