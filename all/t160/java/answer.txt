Hereâ€™s the equivalent Java code for the provided TypeScript function:

```java
/**
 * Compresses the filename before the extension, truncating it to a maximum length,
 * and replacing the excess with '***' if it exceeds the specified maximum length.
 *
 * @param filename - The full filename with or without an extension.
 * @param maxLength - The maximum allowed length of the filename before the extension.
 * @return The compressed filename with its extension preserved.
 */
public class FilenameCompressor {
    public static String compressFilename(String filename, int maxLength) {
        // Extract the file extension
        String extension = "";
        int lastDotIndex = filename.lastIndexOf('.');
        if (lastDotIndex != -1 && lastDotIndex < filename.length() - 1) {
            extension = filename.substring(lastDotIndex);
        }

        // Remove the extension from the filename for manipulation
        String basename = lastDotIndex != -1 ? filename.substring(0, lastDotIndex) : filename;

        // Compress the basename if it's longer than maxLength
        String compressedBasename;
        if (basename.length() > maxLength) {
            compressedBasename = basename.substring(0, maxLength - 3) + "***";
        } else {
            compressedBasename = basename;
        }

        // Reattach the extension and return
        return compressedBasename + extension;
    }

    public static void main(String[] args) {
        // Example usage
        String filename = "very_long_filename_that_exceeds_limit.txt";
        int maxLength = 20;
        String compressed = compressFilename(filename, maxLength);
        System.out.println(compressed); // Output: "very_long_fi***.txt"
    }
}
```

### Explanation:
1. **String Manipulation**: Similar to TypeScript, we use `lastIndexOf` to find the last dot for the extension.
2. **Substrings**: We manipulate the string using `substring` to separate the base name and extension.
3. **Length Check**: The condition checks if the basename exceeds the `maxLength` and truncates it accordingly.
4. **Main Method**: An example usage is included to demonstrate how to call the `compressFilename` method.