Here's how you can convert the TypeScript Jest test cases to C++ test cases using the Catch2 framework:

```cpp
#define CATCH_CONFIG_MAIN
#include <catch2/catch.hpp>
#include "your_header_file.h" // Include the header where compressFileName is declared

TEST_CASE("compressFileName") {
    SECTION("should return the filename unchanged if under max length") {
        REQUIRE(compressFileName("file.txt", 10) == "file.txt");
    }

    SECTION("should truncate and append *** if filename exceeds max length") {
        REQUIRE(compressFileName("verylongfilename.txt", 10) == "verylongfi***.txt");
    }

    SECTION("should preserve file extension after compression") {
        REQUIRE(compressFileName("document.pdf", 5) == "docum***.pdf");
    }

    SECTION("should truncate and append *** if filename exceeds") {
        REQUIRE(compressFileName("short.mp3", 2) == "sh***.mp3");
    }
}
```

### Explanation:
- **Catch2 Setup:** Ensure you have included the Catch2 header (`#include <catch2/catch.hpp>`).
- **TEST_CASE and SECTION:** Each test case is wrapped in a `TEST_CASE` macro, with each specific test scenario in a `SECTION`.
- **REQUIRE:** Used to assert that the expected output matches the actual output of `compressFileName`.

Make sure to replace `"your_header_file.h"` with the actual name of the header file where your `compressFileName` function is declared. You can compile and run these tests using Catch2's main configuration.