Sure, here is the equivalent C++ code for the given Python function:

```cpp
#include <string>
#include <map>

// Converts the question in RDF JSON-LD format to NGSI-LD format
// Parameters:
//      rdf_jsonld: A string containing the RDF JSON-LD formatted question.
//
// Returns:
//      A map representing data formatted according to NGSI-LD specifications.
std::map<std::string, std::string> rdf_jsonld_to_ngsild(const std::string& rdf_jsonld) {
    // Implementation goes here
}
```

In this C++ version:
- The `from typing import Dict` is translated to including `<map>` and `<string>` headers.
- The function `rdf_jsonld_to_ngsild` is defined with a `const std::string&` parameter for the input `rdf_jsonld`.
- The return type is `std::map<std::string, std::string>` which corresponds to `Dict[str, str]` in Python.
- The docstring is converted into C++ style comments, explaining the purpose of the function, parameters, and return value.