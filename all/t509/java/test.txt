To convert the provided Python `unittest` test class to a Java JUnit test case, we need to follow these steps:

1. Create a new Java class named `Tester`.
2. Annotate the class with `@RunWith(JUnit4.class)` if you're using JUnit 4, or `@ExtendWith(MockitoExtension.class)` if you're using Mockito for mocking.
3. Write methods in the Java class that correspond to each test method in your Python code.
4. Use assertions from the JUnit library to validate the results.

Here's an example of how you might translate the given Python unittest test class into a Java JUnit test case:

```java
import static org.junit.Assert.assertEquals;
import org.junit.Test;

public class Tester {

    @Test
    public void testModExp() {
        // Arrange
        int base = 2;
        int exponent = 5;
        int modulus = 13;
        int expected = 6;

        // Act
        int actual = modExp(base, exponent, modulus);

        // Assert
        assertEquals(expected, actual);
    }

    private int modExp(int base, int exponent, int modulus) {
        /*
         * Perform modular exponentiation: (base^exponent) % modulus efficiently.
         *
         * Args:
         *     base (int): The base value.
         *     exponent (int): The exponent value (should be non-negative).
         *     modulus (int): The modulus value (should be positive).
         *
         * Returns:
         *     int: The result of (base^exponent) % modulus.
         */
        long result = 1;
        base = base % modulus; // Update base if it is more than or equal to modulus

        while (exponent > 0) {
            // If exponent is odd, multiply base with result
            if ((exponent & 1) == 1)
                result = (result * base) % modulus;

            // exponent must be even now
            exponent = exponent >> 1; // exponent = exponent / 2
            base = (base * base) % modulus;
        }
        return (int) result;
    }
}
```

In this Java version, we have created a single test method `testModExp()` that corresponds to the original Python test method. The `modExp()` method is implemented in the same way as the Python function, but adapted for Java syntax and conventions. The `assertEquals()` method from JUnit is used to assert that the output of `modExp()` matches the expected result.