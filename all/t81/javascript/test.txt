Here's how you can convert your Python unittest test case to Jest in JavaScript:

```javascript
const findClosestElement = require('./findClosestElement'); // Assuming your function is exported from a file named 'findClosestElement.js'

describe('findClosestElement', () => {
  it('should return the closest integer', () => {
    expect(findClosestElement(5, [1, 2, 3, 4, 6])).toBe(4);
  });

  it('should return the closest floating point number', () => {
    expect(findClosestElement(5.5, [1.1, 2.2, 3.3, 4.4, 6.6])).toBe(4.4);
  });
});
```

In this example, I'm assuming that `findClosestElement` is exported from a file named `findClosestElement.js`. If it's located elsewhere, you'll need to adjust the import path accordingly. 

Also, please note that Jest uses `.toBe()` method for strict equality checks. If you're looking for approximate equality (like Python's `assertAlmostEqual`), you might want to use `.toBeCloseTo()`. For example:

```javascript
it('should return the closest floating point number', () => {
  expect(findClosestElement(5.5, [1.1, 2.2, 3.3, 4.4, 6.6])).toBeCloseTo(4.4, 1); // The second argument is the number of decimal places to check
});
```