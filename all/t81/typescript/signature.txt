Here's the equivalent TypeScript code with the same comments:

```typescript
/**
 * Finds and returns the element from the given array that is closest to the specified target value.
 *
 * @param target - The target number to which we want to find the closest element.
 * @param elements - An array of numerical elements from which the closest element is to be found.
 * @returns The element from the array that is closest to the target value.
 */
function findClosestElement(target: number | string, elements: Array<number | string>): number | string {
    // Your implementation goes here
}
```

Note that in TypeScript, `number` can represent both integers and floating-point numbers, so I used `number | string` for both the `target` and `elements` parameters to match the Python `Union[int, float]`. If you specifically need to distinguish between integers and floats, you could use separate parameter types or add type assertions within the function.