Here's how you can translate the Python function signature into Java:

```java
import java.util.List;

/**
 * Finds and returns the element from the given list that is closest to the specified target value.
 *
 * @param target the target number to which we want to find the closest element.
 * @param elements a list of numerical elements from which the closest element is to be found.
 * @return the element from the list that is closest to the target value.
 */
public static Number findClosestElement(Number target, List<Number> elements) {
    // Method implementation goes here
}
```

Note that in Java, there isn't a direct equivalent to Python's `Union` type hinting system. Instead, I've used `Number` as a superclass for both `Integer` and `Double`. If you need more specific types within your method implementation, you'll have to handle casting or use generics appropriately.