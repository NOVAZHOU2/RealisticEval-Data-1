Here's the equivalent C++ test case using Catch2, structured similarly to your Jest test cases:

```cpp
#define CATCH_CONFIG_MAIN
#include <catch2/catch.hpp>
#include <string>

// Assume the getFileIdFromUrl function is declared here or included from another file

TEST_CASE("getFileIdFromUrl", "[getFileIdFromUrl]") {
    SECTION("should return the file ID when a valid URL with fileId is provided") {
        std::string url = "https://example.com/download?fileId=12345";
        REQUIRE(getFileIdFromUrl(url) == "12345");
    }

    SECTION("should return empty string when the fileId query parameter is missing") {
        std::string url = "https://example.com/download";
        REQUIRE(getFileIdFromUrl(url) == "");
    }

    SECTION("should return empty string when the fileId query parameter is empty") {
        std::string url = "https://example.com/download?fileId=";
        REQUIRE(getFileIdFromUrl(url) == "");
    }

    SECTION("should return the file ID for a malformed URL") {
        std::string url = "https://example.com/download?fileId=12345&otherParam";
        REQUIRE(getFileIdFromUrl(url) == "12345"); // Adjust this depending on your needs; the function should still work correctly.
    }
}
```

### Explanation:
- **CATCH_CONFIG_MAIN**: This macro defines the main function for the Catch2 test framework.
- **TEST_CASE**: Defines a test case group named "getFileIdFromUrl".
- **SECTION**: Allows you to define individual test cases within the test case group.
- **REQUIRE**: A macro that checks if the given condition is true. If not, it will stop the test and report the failure.