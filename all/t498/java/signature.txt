Here is how you can convert the Python code signature to Java:

```java
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

/**
 * Computes and returns the MD5 hash of the input string.
 *
 * @param inputString The string to be hashed
 * @return The MD5 hash of the input string in hexadecimal format
 */
public static String computeMD5(String inputString) {
    try {
        MessageDigest md = MessageDigest.getInstance("MD5");
        byte[] messageDigest = md.digest(inputString.getBytes());
        BigInteger no = new BigInteger(1, messageDigest);
        String hashtext = no.toString(16);
        // Add leading zeros if necessary
        while (hashtext.length() < 32) {
            hashtext = "0" + hashtext;
        }
        return hashtext;
    } catch (NoSuchAlgorithmException e) {
        throw new RuntimeException(e);
    }
}
```

Please note that Java's `MessageDigest` class does not provide a direct method for converting the digest into a hexadecimal string. Instead, we use a `BigInteger` object to achieve this. Also, Java's exception handling mechanism differs from Python's, so exceptions are thrown instead of being returned.