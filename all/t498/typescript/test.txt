Here is how you can convert your Python unittest test class to a TypeScript test case using Jest:

```typescript
import { expect } from '@jest/globals';
import { computeMd5 } from './path-to-your-file'; // Replace with actual path

describe('computeMD5', () => {
  it('should return correct md5 hash for given string', () => {
    const result = computeMd5('test');
    expect(result).toBe('098f6bcd4621d373cade4e832627b4f6'); // Expected MD5 hash for 'test'
  });

  it('should handle empty string correctly', () => {
    const result = computeMd5('');
    expect(result).toBe('d41d8cd98f00b204e9800998ecf8427e'); // Expected MD5 hash for empty string
  });
});
```

Please replace `'./path-to-your-file'` with the actual path to the file where `computeMd5` function is defined. Also, please note that JavaScript/TypeScript does not have a built-in function to calculate MD5 hash like Python does. You would need to install a package such as `crypto-js` or `md5` to perform MD5 hashing in JavaScript/TypeScript. Here's an example using `crypto-js`:

```typescript
import CryptoJS from 'crypto-js';

export function computeMd5(inputString: string): string {
  return CryptoJS.MD5(inputString).toString();
}
```