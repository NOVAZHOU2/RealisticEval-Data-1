Here is your Python function translated into TypeScript:

```typescript
import { createHash } from 'crypto';

function computeMD5(inputString: string): string {
    /*
     * Computes and returns the MD5 hash of the input string.
     *
     * @param inputString - The string to be hashed
     * @returns The MD5 hash of the input string in hexadecimal format
     */
    
    return createHash('md5').update(inputString).digest('hex');
}
```

In TypeScript, we use `crypto` module's `createHash()` method to generate a hash object for the specified algorithm (in this case 'md5'), then update it with the data you want to hash using the `update()` method, and finally get the digest using the `digest()` method. The `digest()` method takes an optional argument that specifies the output format (default is binary), here we specify 'hex' for hexadecimal format.