Here's how you can convert your Python unittest test class into a Jest test case using JavaScript:

```javascript
const crypto = require('crypto');

function computeMD5(inputString) {
  return crypto.createHash('md5').update(inputString).digest('hex');
}

describe('computeMD5 function', () => {
  it('should correctly compute MD5 hash for given input string', () => {
    const inputString = 'Hello World';
    const expectedHash = '3e25960a79dbc69b674cd4ec67a72c62'; // Pre-calculated MD5 hash for "Hello World"
    expect(computeMD5(inputString)).toBe(expectedHash);
  });
});
```

In this JavaScript version:

- We're using Node.js built-in `crypto` module to create an MD5 hash.
- We define our `computeMD5` function which takes an input string and returns its MD5 hash.
- We then write a Jest test suite (`describe`) with one specific test case (`it`). This test checks if the computed MD5 hash matches the expected hash for a known input string ("Hello World").
- We use Jest's `expect` function to assert that the output from `computeMD5` is equal to the expected hash value.