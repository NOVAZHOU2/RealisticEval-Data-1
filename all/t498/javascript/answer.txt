Sure! I'll convert the given Python code into JavaScript, maintaining the same functionality, logic, and structure. Hereâ€™s the equivalent JavaScript code:

```javascript
const crypto = require('crypto');

function computeMD5(inputString) {
    /**
     * Computes and returns the MD5 hash of the input string.
     *
     * @param {string} inputString - The string to be hashed
     * @return {string} The MD5 hash of the input string in hexadecimal format
     */
    // Create an MD5 hash object
    const md5Hash = crypto.createHash('md5');

    // Update the hash object with the bytes of the input string
    md5Hash.update(inputString, 'utf-8');

    // Return the hexadecimal representation of the hash
    return md5Hash.digest('hex');
}

// Example usage
console.log(computeMD5("Hello, World!"));
```

### Explanation:
1. **Importing the `crypto` module**: In JavaScript, the `crypto` module provides cryptographic functionality, including a set of wrappers for OpenSSL's hash, HMAC, cipher, decipher, sign, and verify functions.

2. **Creating an MD5 hash object**: The `crypto.createHash('md5')` function creates an MD5 hash object.

3. **Updating the hash object**: The `update` method is used to update the hash object with the input string encoded in UTF-8.

4. **Returning the hexadecimal representation**: The `digest('hex')` method returns the hexadecimal representation of the hash.

This JavaScript code performs the same functionality as the provided Python code.