Sure! Below is the equivalent JavaScript code for your Python function:

```javascript
function computeMD5(inputString) {
    /**
     * Computes and returns the MD5 hash of the input string.
     *
     * @param {string} inputString - The string to be hashed
     * @returns {string} The MD5 hash of the input string in hexadecimal format
     */

    // Create an instance of the MD5 hasher
    const md5 = require('crypto').createHash('md5');

    // Update the hash with the input string
    md5.update(inputString);

    // Calculate the digest and return it in hexadecimal format
    return md5.digest('hex');
}
```

### Explanation:
- **`require('crypto')`**: This imports Node.js's built-in `crypto` module, which provides cryptographic functionality.
- **`createHash('md5')`**: Creates an MD5 hash object.
- **`update(inputString)`**: Updates the hash content with the input string.
- **`digest('hex')`**: Calculates the digest of all data passed to the hash (using the `update()` method) and returns it in hexadecimal format.

### Usage Example:
To use this function, you would call it like so:

```javascript
const result = computeMD5("Hello, world!");
console.log(result);  // Outputs the MD5 hash of "Hello, world!"
```

Make sure you have Node.js installed to run this JavaScript code. If you're using a browser environment, you might need to find an alternative library that supports MD5 hashing in browsers.