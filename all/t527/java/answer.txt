Here is the equivalent Java code for your Python function:

```java
package org.real.temp;

public class Answer {
    
    public static boolean isPointInsideTriangle(double px, double py, double x1, double y1, double x2, double y2, double x3, double y3) {
        // Calculate vectors and their cross product
        double v0x = x3 - x1;
        double v0y = y3 - y1;
        double v1x = x2 - x1;
        double v1y = y2 - y1;
        double v2x = px - x1;
        double v2y = py - y1;
        
        double dot00 = v0x * v0x + v0y * v0y;
        double dot01 = v0x * v1x + v0y * v1y;
        double dot02 = v0x * v2x + v0y * v2y;
        double dot11 = v1x * v1x + v1y * v1y;
        double dot12 = v1x * v2x + v1y * v2y;
        
        // Compute barycentric coordinates
        double invDenom = 1 / (dot00 * dot11 - dot01 * dot01);
        double u = (dot11 * dot02 - dot01 * dot12) * invDenom;
        double v = (dot00 * dot12 - dot01 * dot02) * invDenom;
        
        // Check if point is in triangle
        return (u >= 0) && (v >= 0) && (u + v <= 1);
    }
}
```

This Java method `isPointInsideTriangle` takes eight parameters (the coordinates of the point and the three vertices of the triangle). It calculates the barycentric coordinates of the point relative to the triangle and checks whether these coordinates lie within the unit square, which indicates that the point is inside or on the boundary of the triangle. If the point is outside the triangle, it returns `false`. Otherwise, it returns `true`.

Please note that Java uses double precision floating-point numbers (`double`) instead of Python's default float type. Also, unlike Python where you can define docstrings directly after the function definition, in Java, we use comments above the method to describe its purpose and behavior.