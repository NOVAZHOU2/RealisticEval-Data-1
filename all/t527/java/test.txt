Sure! Below is the equivalent Java unit test case using JUnit for the provided Python function `is_point_inside_triangle`. The package name is `org.real.temp`, and the class name is `Tester`.

```java
package org.real.temp;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class Tester {

    private TriangleChecker triangleChecker;

    @BeforeEach
    public void setUp() {
        triangleChecker = new TriangleChecker();
    }

    @Test
    public void testPointInsideTriangle() {
        assertTrue(triangleChecker.isPointInsideTriangle(0.5, 0.5, 0, 0, 1, 0, 0.5, 1));
    }

    @Test
    public void testPointOnEdgeOfTriangle() {
        assertTrue(triangleChecker.isPointInsideTriangle(0, 0, 0, 0, 1, 0, 0, 1));
    }

    @Test
    public void testPointOutsideTriangle() {
        assertFalse(triangleChecker.isPointInsideTriangle(1.5, 0.5, 0, 0, 1, 0, 0.5, 1));
    }
}

class TriangleChecker {
    public boolean isPointInsideTriangle(double px, double py, double x1, double y1, double x2, double y2, double x3, double y3) {
        double d1 = direction(x1, y1, x2, y2, px, py);
        double d2 = direction(x2, y2, x3, y3, px, py);
        double d3 = direction(x3, y3, x1, y1, px, py);

        boolean hasNeg = (d1 < 0) || (d2 < 0) || (d3 < 0);
        boolean hasPos = (d1 > 0) || (d2 > 0) || (d3 > 0);

        return !(hasNeg && hasPos);
    }

    private double direction(double x1, double y1, double x2, double y2, double px, double py) {
        return (x2 - x1) * (py - y1) - (y2 - y1) * (px - x1);
    }
}
```

### Explanation:
1. **Package Declaration**: The package declaration is set to `org.real.temp`.
2. **Class Declaration**: The class `Tester` contains the test methods.
3. **Setup Method**: The `@BeforeEach` annotation marks the `setUp` method to run before each test method. This initializes an instance of `TriangleChecker`.
4. **Test Methods**:
   - `testPointInsideTriangle`: Checks if a point inside the triangle returns `true`.
   - `testPointOnEdgeOfTriangle`: Checks if a point on the edge of the triangle returns `true`.
   - `testPointOutsideTriangle`: Checks if a point outside the triangle returns `false`.
5. **TriangleChecker Class**: Contains the `isPointInsideTriangle` method which implements the logic to determine if a point is inside a triangle. It also includes a helper method `direction` to calculate the direction of the points.

This setup ensures that the Java code is tested similarly to the original Python code using JUnit.