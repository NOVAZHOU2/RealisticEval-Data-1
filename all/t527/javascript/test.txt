To convert the given Python `unittest` test class to a JavaScript test case using Jest, you can follow these steps:

1. Define the function `isPointInsideTriangle`.
2. Write Jest test cases for different scenarios.

Here's how you can do it:

### Step 1: Define the Function

First, ensure that the function `isPointInsideTriangle` is available in your JavaScript environment. You can define it in a separate file and import it into your test file.

```javascript
// triangle.js
function isPointInsideTriangle(px, py, x1, y1, x2, y2, x3, y3) {
    // Implementation of the function
    const area = (x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2)) / 2;
    const p1 = Math.abs((x1 * (y2 - py) + x2 * (py - y1) + px * (y1 - y2)) / 2);
    const p2 = Math.abs((x2 * (y3 - py) + x3 * (py - y2) + px * (y2 - y3)) / 2);
    const p3 = Math.abs((x3 * (y1 - py) + x1 * (py - y3) + px * (y3 - y1)) / 2);

    return area === p1 + p2 + p3;
}

module.exports = isPointInsideTriangle;
```

### Step 2: Write Jest Test Cases

Next, create a test file using Jest to test the `isPointInsideTriangle` function.

```javascript
// triangle.test.js
const isPointInsideTriangle = require('./triangle');

describe('isPointInsideTriangle', () => {
    test('point inside triangle', () => {
        expect(isPointInsideTriangle(0, 0, -1, -1, 1, 1, 0, 1)).toBe(true);
    });

    test('point outside triangle', () => {
        expect(isPointInsideTriangle(2, 2, -1, -1, 1, 1, 0, 1)).toBe(false);
    });

    test('point on edge of triangle', () => {
        expect(isPointInsideTriangle(-1, 0, -1, -1, 1, 1, 0, 1)).toBe(true);
    });

    test('collinear points', () => {
        expect(isPointInsideTriangle(0, 0, 0, 0, 1, 1, 2, 2)).toBe(false);
    });
});
```

### Explanation

- **Function Definition**: The `isPointInsideTriangle` function is defined in a separate file (`triangle.js`) and exported.
- **Test Suite**: A Jest test suite is created using `describe`.
- **Test Cases**: Individual test cases are written using `test`. Each test case checks a specific scenario:
  - Point inside the triangle.
  - Point outside the triangle.
  - Point on the edge of the triangle.
  - Collinear points (which should not be considered inside the triangle).

By following these steps, you have successfully converted a Python `unittest` test class to a JavaScript test case using Jest.