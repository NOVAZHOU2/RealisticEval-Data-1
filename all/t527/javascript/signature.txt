Certainly! Hereâ€™s the equivalent JavaScript code with JSDoc comments:

```javascript
/**
 * Check if a point is inside a triangle defined by three vertices.
 *
 * @param {number} px - The x-coordinate of the point to check.
 * @param {number} py - The y-coordinate of the point to check.
 * @param {number} x1 - The x-coordinate of the first vertex of the triangle.
 * @param {number} y1 - The y-coordinate of the first vertex of the triangle.
 * @param {number} x2 - The x-coordinate of the second vertex of the triangle.
 * @param {number} y2 - The y-coordinate of the second vertex of the triangle.
 * @param {number} x3 - The x-coordinate of the third vertex of the triangle.
 * @param {number} y3 - The y-coordinate of the third vertex of the triangle.
 * @returns {boolean} True if the point (px, py) is inside or on the edge of the triangle formed by the vertices (x1, y1), (x2, y2), (x3, y3); False otherwise.
 */
function isPointInsideTriangle(px, py, x1, y1, x2, y2, x3, y3) {
    // Calculate the area of the triangle ABC
    const A = area(x1, y1, x2, y2, x3, y3);

    // Calculate the area of the triangles PAB, PBC, and PCA
    const A1 = area(px, py, x1, y1, x2, y2);
    const A2 = area(px, py, x2, y2, x3, y3);
    const A3 = area(px, py, x3, y3, x1, y1);

    // Check if the sum of A1, A2, and A3 is equal to A
    return A === (A1 + A2 + A3);
}

// Helper function to calculate the area of a triangle given its vertices
function area(x1, y1, x2, y2, x3, y3) {
    return Math.abs((x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2)) / 2.0);
}
```

### Explanation:
1. **JSDoc Comments**: The comments have been rewritten using JSDoc format, which is the standard way to document JavaScript functions.
2. **Function Signature**: The function signature has been converted to JavaScript, maintaining the same parameter types and names.
3. **Helper Function**: The `area` function is included as a helper function to keep the code organized and maintain the same structure as the Python version.

This ensures that the JavaScript code is well-documented and follows best practices for readability and maintainability.