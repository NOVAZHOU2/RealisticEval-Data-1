Sure! Here's how you can translate your Python function `convert_to_short_format` into TypeScript:

```typescript
function convertToShortFormat(inputStr: string): string {
    /**
     * Converts a string concatenated with underscores to a short format.
     * For example:
     *      input: "f1_p1_g1_b1_c1"
     *      output: "fpgbc"
     * @param inputStr - The input string with segments separated by underscores.
     * @returns A short format string derived from the first characters of each segment.
     */
    
    // Split the input string by underscore and extract the first character of each segment
    const segments = inputStr.split('_');
    const shortFormat = segments.map(segment => segment.charAt(0)).join('');

    return shortFormat;
}

// Example usage:
const result = convertToShortFormat("f1_p1_g1_b1_c1");
console.log(result);  // Output: "fpgbc"
```

### Explanation:
- **Function Signature**: In TypeScript, functions have explicit type annotations for their parameters and return values.
- **String Splitting**: The `split('_')` method in JavaScript/TypeScript splits a string into an array of substrings based on the specified delimiter.
- **Mapping and Joining**: The `map` method is used to iterate over the array of segments and extract the first character (`charAt(0)`). Then, `join('')` concatenates these characters back into a single string.

This TypeScript function should work similarly to your original Python function.