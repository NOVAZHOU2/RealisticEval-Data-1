Sure! Here is the equivalent C++ code for your Python function:

```cpp
#include <iostream>
#include <string>
#include <sstream>

std::string convertToShortFormat(const std::string& inputStr) {
    std::stringstream ss(inputStr);
    std::string segment;
    std::string result;

    while (getline(ss, segment, '_')) {
        if (!segment.empty()) {
            result += segment[0];
        }
    }

    return result;
}

int main() {
    std::string input = "f1_p1_g1_b1_c1";
    std::string output = convertToShortFormat(input);
    std::cout << output << std::endl; // Output: fpgbc

    return 0;
}
```

### Explanation:
- **`#include <iostream>`**: For standard input/output operations.
- **`#include <string>`**: For using `std::string`.
- **`#include <sstream>`**: For using `std::stringstream` to split the string.
- **`convertToShortFormat` Function**:
  - It takes a constant reference to a `std::string` as an argument.
  - Uses `std::stringstream` to split the input string by underscores (`_`).
  - Iterates through each segment and appends the first character to the result string.
- **`main` Function**:
  - Demonstrates how to use the `convertToShortFormat` function.
  - Prints the result to the console.

This C++ code should produce the same output as your Python function.