Sure! Below is the equivalent TypeScript test case using Jest for the given Python `unittest` test class.

```typescript
import { describe, it, expect } from '@jest/globals';

function alignLinesLeft(str1: string, str2: string): [string, string] {
    /**
     * Align two lines of string to the left, supplementing with Spaces if the length is not enough

     * @param str1 - The first string.
     * @param str2 - The second string.
     * @returns A tuple containing the aligned strings.
     */
    const maxLength = Math.max(str1.length, str2.length);
    return [str1.padEnd(maxLength), str2.padEnd(maxLength)];
}

describe('alignLinesLeft', () => {
    it('should align two lines of equal length', () => {
        const result = alignLinesLeft('hello', 'world');
        expect(result).toEqual(['hello', 'world']);
    });

    it('should align two lines where the first one is shorter', () => {
        const result = alignLinesLeft('hi', 'there');
        expect(result).toEqual(['hi   ', 'there']);
    });

    it('should align two lines where the second one is shorter', () => {
        const result = alignLinesLeft('this is long', 'short');
        expect(result).toEqual(['this is long', 'short   ']);
    });
});
```

### Explanation:

1. **Function Definition**: 
   - The function `alignLinesLeft` takes two strings and returns a tuple of the same strings aligned to the left, padding them with spaces if necessary.

2. **Test Suite**:
   - We use `describe` to group related tests together.
   - Each test case is defined using `it`.
   - We use `expect` to assert that the output of `alignLinesLeft` matches the expected result.

3. **Assertions**:
   - We check for different scenarios:
     - When both strings have the same length.
     - When the first string is shorter than the second.
     - When the second string is shorter than the first.

This should cover the basic functionality of the `alignLinesLeft` function in TypeScript using Jest.