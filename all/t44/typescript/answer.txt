Sure! Here is the equivalent TypeScript code for the provided Python function:

```typescript
function alignLinesLeft(str1: string, str2: string): [string, string] {
    /**
     * Align two lines of string to the left, supplementing with spaces if the length is not enough.
     *
     * @param str1 - The first string.
     * @param str2 - The second string.
     * @returns A tuple containing the aligned versions of str1 and str2.
     */

    // Determine the maximum length of the two strings
    const maxLength = Math.max(str1.length, str2.length);

    // Align both strings to the left by padding with spaces
    const alignedStr1 = str1.padEnd(maxLength, ' ');
    const alignedStr2 = str2.padEnd(maxLength, ' ');

    return [alignedStr1, alignedStr2];
}

// Example usage
const result = alignLinesLeft("Hello", "World!");
console.log(result);  // Output: ["Hello   ", "World!  "]
```

### Explanation:
1. **Function Definition**: The function `alignLinesLeft` takes two strings (`str1` and `str2`) and returns a tuple `[string, string]`.
2. **Type Annotations**: The parameters and return type are explicitly typed.
3. **Maximum Length Calculation**: The maximum length of the two strings is calculated using `Math.max()`.
4. **Padding Strings**: The `padEnd()` method is used to pad the strings with spaces to ensure they have the same length.
5. **Return Value**: The function returns a tuple containing the aligned strings.

This TypeScript code maintains the same functionality and logic as the original Python code.