To convert your Python unittest test class to JavaScript using Jest, you can follow these steps:

1. Install Jest and any necessary dependencies.
2. Create a new JavaScript file for your tests.
3. Write the equivalent test cases in JavaScript using Jest syntax.

Here's an example of how you might write the test cases in JavaScript using Jest:

```javascript
const { getTranslation } = require('./your-python-module'); // Adjust the path accordingly

describe('getTranslation', () => {
    it('should return the correct translation vector for a given 3x3 matrix', () => {
        const matrix = [
            [1, 0, 5],
            [0, 1, 10],
            [0, 0, 1]
        ];
        const expectedTranslation = [5, 10];
        const result = getTranslation(matrix);
        expect(result).toEqual(expectedTranslation);
    });

    it('should handle matrices with different values', () => {
        const matrix = [
            [2, 0, 7],
            [0, 3, 9],
            [0, 0, 1]
        ];
        const expectedTranslation = [7, 9];
        const result = getTranslation(matrix);
        expect(result).toEqual(expectedTranslation);
    });

    it('should throw an error if the input is not a 3x3 matrix', () => {
        const matrix = [
            [1, 0, 5],
            [0, 1, 10] // Missing third row
        ];

        expect(() => getTranslation(matrix)).toThrowError('Input matrix must be a 3x3 matrix');
    });
});
```

### Explanation:

- **`describe`**: This function groups related test cases together.
- **`it`**: This function defines a single test case. It takes two arguments: a string description of the test case and a callback function that contains the actual test logic.
- **`expect`**: This function is used to make assertions about the result of the test. In this case, we're checking if the `result` matches the `expectedTranslation`.
- **`toEqual`**: This matcher checks if the two objects or arrays are equal.
- **`toThrowError`**: This matcher checks if the function throws an error when called.

Make sure you have Jest installed in your project. You can install it using npm or yarn:

```sh
npm install --save-dev jest
# or
yarn add --dev jest
```

Then, you can run your tests using the following command:

```sh
npx jest
# or
yarn jest
```

This will execute all the test cases defined in your JavaScript files.