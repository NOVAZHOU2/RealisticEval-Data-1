Certainly! Below is the TypeScript version of your JavaScript Jest test case using `describe`:

```typescript
import { describe, it, expect } from '@jest/globals';

/**
 * Count the number of letters in a string.
 *
 * @param {string} str - The input string from which to count letters.
 * @returns {number} - The count of letters in the string.
 */
function countLetters(str: string): number {
  return str.replace(/[^a-zA-Z]/g, '').length;
}

describe('countLetters function', () => {
  it('should return the correct count of letters for an empty string', () => {
    const result = countLetters('');
    expect(result).toBe(0);
  });

  it('should return the correct count of letters for a string with only letters', () => {
    const result = countLetters('hello');
    expect(result).toBe(5);
  });

  it('should ignore non-letter characters when counting letters', () => {
    const result = countLetters('hello123!');
    expect(result).toBe(5);
  });
});
```

### Explanation:
- **TypeScript Function Signature**: The `countLetters` function now includes type annotations for its parameters and return value.
- **Jest Describe Block**: The `describe` block is used to group related tests together.
- **Jest It Blocks**: Each `it` block contains a specific test case.
- **Jest Expectations**: The `expect` function is used to assert that the output of `countLetters` matches the expected result.

Make sure you have the necessary TypeScript and Jest setup in your project to run these tests.