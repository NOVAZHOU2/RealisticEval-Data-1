Here's how you might translate the Python function `extract_character_bits` into C++:

```c++
#include <iostream>
#include <vector>
#include <string>

std::pair<int, std::string> extractCharacterBits(const std::vector<unsigned char>& byteArray, const std::string& charStr, const std::string& charset = "UTF-8") {
    // Implementation goes here
}
```

Note that there isn't an exact translation because Python strings are Unicode by default, while C++ strings are not. In C++, you would need to use a library like `iconv` or `icu` for string conversion between different encodings. Also, C++ does not have a built-in way to convert between bytes and characters like Python does with its `encode()` and `decode()` methods.

The implementation of the actual logic will depend on your specific needs and what exactly constitutes a "bit" in your context. This might involve converting the character to its binary representation and then finding the corresponding bit in the byte array.