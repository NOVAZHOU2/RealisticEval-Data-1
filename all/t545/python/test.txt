Certainly! Below is the equivalent Python unittest test case for the JavaScript Jest function `elementsBeforeNull`:

```python
import unittest

def elements_before_null(array):
    result = []
    for element in array:
        if element is None:
            break
        result.append(element)
    return result

class TestElementsBeforeNull(unittest.TestCase):

    def test_elements_before_null(self):
        self.assertEqual(elements_before_null([1, 2, None, 4]), [1, 2])
        self.assertEqual(elements_before_null([None, 1, 2, 3]), [])
        self.assertEqual(elements_before_null([1, 2, 3]), [1, 2, 3])
        self.assertEqual(elements_before_null([]), [])

if __name__ == '__main__':
    unittest.main()
```

### Explanation:
- **Function Definition**: The `elements_before_null` function iterates through the given list and appends elements to the result list until it encounters a `None` value.
- **Test Class**: The `TestElementsBeforeNull` class inherits from `unittest.TestCase`.
- **Test Methods**:
  - `test_elements_before_null`: This method tests various scenarios including an empty list, a list with a `None` at the beginning, a list with a `None` in the middle, and a list without any `None` values.

To run the test, save the code in a file (e.g., `test_elements_before_null.py`) and execute it using the command:

```sh
python test_elements_before_null.py
```

This will run the test cases and provide you with the results.