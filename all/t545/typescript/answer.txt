Certainly! Below is the TypeScript version of your JavaScript function with appropriate type annotations:

```typescript
/**
 * Iterates through the array of elements until the first null is encountered,
 * returning a new array that includes all elements before the null.
 *
 * @param {any[]} array - The array to iterate through.
 * @returns {any[]} - A new array containing elements before the first null.
 */
function elementsBeforeNull(array: any[]): any[] {
    for (let i = 0; i < array.length; i++) {
        if (array[i] === null) {
            return array.slice(0, i);
        }
    }
    return array;
}
```

### Explanation:
- **Type Annotations**: 
  - `array: any[]` indicates that the input parameter `array` is an array of any type (`any`).
  - The return type `any[]` indicates that the function returns an array of any type.

- **Logic**:
  - The function iterates through each element in the array using a `for` loop.
  - If it encounters a `null`, it returns a new array containing all elements from the start up to but not including the `null` element using `array.slice(0, i)`.
  - If no `null` is found in the array, the entire array is returned.

This ensures that the function adheres to TypeScript's static typing rules and provides better type safety and clarity.