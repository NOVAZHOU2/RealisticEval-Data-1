Certainly! Below is the equivalent C++ function signature with the same comments:

```cpp
/**
 * Iterates through the array of elements until the first null is encountered,
 * returning a new vector that includes all elements before the null.
 *
 * @param array - The array to iterate through.
 * @return std::vector<T> - A new vector containing elements before the first null.
 */
template <typename T>
std::vector<T> elementsBeforeNull(const std::vector<T>& array);
```

This C++ function template will work for any type `T` and will return a vector of elements before the first occurrence of `nullptr`. Note that in C++, we typically use `nullptr` instead of `null` for pointers. If you want to handle non-pointer types, you might need to adjust the function accordingly.