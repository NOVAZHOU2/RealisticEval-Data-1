Sure! Below is an equivalent C++ Catch2 test case for the JavaScript Jest function `elementsBeforeNull`.

```cpp
#include <catch2/catch.hpp>
#include <vector>

/**
 * Iterates through the vector of elements until the first nullptr is encountered,
 * returning a new vector that includes all elements before the nullptr.
 *
 * @param vec - The vector to iterate through.
 * @returns A new vector containing elements before the first nullptr.
 */
std::vector<int*> elementsBeforeNull(const std::vector<int*>& vec) {
    std::vector<int*> result;
    for (const auto& element : vec) {
        if (element == nullptr) {
            break;
        }
        result.push_back(element);
    }
    return result;
}

TEST_CASE("elementsBeforeNull", "[elementsBeforeNull]") {
    SECTION("Empty vector") {
        std::vector<int*> emptyVec;
        auto result = elementsBeforeNull(emptyVec);
        REQUIRE(result.empty());
    }

    SECTION("Vector with no nullptr") {
        int values[] = {1, 2, 3};
        std::vector<int*> vec(values, values + 3);
        auto result = elementsBeforeNull(vec);
        REQUIRE(result.size() == 3);
        REQUIRE(*result[0] == 1);
        REQUIRE(*result[1] == 2);
        REQUIRE(*result[2] == 3);
    }

    SECTION("Vector with nullptr in the middle") {
        int values[] = {1, 2, 0, 4};
        std::vector<int*> vec(values, values + 4);
        auto result = elementsBeforeNull(vec);
        REQUIRE(result.size() == 2);
        REQUIRE(*result[0] == 1);
        REQUIRE(*result[1] == 2);
    }

    SECTION("Vector with nullptr at the beginning") {
        int values[] = {0, 2, 3};
        std::vector<int*> vec(values, values + 3);
        auto result = elementsBeforeNull(vec);
        REQUIRE(result.empty());
    }

    SECTION("Vector with nullptr at the end") {
        int values[] = {1, 2, 3};
        std::vector<int*> vec(values, values + 3);
        vec.push_back(nullptr); // Adding nullptr at the end
        auto result = elementsBeforeNull(vec);
        REQUIRE(result.size() == 3);
        REQUIRE(*result[0] == 1);
        REQUIRE(*result[1] == 2);
        REQUIRE(*result[2] == 3);
    }
}
```

### Explanation:
1. **Function Definition**: The `elementsBeforeNull` function takes a vector of integer pointers and returns a new vector containing all elements before the first `nullptr`.
2. **Catch2 Test Cases**:
   - **Empty Vector**: Tests the function with an empty vector.
   - **No Nullptr**: Tests the function with a vector that contains no `nullptr`.
   - **Nullptr in the Middle**: Tests the function with a vector that has a `nullptr` in the middle.
   - **Nullptr at the Beginning**: Tests the function with a vector that starts with a `nullptr`.
   - **Nullptr at the End**: Tests the function with a vector that ends with a `nullptr`.

This should cover various scenarios similar to the Jest test cases you provided.