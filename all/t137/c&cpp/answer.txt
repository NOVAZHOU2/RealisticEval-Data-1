Here's the equivalent C++ code for merging two objects using a simple structure:

```cpp
#include <iostream>
#include <map>
#include <string>
#include <stdexcept>

std::map<std::string, std::string> mergeObjects(const std::map<std::string, std::string>& obj1, const std::map<std::string, std::string>& obj2) {
    std::map<std::string, std::string> result = obj1;

    for (const auto& pair : obj2) {
        result[pair.first] = pair.second; // Overwrite or add
    }

    return result;
}

int main() {
    std::map<std::string, std::string> obj1 = {{"key1", "value1"}, {"key2", "value2"}};
    std::map<std::string, std::string> obj2 = {{"key2", "newValue"}, {"key3", "value3"}};

    auto merged = mergeObjects(obj1, obj2);
    for (const auto& pair : merged) {
        std::cout << pair.first << ": " << pair.second << std::endl;
    }

    return 0;
}
```

This C++ code uses `std::map` to represent objects and handles merging properties similarly to the JavaScript function.