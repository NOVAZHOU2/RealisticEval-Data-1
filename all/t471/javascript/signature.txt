Certainly! Below is the equivalent JavaScript code for the given Python function, including the JSDoc comments to conform to JavaScript documentation standards.

### JavaScript Code

```javascript
/**
 * Given an affine transformation matrix, return the corresponding rotation angle in radians.
 *
 * @param {Array<Array<number>>} matrix - A 2D affine transformation matrix.
 * @returns {number} The rotation angle in radians, extracted from the affine matrix.
 */
function getRotation(matrix) {
    // Ensure the matrix is a 2D array and has the correct shape
    if (!Array.isArray(matrix) || matrix.length !== 3 || matrix.some(row => row.length !== 3)) {
        throw new Error("Input must be a 3x3 affine transformation matrix.");
    }

    // Calculate the rotation angle using Math.atan2
    const rotationAngle = Math.atan2(matrix[1][0], matrix[0][0]);

    return rotationAngle;
}

// Example usage
const matrix = [
    [1, 0, 0],
    [0, 1, 0],
    [0, 0, 1]
];

console.log(getRotation(matrix));
```

### Explanation:
1. **JSDoc Comments**:
   - The function is documented using JSDoc format.
   - The `@param` tag describes the parameter `matrix` and its type.
   - The `@returns` tag describes the return value and its type.

2. **Function Definition**:
   - The function `getRotation` is defined with a single parameter `matrix`.

3. **Matrix Validation**:
   - The function checks if the input matrix is a 2D array and has the correct shape (3x3).
   - If the validation fails, it throws an error.

4. **Rotation Angle Calculation**:
   - The rotation angle is calculated using `Math.atan2(matrix[1][0], matrix[0][0])`.

5. **Return Value**:
   - The function returns the calculated rotation angle.

### Usage Example:
- An example usage is provided to demonstrate how to call the `getRotation` function with a sample 3x3 matrix.

This JavaScript code preserves the functionality, logic, and structure of the original Python code while adhering to JavaScript documentation standards.