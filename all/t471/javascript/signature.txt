Certainly! Below is the equivalent JavaScript code for the given Python function, including the JSDoc comments to maintain the purpose and structure of the code:

```javascript
/**
 * Given an affine transformation matrix, return the corresponding rotation angle in radians.
 *
 * @param {Array<Array<number>>} matrix - A 2D affine transformation matrix.
 * @returns {number} The rotation angle in radians, extracted from the affine matrix.
 */
function getRotation(matrix) {
    // Ensure the matrix is a 2D array and has the correct shape
    if (!Array.isArray(matrix) || matrix.length !== 3 || matrix.some(row => row.length !== 3)) {
        throw new Error("Input must be a 3x3 affine transformation matrix.");
    }

    // Calculate the rotation angle using Math.atan2
    const m10 = matrix[1][0];
    const m00 = matrix[0][0];
    const rotationAngle = Math.atan2(m10, m00);

    return rotationAngle;
}

// Example usage:
// Create a 3x3 matrix
const matrix = [
    [1, 0, 0],
    [0, 1, 0],
    [0, 0, 1]
];

// Get the rotation angle
const angle = getRotation(matrix);
console.log(angle);  // Output should be 0
```

### Explanation:
1. **JSDoc Comments**: The JSDoc comments provide detailed documentation for the function, including parameter types and return values.
2. **Function Definition**: The `getRotation` function is defined with the appropriate parameter type and return type annotations.
3. **Validation**: The function checks if the input is a 3x3 array.
4. **Matrix Elements**: It extracts the necessary elements (`m10` and `m00`) from the matrix.
5. **Calculation**: It uses `Math.atan2` to calculate the rotation angle.
6. **Example Usage**: An example is provided to demonstrate how to use the function with a sample 3x3 matrix.

This JavaScript code preserves the functionality and structure of the original Python code while adhering to JavaScript documentation standards.