Certainly! Here is the equivalent Java code for the provided Python function, including appropriate Javadoc comments and type conversions:

```java
package org.real.temp;

/**
 * This class provides methods to calculate the rotation angle in radians from a 3x3 affine transformation matrix.
 */
public class Answer {

    /**
     * Calculates the rotation angle in radians from a given 3x3 affine transformation matrix.
     * 
     * @param matrix A 2D affine transformation matrix represented as a 2D double array.
     * @return The rotation angle in radians.
     * @throws IllegalArgumentException If the input matrix is not a 3x3 matrix.
     */
    public static double getRotation(double[][] matrix) {
        // Ensure the matrix is a 3x3 array
        if (matrix == null || matrix.length != 3 || matrix[0].length != 3 || matrix[1].length != 3 || matrix[2].length != 3) {
            throw new IllegalArgumentException("Input must be a 3x3 affine transformation matrix.");
        }

        // Calculate the rotation angle using atan2
        double rotationAngle = Math.atan2(matrix[1][0], matrix[0][0]);

        return rotationAngle;
    }

    /**
     * Main method for testing the getRotation method.
     *
     * @param args Command line arguments (not used).
     */
    public static void main(String[] args) {
        double[][] matrix = {
            {1.0, 2.0, 3.0},
            {4.0, 5.0, 6.0},
            {0.0, 0.0, 1.0}
        };

        double angle = getRotation(matrix);
        System.out.println("Rotation Angle: " + angle);
    }
}
```

### Explanation:
1. **Package Declaration**: `package org.real.temp;` sets the package name.
2. **Class Definition**: `public class Answer` defines the class name.
3. **Javadoc Comments**:
   - The class-level Javadoc comment explains the purpose of the class.
   - The method-level Javadoc comment describes the method parameters, return value, and any exceptions thrown.
4. **Method Signature**: `public static double getRotation(double[][] matrix)` declares the method with the appropriate signature.
5. **Error Handling**: Checks if the input matrix is a 3x3 array and throws an `IllegalArgumentException` if not.
6. **Calculation**: Uses `Math.atan2` to calculate the rotation angle.
7. **Main Method**: Demonstrates how to call the `getRotation` method with a sample matrix.

This Java code preserves the functionality and structure of the original Python code while adhering to Java conventions and best practices.