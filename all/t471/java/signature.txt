Certainly! Hereâ€™s the equivalent Java code for the provided Python function, including appropriate Javadoc comments and type translations:

```java
package org.real.temp;

/**
 * Provides methods for calculating rotation angles from affine transformation matrices.
 */
public class Answer {

    /**
     * Given a 3x3 affine transformation matrix, returns the corresponding rotation angle in radians.
     *
     * @param matrix A 2D array representing the affine transformation matrix.
     * @return The rotation angle in radians, extracted from the affine matrix.
     * @throws IllegalArgumentException If the input matrix is not a 3x3 matrix.
     */
    public static double getRotation(double[][] matrix) {
        // Ensure the matrix is a 3x3 array
        if (matrix == null || matrix.length != 3 || matrix[0].length != 3 || matrix[1].length != 3 || matrix[2].length != 3) {
            throw new IllegalArgumentException("Input must be a 3x3 affine transformation matrix.");
        }

        // Calculate the rotation angle using Math.atan2
        double rotationAngle = Math.atan2(matrix[1][0], matrix[0][0]);

        return rotationAngle;
    }

    // Example usage
    public static void main(String[] args) {
        double[][] matrix = {
            {1, 2, 3},
            {4, 5, 6},
            {0, 0, 1}
        };

        try {
            double angle = getRotation(matrix);
            System.out.println("Rotation Angle (in radians): " + angle);
        } catch (IllegalArgumentException e) {
            System.err.println(e.getMessage());
        }
    }
}
```

### Explanation:
1. **Package and Class Declaration**:
   - The package declaration `package org.real.temp;` sets the package name.
   - The class declaration `public class Answer` defines the class name.

2. **Javadoc Comments**:
   - The method `getRotation` includes a Javadoc comment block that describes the method, its parameters, return value, and any exceptions it might throw.

3. **Method Signature**:
   - The method `getRotation` is declared with the signature `public static double getRotation(double[][] matrix)` to match the functionality of the Python function.

4. **Exception Handling**:
   - An `IllegalArgumentException` is thrown if the input matrix is not a 3x3 array.

5. **Calculation**:
   - The rotation angle is calculated using `Math.atan2(matrix[1][0], matrix[0][0])`, which is equivalent to the Python `np.arctan2(matrix[1, 0], matrix[0, 0])`.

6. **Example Usage**:
   - The `main` method demonstrates how to call the `getRotation` method and handle any potential exceptions.

This Java code preserves the functionality and structure of the original Python code while adhering to Java conventions and best practices.