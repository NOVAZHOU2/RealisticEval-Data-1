Certainly! Here is the equivalent Java JUnit test class for the provided Python unittest class. The Java test class will be placed in the package `org.real.temp` and named `Tester`. It will use JUnit annotations and assertions to ensure the functionality and logic of the tests are preserved.

```java
package org.real.temp;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

/**
 * Test class for the getRotation function.
 */
public class Tester {

    /**
     * Test for a rotation of 0 degrees (identity matrix).
     */
    @Test
    public void testRotation0Degrees() {
        double[][] matrix = {
            {1.0, 0.0, 0.0},
            {0.0, 1.0, 0.0},
            {0.0, 0.0, 1.0}
        };
        double expectedRotation = 0.0;
        assertEquals(expectedRotation, getRotation(matrix), 1e-6);
    }

    /**
     * Test for a rotation of 90 degrees.
     */
    @Test
    public void testRotation90Degrees() {
        double[][] matrix = {
            {0.0, -1.0, 0.0},
            {1.0, 0.0, 0.0},
            {0.0, 0.0, 1.0}
        };
        double expectedRotation = Math.PI / 2;  // 90 degrees in radians
        assertEquals(expectedRotation, getRotation(matrix), 1e-6);
    }

    /**
     * Test for a rotation of 180 degrees.
     */
    @Test
    public void testRotation180Degrees() {
        double[][] matrix = {
            {-1.0, 0.0, 0.0},
            {0.0, -1.0, 0.0},
            {0.0, 0.0, 1.0}
        };
        double expectedRotation = Math.PI;  // 180 degrees in radians
        assertEquals(expectedRotation, getRotation(matrix), 1e-6);
    }

    /**
     * Test for a rotation of -90 degrees.
     */
    @Test
    public void testRotationNegative90Degrees() {
        double[][] matrix = {
            {0.0, 1.0, 0.0},
            {-1.0, 0.0, 0.0},
            {0.0, 0.0, 1.0}
        };
        double expectedRotation = -Math.PI / 2;  // -90 degrees in radians
        assertEquals(expectedRotation, getRotation(matrix), 1e-6);
    }

    // Method to calculate the rotation angle
    private double getRotation(double[][] matrix) {
        // Ensure the matrix is a 3x3 array
        if (matrix == null || matrix.length != 3 || matrix[0].length != 3 || matrix[1].length != 3 || matrix[2].length != 3) {
            throw new IllegalArgumentException("Input must be a 3x3 affine transformation matrix.");
        }

        // Calculate the rotation angle using atan2
        double rotationAngle = Math.atan2(matrix[1][0], matrix[0][0]);

        return rotationAngle;
    }
}
```

### Explanation:
1. **Package Declaration**: `package org.real.temp;` sets the package name.
2. **Class Definition**: `public class Tester` defines the test class name.
3. **JUnit Annotations**:
   - `@Test` is used to mark each test method.
4. **JUnit Assertions**:
   - `assertEquals` is used to compare the expected and actual values with a delta for floating-point comparisons.
5. **Test Methods**:
   - Each test method is annotated with `@Test` and includes a descriptive name.
   - The test matrices and expected rotations are defined.
   - `assertEquals` is used to verify the results.
6. **Helper Method**:
   - `getRotation` is a helper method that calculates the rotation angle, similar to the Python function.

This Java code preserves the functionality and logic of the original Python unittest class while adhering to JUnit conventions and best practices.