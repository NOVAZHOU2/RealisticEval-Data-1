Sure! Below is the equivalent JavaScript code that maintains the same functionality, logic, and structure as the provided Python code:

```javascript
function invertDictionary(originalDict) {
    /**
     * Invert the keys and values in an object. If multiple keys have the same value,
     * the new object's values will be an array of these keys.
     *
     * @param {Object} originalDict - The object to invert.
     * @returns {Object} A new object with values and keys inverted.
     */
    const newDict = {};
    for (const [key, value] of Object.entries(originalDict)) {
        if (!newDict.hasOwnProperty(value)) {
            newDict[value] = key;
        } else {
            // If the value already exists as a key, we need to append to or create an array
            if (!Array.isArray(newDict[value])) {
                newDict[value] = [newDict[value]];
            }
            newDict[value].push(key);
        }
    }
    return newDict;
}
```

### Explanation:
1. **Function Definition**: The function `invertDictionary` is defined similarly to the Python function `invert_dictionary`.
2. **Object Initialization**: `newDict` is initialized as an empty object.
3. **Looping Through Dictionary**: Using `Object.entries` to iterate over the entries of `originalDict`, similar to `for key, value in original_dict.items()`.
4. **Checking Existence**: `hasOwnProperty` is used to check if the value already exists as a key in `newDict`, similar to `if value not in newDict`.
5. **Appending Values**: If the value already exists, it checks if the existing value is an array using `Array.isArray`. If not, it converts the existing value to an array and appends the new key, similar to the Python logic.
6. **Returning Result**: Finally, the function returns the newly constructed object `newDict`.

This JavaScript code should behave identically to the provided Python code.