Here is how you can change the Python function signature to JavaScript:

```javascript
/**
 * Invert the keys and values in an object. If multiple keys have the same value,
 * the new object's values will be an array of these keys.
 *
 * @param {Object} originalObj - The object to invert.
 * @returns {Object} A new object with values and keys inverted.
 */
function invertObject(originalObj) {
```

Please note that JavaScript does not support type hinting like Python, so we use JSDoc style comments to describe the types of parameters and return value. Also, JavaScript objects do not support duplicate keys, but if you want to keep the behavior similar to Python's version where multiple keys can map to the same value, you would need to use arrays for those cases, which can be achieved using the following code:

```javascript
/**
 * Invert the keys and values in an object. If multiple keys have the same value,
 * the new object's values will be an array of these keys.
 *
 * @param {Object} originalObj - The object to invert.
 * @returns {Object} A new object with values and keys inverted.
 */
function invertObject(originalObj) {
    let inverted = {};
    Object.keys(originalObj).forEach(key => {
        let value = originalObj[key];
        if (!inverted[value]) {
            inverted[value] = [];
        }
        inverted[value].push(key);
    });
    return inverted;
}
```