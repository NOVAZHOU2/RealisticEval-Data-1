Here's the equivalent Java code for your Python function:

```java
package org.real.temp;

public class Answer {
    public static String formatStr(String x) {
        if (x == null) {
            x = "";
        }

        StringBuilder result = new StringBuilder();
        boolean inCodeBlock = false;
        String[] lines = x.split("\n");

        for (String line : lines) {
            // Check if we're entering or exiting a code block
            if (line.trim().startsWith("```")) {
                inCodeBlock = !inCodeBlock;
            }

            // Add "> " before each line except empty lines
            if (!line.trim().isEmpty()) {
                result.append("> ").append(line).append("\n");
            } else {
                result.append("\n");
            }
        }

        return result.toString();
    }
}
```

This Java method does the same thing as your Python function: it formats a string by prepending `"> "` to each non-empty line and ensuring proper formatting of code blocks. It uses a `StringBuilder` to build up the result string efficiently. Note that Java doesn't have type hints like Python, so the parameter and return types are specified explicitly.