Hereâ€™s the equivalent TypeScript code for the provided Python function, maintaining its functionality, structure, and logic while adapting to TypeScript's syntax and type system:

```typescript
function isValidEmail(email: string | null): boolean {
    /** 
     * Checks whether the given string is a valid email address.
     *
     * @param email - The string to be checked.
     * @returns True if the string is a valid email address, False otherwise.
     */
    if (email === null) {  // TypeScript uses null for null values
        return false;  // null is not a valid email
    }

    const EMAIL_REGEX: RegExp = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
    return EMAIL_REGEX.test(email);  // Use the test method for regex matching
}
```

### Key Differences Explained:
1. **Type Annotations**: In TypeScript, types are explicitly defined. The function parameter is defined as `string | null` to handle the possibility of a null input.
2. **Regex Compilation**: TypeScript uses `RegExp` directly without needing to compile the regex with a separate method.
3. **Regex Test**: The `.test()` method is used instead of `.match()` for a straightforward boolean return indicating if the string matches the regex pattern.