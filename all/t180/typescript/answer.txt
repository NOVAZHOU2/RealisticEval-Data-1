To convert the provided Python code into TypeScript, hereâ€™s the equivalent implementation, ensuring to adapt for TypeScript's type system:

```typescript
function binarySearchClosest(array: number[], target: number): number {
    let left = 0;
    let right = array.length - 1;

    while (left <= right) {
        const mid = left + Math.floor((right - left) / 2);
        if (array[mid] === target) {
            return mid;
        } else if (array[mid] < target) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }

    if (left >= array.length) {
        return array.length - 1; // closest is the last element
    }
    if (right < 0) {
        return 0; // closest is the first element
    }

    // Check which is closer: array[left] or array[right]
    return Math.abs(array[left] - target) < Math.abs(array[right] - target) ? left : right;
}
```

This TypeScript code retains the same structure and logic as the Python version, adapting types and syntax as necessary.