Certainly! Below is the equivalent TypeScript test case using Jest for the given Python `unittest` test class:

```typescript
import { describe, it, expect } from '@jest/globals';

function isCompliantFourDigit(number: number): boolean {
    /**
     * Determine whether a number is a compliant four-digit number
     * @param number - The number to check.
     * @returns True if the number is a compliant four-digit number, False otherwise.
     */
    return number >= 1000 && number <= 9999;
}

describe('isCompliantFourDigit', () => {
    it('should return true for a four-digit number', () => {
        expect(isCompliantFourDigit(1234)).toBe(true);
    });

    it('should return false for a number less than 1000', () => {
        expect(isCompliantFourDigit(999)).toBe(false);
    });

    it('should return false for a number greater than 9999', () => {
        expect(isCompliantFourDigit(10000)).toBe(false);
    });

    it('should return false for a non-integer', () => {
        expect(() => isCompliantFourDigit(123.45)).toThrowError('number must be an integer');
    });
});
```

### Explanation:
1. **Function Definition**: The function `isCompliantFourDigit` is defined in TypeScript with type annotations.
2. **Jest Descriptions and Tests**:
   - `describe`: Groups related tests together.
   - `it`: Defines individual test cases.
   - `expect`: Used to assert conditions.
   - `toBe`: Checks if the value matches the expected result.
   - `toThrowError`: Checks if a function throws an error when called.

This TypeScript test case ensures that the `isCompliantFourDigit` function behaves as expected for various inputs.