Certainly! Hereâ€™s the Java code signature with the same comments and structure as the JavaScript code signature you provided. I will also include the implementation using the `org.apache.commons.lang3.StringEscapeUtils` utility class.

First, ensure you have the Apache Commons Lang dependency added to your project:

```xml
<dependencies>
  <dependency>
    <groupId>org.apache.commons</groupId>
    <artifactId>commons-lang3</artifactId>
    <version>3.12.0</version>
  </dependency>
</dependencies>
```

Here is the Java code:

```java
import org.apache.commons.lang3.StringEscapeUtils;

/**
 * Decodes HTML entities in a given HTML string.
 * @param htmlString The HTML string containing entities to decode.
 * @return The decoded string with HTML entities converted back to their original characters.
 */
public class HtmlEntityDecoder {

    /**
     * Decodes HTML entities in a given HTML string.
     * @param htmlString The HTML string containing entities to decode.
     * @return The decoded string with HTML entities converted back to their original characters.
     */
    public static String replaceHtmlEntities(String htmlString) {
        if (htmlString == null) {
            throw new IllegalArgumentException("Input must be a string.");
        }

        // Use StringEscapeUtils to decode HTML entities
        return StringEscapeUtils.unescapeHtml4(htmlString);
    }

    public static void main(String[] args) {
        String htmlString = "Hello &amp; Welcome &lt;World&gt;!";
        String decodedString = replaceHtmlEntities(htmlString);
        System.out.println(decodedString); // Output: Hello & Welcome <World>!
    }
}
```

### Explanation:
1. **Import Statement**: Import the `StringEscapeUtils` class from the Apache Commons Lang library.
2. **Class Definition**: Define a class named `HtmlEntityDecoder`.
3. **Method Signature**: Define a static method `replaceHtmlEntities` with the same comments and parameters as the JavaScript function.
4. **Null Check**: Throw an `IllegalArgumentException` if the input string is null.
5. **Decoding HTML Entities**: Use `StringEscapeUtils.unescapeHtml4` to decode HTML entities.
6. **Main Method**: Include a `main` method to demonstrate the usage of the `replaceHtmlEntities` method.

This ensures that the Java code maintains the same functionality and comments as the original JavaScript code.