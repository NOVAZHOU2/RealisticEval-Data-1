To convert the provided JavaScript function for decoding HTML entities into Python, you can use the html module from Python's standard library. This module provides a simple way to handle HTML entities.
Hereâ€™s how the JavaScript code can be translated into Python:
Converted Python Code
python
import html

def replace_html_entities(html_string: str) -> str:
    """
    Decodes HTML entities in a given HTML string.

    Args:
        html_string (str): The HTML string containing entities to decode.

    Returns:
        str: The decoded string with HTML entities converted back to their original characters.
    
    Raises:
        TypeError: If the input is not a string.
    """
    if not isinstance(html_string, str):
        raise TypeError('Input must be a string.')

    # Use html.unescape to decode HTML entities
    return html.unescape(html_string)
Explanation:
Imports:
import html: This imports the built-in HTML module which has utilities for handling HTML entities.
Function Definition:
The function is defined as replace_html_entities, which follows Python's naming convention (snake_case).
It takes a single parameter, html_string, which is annotated with the type str.
Docstring:
The docstring provides a detailed explanation of the function, its parameters, return value, and potential exceptions raised.
Type Checking:
The function checks if the input html_string is a string using isinstance(). If not, it raises a TypeError.
Decoding HTML Entities:
The html.unescape() function is used to decode the HTML entities present in the input string. This function effectively converts entities like &amp;, &lt;, and &gt; back to their original characters (&, <, >).
Example Usage
Here's how you can use the function:
python
html_input = "The &lt;div&gt; element is &quot;great&quot; &amp; useful."
decoded_string = replace_html_entities(html_input)
print(decoded_string)  # Output: The <div> element is "great" & useful.
This implementation replicates the functionality of the JavaScript code, ensuring that HTML entities are decoded correctly in Python.