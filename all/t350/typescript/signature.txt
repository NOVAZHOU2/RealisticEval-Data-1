Here's the equivalent TypeScript code for the provided Python function, including the necessary type annotations and JSDoc documentation comments:

```typescript
/**
 * Converts a byte array into its corresponding hexadecimal string representation.
 *
 * @param byteArray - An array of bytes to be converted into a hexadecimal string.
 * @returns A string representing the hexadecimal values of the bytes in the input array. If the input array is empty, returns an empty string.
 */
function byteArrayToHexString(byteArray: Uint8Array): string {
    return Array.from(byteArray)
        .map(b => b.toString(16).padStart(2, '0').toUpperCase())
        .join('');
}
```

### Key Changes:
1. **Type Conversion**: The Python `bytes` type is converted to TypeScript's `Uint8Array`.
2. **Mapping and Formatting**: The list comprehension in Python is replaced with `Array.from()` and `map()` in TypeScript, using `toString(16)` for conversion to hexadecimal.
3. **Documentation Comments**: Python docstrings are converted to JSDoc style comments for TypeScript.