Sure! Here is the equivalent TypeScript code for the provided Python function:

```typescript
function convertScoreToDecimal(scoreStr: string): number | null {
    try {
        // Check if the score is a fraction
        if (scoreStr.includes('/')) {
            const [numerator, denominator] = scoreStr.split('/');
            const decimalValue = parseFloat(numerator) / parseFloat(denominator);
            return decimalValue;
        } else {
            // Otherwise, treat it as a decimal
            const decimalValue = parseFloat(scoreStr);
            return decimalValue;
        }

    } catch (error) {
        if (error instanceof Error) {
            console.error(`Error converting '${scoreStr}' to decimal: ${error.message}`);
        }
        return null;
    }
}
```

### Explanation:
1. **Function Definition**: 
   - The function `convertScoreToDecimal` is defined with a parameter `scoreStr` of type `string`.
   - The return type is `number | null`, indicating that the function can return either a number or `null`.

2. **Try-Catch Block**:
   - The `try` block contains the main logic for converting the string to a decimal.
   - The `catch` block handles exceptions by logging an error message and returning `null`.

3. **Fraction Handling**:
   - If the string contains a `/`, it is considered a fraction. The string is split using `/`, and the resulting parts are converted to floats and divided.
   
4. **Decimal Handling**:
   - If the string does not contain a `/`, it is treated as a decimal and converted directly to a float.

5. **Error Handling**:
   - The `catch` block checks if the caught error is an instance of `Error` and logs the error message. It then returns `null`.

This TypeScript code maintains the same functionality and logic as the original Python code, while adapting to TypeScript's static type system and syntax.