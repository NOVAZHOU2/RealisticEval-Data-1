Sure! Below is the equivalent TypeScript test case using Jest for the provided Python function `convert_score_to_decimal`.

```typescript
import { describe, it, expect } from '@jest/globals';
import { convertScoreToDecimal } from './path-to-your-module'; // Adjust the import path accordingly

describe('convertScoreToDecimal', () => {
    it('should convert a decimal score to a float', () => {
        const scoreStr = '9.5';
        const result = convertScoreToDecimal(scoreStr);
        expect(result).toBe(9.5);
    });

    it('should convert a fraction score to a float', () => {
        const scoreStr = '10/4';
        const result = convertScoreToDecimal(scoreStr);
        expect(result).toBe(2.5);
    });

    it('should return null for an invalid input', () => {
        const scoreStr = 'abc';
        const result = convertScoreToDecimal(scoreStr);
        expect(result).toBeNull();
    });
});
```

In this TypeScript test case:
- We use the `@jest/globals` module to access the `describe`, `it`, and `expect` functions provided by Jest.
- We import the `convertScoreToDecimal` function from your module. Make sure to adjust the import path to where your function is located.
- We create three test cases to cover different scenarios: converting a decimal score, converting a fraction score, and handling an invalid input.

Make sure you have Jest installed in your project. If not, you can install it using npm:

```sh
npm install --save-dev jest
```

Then, you can run your tests using:

```sh
npx jest
```