Certainly! Below is the Java code equivalent to the provided JavaScript code. This Java code uses the `org.tonaljs` library to handle musical notes and intervals similarly to how the JavaScript version does.

First, you need to add the TonalJS library to your Java project. Since TonalJS is primarily a JavaScript library, you might need to find or create a Java equivalent. For this example, I'll assume you have a similar library available or you can use a music theory library like `jmusic`.

Here's the Java code:

```java
import org.tonaljs.Note;
import org.tonaljs.Interval;

import java.util.ArrayList;
import java.util.List;

public class CircleOfFifthsGenerator {

    /**
     * Generates a cyclic tone sequence of five degrees of length 12 starting with the specified starting note.
     *
     * @param startingNote The musical note to start the Circle of Fifths from (e.g., "C").
     * @return A list representing the Circle of Fifths.
     */
    public static List<String> createCircleOfFifths(String startingNote) {
        String currentNote = startingNote;  // Initialize with the starting note
        List<String> circle = new ArrayList<>();  // Start the circle with the initial note
        circle.add(currentNote);  // Add the starting note to the circle

        // Loop to generate the next 11 notes in the circle
        for (int i = 0; i < 11; i++) {
            // Transpose the current note up by a perfect fifth (P5)
            currentNote = Note.transpose(currentNote, Interval.get("P5"));
            circle.add(currentNote);  // Add the transposed note to the circle
        }

        return circle;  // Return the full Circle of Fifths
    }

    public static void main(String[] args) {
        List<String> circle = createCircleOfFifths("C");
        System.out.println(circle);
    }
}
```

### Notes:
1. **Dependencies**: Ensure that you have the necessary dependencies for handling musical notes and intervals. You may need to find or create a Java library that provides similar functionality to `@tonaljs/tonal`.
2. **Class and Method Structure**: The code is structured within a class named `CircleOfFifthsGenerator` with a static method `createCircleOfFifths` that performs the same functionality as the JavaScript function.
3. **List Initialization**: In Java, we use an `ArrayList` to dynamically grow the list of notes.
4. **Transposition**: The `Note.transpose` and `Interval.get` methods are assumed to be part of the music theory library you're using.

Make sure to adjust the import statements and class names based on the actual library you are using for music theory in Java.