# Function Generated by ChatGPT
def _rainboxHexGenerator(num_intermediates, include_endpoints=False):
    # List of main rainbow colors
    rainbow_colors = [
        "#FF0000",  # Red
        "#FF7F00",  # Orange
        "#FFFF00",  # Yellow
        "#00FF00",  # Green
        "#0000FF",  # Blue
        "#4B0082",  # Indigo
        "#8A2BE2"  # Violet
    ]
    # If no intermediates requested, return the main colors
    if num_intermediates < 1:
        return rainbow_colors
    full_spectrum = []
    # Generate intermediaries between main colors
    for i in range(len(rainbow_colors) - 1):
        current_color = rainbow_colors[i]
        next_color = rainbow_colors[i + 1]
        full_spectrum.append(current_color)
        for j in range(num_intermediates):
            # Calculate RGB values for intermediate color
            r1, g1, b1 = int(current_color[1:3], 16), int(current_color[3:5], 16), int(current_color[5:7], 16)
            r2, g2, b2 = int(next_color[1:3], 16), int(next_color[3:5], 16), int(next_color[5:7], 16)
            r_int = int(r1 + (j * (r2 - r1) / num_intermediates))
            g_int = int(g1 + (j * (g2 - g1) / num_intermediates))
            b_int = int(b1 + (j * (b2 - b1) / num_intermediates))
            hex_code = "#{:02X}{:02X}{:02X}".format(r_int, g_int, b_int)
            full_spectrum.append(hex_code)

    # Include intermediaries between violet and red if requested
    if include_endpoints:
        for j in range(num_intermediates):
            r1, g1, b1 = int(rainbow_colors[-1][1:3], 16), int(rainbow_colors[-1][3:5], 16), int(
                rainbow_colors[-1][5:7], 16)
            r2, g2, b2 = int(rainbow_colors[0][1:3], 16), int(rainbow_colors[0][3:5], 16), int(rainbow_colors[0][5:7],
                                                                                               16)
            r_int = int(r1 + (j * (r2 - r1) / num_intermediates))
            g_int = int(g1 + (j * (g2 - g1) / num_intermediates))
            b_int = int(b1 + (j * (b2 - b1) / num_intermediates))
            hex_code = "#{:02X}{:02X}{:02X}".format(r_int, g_int, b_int)
            full_spectrum.append(hex_code)

    # Append the last color (violet) if not including violet-to-red intermediaries
    if not include_endpoints:
        full_spectrum.append(rainbow_colors[-1])
    return full_spectrum
