Hereâ€™s the C++ code signature that matches the TypeScript function, including the comments:

```cpp
#include <map>
#include <string>
#include <variant>

/**
 * Type definition for a plain object.
 */
using PlainObject = std::map<std::string, std::variant<std::nullptr_t, int, double, std::string, PlainObject>>;

/**
 * Deeply merges two objects.
 * If properties are objects in both objects, they are recursively merged.
 * If a property exists in both objects but is not an object, the value from obj1 is used.
 *
 * @param obj1 - The first object to merge.
 * @param obj2 - The second object to merge.
 * @returns A new object that is the result of the merge.
 */
PlainObject deepMergeObjects(const PlainObject& obj1, const PlainObject& obj2);
```

### Key Changes:
- The function signature now uses `const PlainObject&` for parameters, reflecting C++ syntax.
- The return type is `PlainObject`, consistent with the original TypeScript signature.