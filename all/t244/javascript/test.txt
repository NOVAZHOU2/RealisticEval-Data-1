Sure! Below is the equivalent JavaScript test case using Jest for the provided Python unittest test class. Note that I'll assume you have a function `methodArgTypeCheck` similar to the one in your Python code.

```javascript
const { describe, it, expect } = require('@jest/globals');
const { methodArgTypeCheck } = require('./path-to-your-module'); // Adjust the path accordingly

describe('methodArgTypeCheck', () => {
  it('should throw an error if the arguments do not match the expected types', () => {
    const mockMethod = jest.fn();

    const mockClass = class {
      constructor() {
        this.method = mockMethod;
      }
    };

    const instance = new mockClass();
    const mockFunction = instance.method;

    expect(() => {
      methodArgTypeCheck(mockFunction, 'invalidArgument');
    }).toThrowError('Invalid argument type');
  });

  it('should not throw an error if the arguments match the expected types', () => {
    const mockMethod = jest.fn((arg1, arg2) => {});

    const mockClass = class {
      constructor() {
        this.method = mockMethod;
      }
    };

    const instance = new mockClass();
    const mockFunction = instance.method;

    expect(() => {
      methodArgTypeCheck(mockFunction, 'validArgument1', 'validArgument2');
    }).not.toThrowError();
  });

  it('should ignore excluded parameters', () => {
    const mockMethod = jest.fn((arg1, arg2) => {});

    const mockClass = class {
      constructor() {
        this.method = mockMethod;
      }
    };

    const instance = new mockClass();
    const mockFunction = instance.method;

    expect(() => {
      methodArgTypeCheck(mockFunction, 'validArgument1', 'validArgument2', { exclude: ['arg1'] });
    }).not.toThrowError();
  });
});
```

### Explanation:
1. **Imports**: We import `describe`, `it`, and `expect` from Jest and the `methodArgTypeCheck` function from your module.
2. **Describe Block**: We create a `describe` block for our test suite.
3. **It Blocks**: We define multiple `it` blocks for different scenarios:
   - One checks if the function throws an error when the arguments do not match the expected types.
   - Another checks if the function does not throw an error when the arguments match the expected types.
   - A third checks if excluded parameters are ignored during the type check.

Make sure to adjust the path to your module where `methodArgTypeCheck` is defined. This should give you a good starting point for testing your JavaScript function using Jest.