Sure! Below is the equivalent TypeScript code signature for the provided Python function `method_arg_type_check`. I've kept the comments intact and ensured that the function signature matches the original Python code.

```typescript
/**
 * Checks that the arguments passed to a given method object (e.g., method of a class) comply with their
 * expected question types, based on the method's signature. If there's a discrepancy, it raises a ValueError.
 *
 * @param methodObj - The method for which arguments are checked.
 * @param args - Positional arguments passed to the method.
 * @param kwargs - Keyword arguments passed to the method.
 *
 * @returns Nothing, but throws an error if there's a discrepancy in argument types.
 */
function methodArgTypeCheck(methodObj: (...args: any[]) => any, ...args: any[], ...kwargs: any[]): void;
```

In TypeScript, we use the `...` syntax to represent variable-length argument lists (`*args` and `**kwargs` in Python). The `any[]` type indicates that these arguments can be of any type. The return type is `void`, indicating that the function does not return anything but may throw an error.