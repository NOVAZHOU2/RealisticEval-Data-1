Hereâ€™s how you can convert the TypeScript Jest test cases to Java JUnit 4 test cases for the `Tester` class in the `org.real.temp` package:

```java
package org.real.temp;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class Tester {

    @Test
    public void testBytesToSize_KB() {
        assertEquals("1.00 KB", ByteConverter.bytesToSize(1024));
        assertEquals("2.00 KB", ByteConverter.bytesToSize(2048));
    }

    @Test
    public void testBytesToSize_MB() {
        assertEquals("1.00 MB", ByteConverter.bytesToSize(1048576));
        assertEquals("2.00 MB", ByteConverter.bytesToSize(2097152));
    }

    @Test
    public void testBytesToSize_GB() {
        assertEquals("1.00 GB", ByteConverter.bytesToSize(1073741824));
        assertEquals("2.00 GB", ByteConverter.bytesToSize(2147483648L));
    }

    @Test
    public void testBytesToSize_TB() {
        assertEquals("1.00 TB", ByteConverter.bytesToSize(1099511627776L));
        assertEquals("2.00 TB", ByteConverter.bytesToSize(2199023255552L));
    }
}
```

### Key Changes:
1. **Annotations**: Used `@Test` from JUnit to define test methods.
2. **Assertions**: Replaced `expect(...).toBe(...)` with `assertEquals(...)`.
3. **Method Calls**: The method `bytesToSize` is called on the `ByteConverter` class.
4. **Long Literals**: For values that exceed the integer range, suffixed them with `L` to indicate they are `long` literals.