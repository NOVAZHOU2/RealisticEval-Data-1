Here's how you can translate the Python function signature into Java:

```java
import java.util.HashMap;
import java.util.Map;

/**
 * Reads multiple sequences from the file and determines if each sequence is a "Munodi sequence".
 * The definition of the Munodi sequence is based on a specific recursive relationship,
 * that is, for even numbers, the next term is half of it, for odd numbers, the next term is 3*n + 1,
 * and the sequence terminates when it encounters 1.
 * For example: (2, 4, 6, 8) is Mundi sequence
 *
 * @param filename String representing the file path
 * @return Map<String, Boolean> indicating whether each sequence is a Munodi sequence or not
 */
public class SequenceChecker {
    
    public static Map<String, Boolean> checkSequences(String filename) {
        // Implementation goes here...
    }
}
```

This Java method `checkSequences` does the same thing as your Python function: it reads sequences from a file and checks if they are Munodi sequences. The return type in Java is `Map<String, Boolean>` instead of `Dict`, because Java doesn't have a built-in dictionary type like Python does. Instead, we use `HashMap`. Also, note that in Java, all methods must belong to a class, so I've wrapped the method inside a class named `SequenceChecker`.