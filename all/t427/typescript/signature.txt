Sure, here's the equivalent TypeScript code with appropriate documentation comments:

```typescript
/**
 * Reads multiple sequences from the file and determines if each sequence is a "Munodi sequence".
 * The definition of the Munodi sequence is based on a specific recursive relationship,
 * that is, for even numbers, the next term is half of it, for odd numbers, the next term is 3*n + 1,
 * and the sequence terminates when it encounters 1.
 * For example: (2, 4, 6, 8) is a Munodi sequence.
 *
 * @param filename - The file path.
 * @returns A dictionary indicating whether each sequence is a Munodi sequence.
 */
function checkSequences(filename: string): Record<string, boolean> {
    // Implementation goes here
}
```

In this TypeScript code:
- The `check_sequences` function is renamed to `checkSequences` to follow the camelCase naming convention commonly used in TypeScript.
- The return type `Dict` is replaced with `Record<string, boolean>` to represent a dictionary where keys are strings and values are booleans.
- The Python docstring is converted to JSDoc comments, which are commonly used in TypeScript for documentation and type checking.

Feel free to add the implementation details inside the function body as needed.