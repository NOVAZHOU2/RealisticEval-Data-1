Certainly! Below is the equivalent Java code for the JavaScript function you provided:

```java
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

/**
 * Gets the current date and returns it as YYYY-MM-DD
 *
 * @return String The current date formatted as YYYY-MM-DD.
 */
public class DateUtil {
    public static String getCurrentDate() {
        LocalDate currentDate = LocalDate.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        return currentDate.format(formatter);
    }

    public static void main(String[] args) {
        System.out.println(getCurrentDate());
    }
}
```

### Explanation:
1. **Import Statements**: We import `LocalDate` and `DateTimeFormatter` from the `java.time` package, which provides classes for date-time handling in Java 8 and later.
2. **Class Definition**: We define a class named `DateUtil`.
3. **Method Definition**: We define a static method `getCurrentDate()` that returns the current date formatted as `YYYY-MM-DD`.
4. **Formatting**: We use `DateTimeFormatter.ofPattern("yyyy-MM-dd")` to create a formatter that matches the desired date format.
5. **Main Method**: We include a `main` method to demonstrate how to call the `getCurrentDate()` method and print the result.

This Java code will provide the same functionality as your JavaScript function, returning the current date in the `YYYY-MM-DD` format.