Sure! Below is the equivalent C++ test case using Catch2 for the provided Python unittest test function `bits_to_bytes`. 

```cpp
#include <catch2/catch.hpp>
#include <vector>
#include <array>

std::vector<uint8_t> bits_to_bytes(const std::vector<int>& bits) {
    /**
     * Convert an array of binary bits to an array of bytes. Traversing through each bit, composing these bits into bytes,
     * forming a byte every 8 bits, and then storing these bytes in an array and returning it. If the length of the bit array
     * is not a multiple of 8, the last incomplete byte will be discarded.
     *
     * @param bits: The input array of bits (each element should be 0 or 1).
     * @return: An array of bytes constructed from the bits.
     */
    std::vector<uint8_t> result;
    int current_byte = 0;
    int bit_count = 0;

    for (int bit : bits) {
        if (bit != 0 && bit != 1) {
            throw std::invalid_argument("Input contains non-binary values");
        }
        current_byte = (current_byte << 1) | bit;
        ++bit_count;

        if (bit_count == 8) {
            result.push_back(static_cast<uint8_t>(current_byte));
            current_byte = 0;
            bit_count = 0;
        }
    }

    return result;
}

TEST_CASE("bits_to_bytes", "[bits_to_bytes]") {
    SECTION("Empty input") {
        REQUIRE(bits_to_bytes({}) == std::vector<uint8_t>{});
    }

    SECTION("Multiple of 8 bits") {
        REQUIRE(bits_to_bytes({1, 0, 1, 0, 1, 0, 1, 0}) == std::vector<uint8_t>{0b10101010});
    }

    SECTION("Not multiple of 8 bits") {
        REQUIRE(bits_to_bytes({1, 0, 1, 0, 1, 0, 1, 0, 1}) == std::vector<uint8_t>{0b10101010});
    }

    SECTION("Non-binary values") {
        CHECK_THROWS_WITH(bits_to_bytes({1, 0, 2, 0, 1}), "Input contains non-binary values");
    }
}
```

### Explanation:
1. **Function Implementation**: The `bits_to_bytes` function converts an array of binary bits to an array of bytes. It handles cases where the length of the bit array is not a multiple of 8 by discarding the last incomplete byte.
2. **Catch2 Test Cases**:
   - **Empty Input**: Tests the function with an empty input vector.
   - **Multiple of 8 Bits**: Tests the function with a bit array whose length is a multiple of 8.
   - **Not Multiple of 8 Bits**: Tests the function with a bit array whose length is not a multiple of 8.
   - **Non-Binary Values**: Tests the function with an input containing non-binary values to ensure it throws an exception.

Make sure you have Catch2 installed and properly configured in your development environment to compile and run these tests.