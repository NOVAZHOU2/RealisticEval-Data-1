Sure, here's how you can convert the given Python unittest test class to TypeScript using Jest:

```typescript
import { bitsToBytes } from './bitsToBytes'; // Adjust the import path accordingly

describe('bitsToBytes', () => {
  it('converts an array of binary bits to an array of bytes', () => {
    const bits: number[] = [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1];
    const expectedBytes: Uint8Array = new Uint8Array([255]);

    expect(bitsToBytes(bits)).toEqual(expectedBytes);
  });

  it('discards the last incomplete byte if the length of the bit array is not a multiple of 8', () => {
    const bits: number[] = [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0];
    const expectedBytes: Uint8Array = new Uint8Array([255]);

    expect(bitsToBytes(bits)).toEqual(expectedBytes);
  });
});
```

In this example, we assume that the `bitsToBytes` function is implemented in a file named `bitsToBytes.ts`. Make sure to adjust the import path accordingly.

The `describe` block groups related tests together, and the `it` blocks define individual test cases. The `expect` function is used to assert the expected outcomes of the `bitsToBytes` function.