Here's how you can write a Jest test case for the `bits_to_bytes` function in JavaScript:

```javascript
const { bitsToBytes } = require('./your-file-name'); // replace 'your-file-name' with the actual file name where your bitsToBytes function resides

describe('bitsToBytes', () => {
    test('should convert bits to bytes correctly', () => {
        const bits = [0, 0, 0, 0, 0, 0, 0, 1]; 
        const expectedOutput = new Uint8Array([1]);
        expect(bitsToBytes(bits)).toEqual(expectedOutput);
    });

    test('should discard incomplete byte if length is not multiple of 8', () => {
        const bits = [0, 0, 0, 0, 0, 0, 1];
        const expectedOutput = new Uint8Array([]);
        expect(bitsToBytes(bits)).toEqual(expectedOutput);
    });
});
```

In the above code, we're assuming that the `bitsToBytes` function is exported from a module named 'your-file-name'. Replace 'your-file-name' with the actual filename where your `bitsToBytes` function resides.

Also, please note that Jest uses `expect()` and `test()` functions instead of Python's `assert` and `unittest.TestCase`. 

Lastly, make sure you have installed `jest` in your project. You can install it using npm (`npm install --save-dev jest`) or yarn (`yarn add --dev jest`). After installing, you can run your tests using `npx jest` command.