Here’s how to convert the provided TypeScript code into Python:
Converted Python Code
python
import re

def is_kebab_case(input: str) -> bool:
    """
    Detects whether the string is in KEBAB_CASE.

    :param input: The string to check.
    :return: True if the string is in KEBAB_CASE, otherwise False.
    """
    # Regular expression to match KEBAB_CASE
    kebab_case_regex = r'^[a-z]+(-[a-z]+)*$'
    return bool(re.match(kebab_case_regex, input))
Explanation:
Importing the re Module:
The re module is imported to use regular expressions in Python.
Function Definition:
The function is_kebab_case takes a single parameter input of type str and returns a bool.
Docstring:
A docstring is included to describe the function, its parameter, and its return value, similar to the original TypeScript comments.
Regular Expression:
The regular expression pattern is written as a raw string (r'...') to avoid issues with escape characters.
Matching:
The re.match() function is used to check if the input string matches the kebab_case_regex pattern. It returns a match object if the pattern matches, and None otherwise.
We use bool() to convert the result of re.match() into a boolean value, returning True if there’s a match and False if there isn’t.
This Python function will effectively replicate the functionality of the original TypeScript function for detecting KEBAB_CASE strings.