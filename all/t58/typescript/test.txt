To convert the given Python unittest test class to TypeScript using Jest, we need to follow these steps:

1. Define the function `probability_of_red_balls` in TypeScript.
2. Write Jest tests for the function.

Here's how you can do it:

### Step 1: Define the Function

First, let's define the function `probability_of_red_balls` in TypeScript:

```typescript
function probability_of_red_balls(n: number, x: number, y: number): number {
    if (n < 0 || n > x || x + y < n) {
        return 0;
    }

    const comb = (a: number, b: number): number => {
        if (b === 0 || b === a) return 1;
        return comb(a - 1, b - 1) + comb(a - 1, b);
    };

    const totalWays = comb(x + y, n);
    const favorableWays = comb(x, n) * comb(y, n - x);

    return favorableWays / totalWays;
}
```

### Step 2: Write Jest Tests

Next, let's write Jest tests for the function. Create a file named `probability.test.ts`:

```typescript
import { probability_of_red_balls } from './probability';

describe('probability_of_red_balls', () => {
    test('should calculate the probability correctly', () => {
        expect(probability_of_red_balls(3, 5, 10)).toBeCloseTo(0.2667);
        expect(probability_of_red_balls(2, 4, 6)).toBeCloseTo(0.4286);
        expect(probability_of_red_balls(0, 3, 7)).toBeCloseTo(0.3125);
        expect(probability_of_red_balls(5, 5, 5)).toBeCloseTo(0.2461);
        expect(probability_of_red_balls(1, 0, 0)).toBe(0);
        expect(probability_of_red_balls(3, 3, 0)).toBe(0);
        expect(probability_of_red_balls(3, 0, 3)).toBe(0);
        expect(probability_of_red_balls(3, 3, 3)).toBeCloseTo(0.2963);
    });

    test('should handle edge cases', () => {
        expect(probability_of_red_balls(-1, 5, 10)).toBe(0);
        expect(probability_of_red_balls(6, 5, 10)).toBe(0);
        expect(probability_of_red_balls(3, 2, 1)).toBe(0);
    });
});
```

### Step 3: Run the Tests

To run the tests, make sure you have Jest installed in your project. If not, you can install it using npm or yarn:

```bash
npm install --save-dev jest
# or
yarn add --dev jest
```

Then, create a `jest.config.js` file if you haven't already:

```javascript
module.exports = {
    preset: 'ts-jest',
    testEnvironment: 'node',
};
```

Finally, run the tests using the following command:

```bash
npx jest
# or
yarn jest
```

This should give you the output of your Jest tests, showing whether they pass or fail.