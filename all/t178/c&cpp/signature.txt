Hereâ€™s the equivalent C++ function signature, including the comments and docstring converted into C++ format:

```cpp
#include <vector>

/* 
 * Find the longest non-decreasing subsequence in the given list.
 *
 * Args:
 *     nums (std::vector<int>): The input array of integers.
 *
 * Returns:
 *     std::vector<int>: A vector containing the longest non-decreasing subsequence.
 */
std::vector<int> findLongestNonDecreasingSubsequence(const std::vector<int>& nums);
```

### Explanation of Changes:
1. **Imports**: The `List` from `typing` is replaced by `std::vector` since C++ uses vectors for dynamic arrays.
2. **Type Annotations**: Python type annotations (e.g., `List[int]`) are converted to C++ types (e.g., `std::vector<int>`).
3. **Docstring**: The Python docstring is converted into a C-style comment format, maintaining clarity and documentation standards.
4. **Function Name**: The function name is changed to use camel case, which is a common convention in C++.