Hereâ€™s the equivalent Jest test class based on the provided Python `unittest` code. I've documented the necessary changes due to language differences:

```javascript
const { findLongestNonDecreasingSubsequence } = require('./yourModule'); // Adjust the path accordingly

describe('TestAnswer', () => {
    test('non-decreasing sequence', () => {
        const nums = [5, 7, 4, 8, 6, 10, 2, 11];
        const expected = [5, 7, 8, 10, 11];
        expect(findLongestNonDecreasingSubsequence(nums)).toEqual(expected);
    });

    test('all increasing', () => {
        const nums = [1, 2, 3, 4, 5];
        const expected = [1, 2, 3, 4, 5];
        expect(findLongestNonDecreasingSubsequence(nums)).toEqual(expected);
    });

    test('all decreasing', () => {
        const nums = [5, 4, 3, 2, 1];
        const expected = [5];
        expect(findLongestNonDecreasingSubsequence(nums)).toEqual(expected);
    });

    test('single element', () => {
        const nums = [10];
        const expected = [10];
        expect(findLongestNonDecreasingSubsequence(nums)).toEqual(expected);
    });

    test('empty array', () => {
        const nums = [];
        const expected = [];
        expect(findLongestNonDecreasingSubsequence(nums)).toEqual(expected);
    });
});
```

### Changes Documented:
1. **Import Statement**: In Jest, you typically import the function at the top of the file. Adjust the import path as necessary.
2. **Test Structure**: `unittest.TestCase` is replaced by `describe` and `test` blocks in Jest.
3. **Assertions**: `self.assertEqual()` in Python is replaced with `expect(...).toEqual(...)` in Jest.
4. **Type Hints**: Type hints like `List[int]` are not used in JavaScript, so they're omitted. 

Let me know if you need any further adjustments!