Here's the equivalent JUnit 4 test case in Java for your Jest tests:

```java
package org.real.temp;

import org.junit.Test;
import java.util.Arrays;
import java.util.List;
import static org.junit.Assert.assertEquals;

public class Tester {

    static class Item {
        String id;
        String name;

        Item(String id, String name) {
            this.id = id;
            this.name = name;
        }

        @Override
        public boolean equals(Object obj) {
            if (this == obj) return true;
            if (obj == null || getClass() != obj.getClass()) return false;
            Item item = (Item) obj;
            return id.equals(item.id) && name.equals(item.name);
        }
    }

    @Test
    public void testMergesTwoArraysWithUniqueItems() {
        List<Item> arr1 = Arrays.asList(new Item("1", "Item 1"), new Item("2", "Item 2"));
        List<Item> arr2 = Arrays.asList(new Item("3", "Item 3"), new Item("4", "Item 4"));

        List<Item> result = Merger.mergeOrUpdate(arr1, arr2, item -> item.id);
        assertEquals(Arrays.asList(
            new Item("1", "Item 1"),
            new Item("2", "Item 2"),
            new Item("3", "Item 3"),
            new Item("4", "Item 4")), result);
    }

    @Test
    public void testUpdatesExistingItemsWhenIDsMatch() {
        List<Item> arr1 = Arrays.asList(new Item("1", "Item 1"), new Item("2", "Item 2"));
        List<Item> arr2 = Arrays.asList(new Item("2", "Updated Item 2"), new Item("3", "Item 3"));

        List<Item> result = Merger.mergeOrUpdate(arr1, arr2, item -> item.id);
        assertEquals(Arrays.asList(
            new Item("1", "Item 1"),
            new Item("2", "Updated Item 2"),
            new Item("3", "Item 3")), result);
    }

    @Test
    public void testHandlesEmptyArrays() {
        List<Item> arr1 = Arrays.asList();
        List<Item> arr2 = Arrays.asList();

        List<Item> result = Merger.mergeOrUpdate(arr1, arr2, item -> item.id);
        assertEquals(Arrays.asList(), result);
    }

    @Test
    public void testMergesWithAnEmptyFirstArray() {
        List<Item> arr1 = Arrays.asList();
        List<Item> arr2 = Arrays.asList(new Item("1", "Item 1"), new Item("2", "Item 2"));

        List<Item> result = Merger.mergeOrUpdate(arr1, arr2, item -> item.id);
        assertEquals(Arrays.asList(
            new Item("1", "Item 1"),
            new Item("2", "Item 2")), result);
    }

    @Test
    public void testMergesWithAnEmptySecondArray() {
        List<Item> arr1 = Arrays.asList(new Item("1", "Item 1"), new Item("2", "Item 2"));
        List<Item> arr2 = Arrays.asList();

        List<Item> result = Merger.mergeOrUpdate(arr1, arr2, item -> item.id);
        assertEquals(Arrays.asList(
            new Item("1", "Item 1"),
            new Item("2", "Item 2")), result);
    }

    @Test
    public void testHandlesDuplicateIDsInTheFirstArray() {
        List<Item> arr1 = Arrays.asList(new Item("1", "Item 1"), new Item("1", "Duplicate Item 1"));
        List<Item> arr2 = Arrays.asList(new Item("2", "Item 2"));

        List<Item> result = Merger.mergeOrUpdate(arr1, arr2, item -> item.id);
        assertEquals(Arrays.asList(
            new Item("1", "Duplicate Item 1"),
            new Item("2", "Item 2")), result);
    }

    @Test
    public void testHandlesDuplicateIDsInTheSecondArray() {
        List<Item> arr1 = Arrays.asList(new Item("1", "Item 1"));
        List<Item> arr2 = Arrays.asList(new Item("2", "Item 2"), new Item("2", "Duplicate Item 2"));

        List<Item> result = Merger.mergeOrUpdate(arr1, arr2, item -> item.id);
        assertEquals(Arrays.asList(
            new Item("1", "Item 1"),
            new Item("2", "Duplicate Item 2")), result);
    }

    @Test
    public void testMergesArraysWithMixedUniqueAndDuplicateIDs() {
        List<Item> arr1 = Arrays.asList(new Item("1", "Item 1"), new Item("2", "Item 2"));
        List<Item> arr2 = Arrays.asList(
            new Item("2", "Updated Item 2"),
            new Item("3", "Item 3"),
            new Item("1", "New Item 1"));

        List<Item> result = Merger.mergeOrUpdate(arr1, arr2, item -> item.id);
        assertEquals(Arrays.asList(
            new Item("1", "New Item 1"),
            new Item("2", "Updated Item 2"),
            new Item("3", "Item 3")), result);
    }
}
```

This Java code uses JUnit 4 for the test cases and matches the structure and logic of your Jest tests.