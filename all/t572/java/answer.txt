Here's the equivalent Java code for your TypeScript function:

```java
import java.util.*;

public class Merger {
    public static <O> List<O> mergeOrUpdate(List<O> arr1, List<O> arr2, Function<O, String> getId) {
        Map<String, O> itemMap = new HashMap<>();

        // Helper function to add items to the map
        Consumer<List<O>> addItemsToMap = (arr) -> {
            for (O item : arr) {
                String id = getId.apply(item);
                itemMap.put(id, item); // Replace if already exists
            }
        };

        // Add items from both arrays to the map
        addItemsToMap.accept(arr1);
        addItemsToMap.accept(arr2);

        // Convert the map values back to a list and return
        return new ArrayList<>(itemMap.values());
    }
}
```

You can use Java's `Function` and `Consumer` interfaces to replicate the behavior of passing a function and executing it.