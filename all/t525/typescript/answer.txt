Certainly! Below is the equivalent TypeScript code for the given Python function. Since TypeScript does not have a direct equivalent to NumPy, we will use the `@tensorflow/tfjs` library to handle numerical operations on tensors, which can serve as a substitute for NumPy arrays.

First, you need to install the TensorFlow.js library:

```bash
npm install @tensorflow/tfjs
```

Here is the TypeScript code:

```typescript
import * as tf from '@tensorflow/tfjs';

function flipPointCloud(pointCloud: tf.Tensor, axis: number): tf.Tensor {
    /**
     * Flip the point cloud across a specified axis.
     *
     * Parameters:
     * - pointCloud: A N x 3 tensor representing the 3D point cloud.
     * - axis: An integer specifying the axis to flip (0 for x, 1 for y, 2 for z).
     *
     * Returns:
     * - A N x 3 tensor of the flipped point cloud.
     */

    // Validate the axis input
    if (axis < 0 || axis > 2) {
        throw new Error("Axis must be 0 (x-axis), 1 (y-axis), or 2 (z-axis).");
    }

    // Create a scaling factor array with -1 for the specified axis and 1 for others
    const flipFactors = tf.tensor1d([1, 1, 1]);
    flipFactors.set(-1, axis);

    // Flip the point cloud by multiplying with the scaling factor array
    const flippedPointCloud = pointCloud.mul(flipFactors);

    return flippedPointCloud;
}

// Example usage
const pointCloud = tf.tensor2d([
    [1, 2, 3],
    [4, 5, 6]
]);

const axis = 1; // Flip along the y-axis

const flippedPointCloud = flipPointCloud(pointCloud, axis);
flippedPointCloud.print();
```

### Explanation:
1. **Imports**: We import TensorFlow.js using `import * as tf from '@tensorflow/tfjs';`.
2. **Function Definition**: The `flipPointCloud` function takes a `tf.Tensor` representing the point cloud and an integer `axis` indicating the axis to flip.
3. **Validation**: We check if the `axis` is within the valid range `[0, 1, 2]`.
4. **Scaling Factor Array**: We create a tensor `flipFactors` with `-1` at the specified axis and `1` elsewhere.
5. **Flipping**: We multiply the `pointCloud` tensor with the `flipFactors` tensor to flip the point cloud.
6. **Example Usage**: We demonstrate how to use the function with an example point cloud and an axis.

This TypeScript code closely mirrors the functionality of the original Python code, using TensorFlow.js tensors instead of NumPy arrays.