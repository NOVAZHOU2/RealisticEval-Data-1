To convert your Python unittest test class to JavaScript using Jest, you can follow these steps. Below is an example of how you might write a Jest test case for the `flip_point_cloud` function. Note that I'll assume you have a corresponding implementation of `flip_point_cloud` in JavaScript, and we'll focus on writing the test case.

First, let's define the `flip_point_cloud` function in JavaScript:

```javascript
function flipPointCloud(pointCloud, axis) {
    return pointCloud.map(point => {
        const newPoint = [...point];
        newPoint[axis] *= -1;
        return newPoint;
    });
}
```

Now, let's write the Jest test case for this function:

```javascript
// Import the flipPointCloud function
const { flipPointCloud } = require('./path-to-your-flip-point-cloud-function');

describe('flipPointCloud', () => {
    it('flips the point cloud across the x-axis', () => {
        const pointCloud = [
            [1, 2, 3],
            [4, 5, 6],
            [7, 8, 9]
        ];
        const expected = [
            [-1, 2, 3],
            [-4, 5, 6],
            [-7, 8, 9]
        ];

        expect(flipPointCloud(pointCloud, 0)).toEqual(expected);
    });

    it('flips the point cloud across the y-axis', () => {
        const pointCloud = [
            [1, 2, 3],
            [4, 5, 6],
            [7, 8, 9]
        ];
        const expected = [
            [1, -2, 3],
            [4, -5, 6],
            [7, -8, 9]
        ];

        expect(flipPointCloud(pointCloud, 1)).toEqual(expected);
    });

    it('flips the point cloud across the z-axis', () => {
        const pointCloud = [
            [1, 2, 3],
            [4, 5, 6],
            [7, 8, 9]
        ];
        const expected = [
            [1, 2, -3],
            [4, 5, -6],
            [7, 8, -9]
        ];

        expect(flipPointCloud(pointCloud, 2)).toEqual(expected);
    });
});
```

In this example:
- We first import the `flipPointCloud` function from the appropriate file.
- We then use the `describe` function to group our tests together under the name "flipPointCloud".
- Inside each `it` block, we provide a description of what the test is doing and use the `expect` function to assert that the output of `flipPointCloud` matches the expected result.

Make sure to replace `'./path-to-your-flip-point-cloud-function'` with the actual path to where your `flipPointCloud` function is defined.