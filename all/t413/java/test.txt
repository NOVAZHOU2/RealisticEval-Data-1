Sure! Below is the equivalent Java code using JUnit for the given Python unittest example. This includes the method `get_palindrome_list` and its corresponding test cases.

```java
package org.real.temp;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.Arrays;
import java.util.List;

public class Tester {

    // Method to get palindrome numbers up to a given range
    public List<Integer> getPalindromeList(int n) {
        return Arrays.stream(String.valueOf(n).chars().boxed().toArray())
                     .map(i -> (Integer) i)
                     .filter(this::isPalindrome)
                     .collect(Collectors.toList());
    }

    // Helper method to check if a number is a palindrome
    private boolean isPalindrome(Integer number) {
        String numStr = String.valueOf(number);
        String reversedStr = new StringBuilder(numStr).reverse().toString();
        return numStr.equals(reversedStr);
    }

    // Test cases
    @Test
    public void testGetPalindromeList() {
        // Test case 1: Check for palindromes up to 10
        assertEquals(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9), getPalindromeList(10));

        // Test case 2: Check for palindromes up to 1221
        assertEquals(Arrays.asList(11, 121), getPalindromeList(1221));
        
        // Additional test cases can be added here
    }
}
```

### Explanation:

1. **Method Definition**: The `getPalindromeList` method is defined to find all palindrome numbers up to a given range.
2. **Helper Method**: The `isPalindrome` method checks if a number is a palindrome.
3. **JUnit Test**: The `testGetPalindromeList` method contains test cases using JUnit's `@Test` annotation. It uses `assertEquals` to verify the correctness of the `getPalindromeList` method.

Please note that the implementation of `getPalindromeList` in Java is slightly different from the Python version because Java does not have the same stream and lambda capabilities as Python. However, the logic remains the same: filter out numbers that are palindromes up to the given range.