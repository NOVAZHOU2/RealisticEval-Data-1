Sure, I can help you convert the given Python code into JavaScript while maintaining the functionality, logic, and structure. Hereâ€™s how the equivalent JavaScript code would look:

```javascript
function getPalindromeList(n) {
    /**
     * Filter out the number of palindromes within any number n.
     * Palindrome numbers are numbers with the same forward and reverse readings, such as 121, 1331.
     *
     * @param {number} n - range number
     * @returns {Array<number>} - Palindrome numbers
     */
    const isPalindrome = (str) => str === str.split('').reverse().join('');
    
    const palindromes = Array.from({ length: n }, (_, i) => i)
                             .filter(x => isPalindrome(x.toString()))
                             .map(Number);
    
    return palindromes;
}

// Example usage
console.log(getPalindromeList(100));
```

### Explanation:
1. **Function Definition**: The function `getPalindromeList` takes an integer `n` as input and returns an array of palindrome numbers up to `n`.
2. **Helper Function**: A helper function `isPalindrome` is defined to check if a string is a palindrome.
3. **Array Creation**: An array is created using `Array.from` with a length of `n`, where each element is its index.
4. **Filtering Palindromes**: The `.filter` method is used to filter out elements that are palindromes by converting them to strings and checking with `isPalindrome`.
5. **Mapping to Numbers**: The `.map(Number)` converts the filtered strings back to numbers.

This JavaScript code should provide the same functionality as the original Python code.