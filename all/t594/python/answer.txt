Sure! Below is the Python equivalent of the provided C++ code. The functionality remains the same: it splits a string by commas, trims leading and trailing whitespace from each token, and stores the non-empty tokens in a list.
python
def split_comma(s):
    # Clear the output list to avoid residual data
    vect = []
    
    # Process each comma-separated token
    for token in s.split(','):
        # Trim leading and trailing whitespace
        token = token.strip()
        
        # Only add non-empty tokens to the list
        if token:
            vect.append(token)
    
    return vect

# Example usage
input_string = "  apple, banana , cherry ,  ,  date  "
result = split_comma(input_string)
print(result)  # Output: ['apple', 'banana', 'cherry', 'date']
Explanation:
The function split_comma(s) takes a string s as input.
It initializes an empty list vect to hold the results.
The string is split by commas using the split(',') method.
Each token is stripped of leading and trailing whitespace using the strip() method.
Non-empty tokens are appended to the list vect.
Finally, the list is returned.
You can replace the input_string variable with any comma-separated string to test the function!