Certainly! Here is the equivalent Java JUnit test class for the provided Python unittest class. The Java test class will be placed in the package `org.real.temp` and named `Tester`.

### Java Code

```java
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import java.util.Arrays;
import java.util.List;

public class Tester {

    @Test
    public void testStandardVectors() {
        List<Integer> vec1 = Arrays.asList(1, 2, 3);
        List<Integer> vec2 = Arrays.asList(4, 5, 6);
        int expectedResult = 27;  // (3^2 + 3^2 + 3^2)
        int result = squaredEuclideanDistance(vec1, vec2);
        assertEquals(expectedResult, result);
    }

    @Test
    public void testVectorsWithZeros() {
        List<Integer> vec1 = Arrays.asList(0, 0, 0);
        List<Integer> vec2 = Arrays.asList(0, 0, 0);
        int expectedResult = 0;
        int result = squaredEuclideanDistance(vec1, vec2);
        assertEquals(expectedResult, result);
    }

    @Test
    public void testVectorsWithNegativeValues() {
        List<Integer> vec1 = Arrays.asList(-1, -2, -3);
        List<Integer> vec2 = Arrays.asList(-4, -5, -6);
        int expectedResult = 27;  // (3^2 + 3^2 + 3^2)
        int result = squaredEuclideanDistance(vec1, vec2);
        assertEquals(expectedResult, result);
    }

    @Test
    public void testSingleElementVectors() {
        List<Integer> vec1 = Arrays.asList(5);
        List<Integer> vec2 = Arrays.asList(-5);
        int expectedResult = 100;  // (10^2)
        int result = squaredEuclideanDistance(vec1, vec2);
        assertEquals(expectedResult, result);
    }

    // The squaredEuclideanDistance method implementation
    private int squaredEuclideanDistance(List<Integer> vec1, List<Integer> vec2) {
        if (vec1.size() != vec2.size()) {
            throw new IllegalArgumentException("Vectors must be of the same length");
        }

        int distanceSquared = 0;
        for (int i = 0; i < vec1.size(); i++) {
            int diff = vec1.get(i) - vec2.get(i);
            distanceSquared += diff * diff;
        }
        return distanceSquared;
    }
}
```

### Explanation:
1. **Import Statements**:
   - `import org.junit.Test;`: Import the JUnit `@Test` annotation.
   - `import static org.junit.Assert.assertEquals;`: Import the `assertEquals` method for assertions.
   - `import java.util.Arrays;`: Import the `Arrays` utility class for creating lists.
   - `import java.util.List;`: Import the `List` interface.

2. **Class Definition**:
   - The class `Tester` contains the test methods.

3. **JUnit Annotations**:
   - Each test method is annotated with `@Test` to indicate that it is a test method.

4. **Test Methods**:
   - `testStandardVectors()`: Tests the squared Euclidean distance for typical vectors.
   - `testVectorsWithZeros()`: Tests vectors that include zero values.
   - `testVectorsWithNegativeValues()`: Tests vectors that include negative values.
   - `testSingleElementVectors()`: Tests single-element vectors.

5. **Assertion Method**:
   - `assertEquals(expectedResult, result)`: Asserts that the expected result matches the actual result.

6. **Method Implementation**:
   - The `squaredEuclideanDistance` method is implemented within the test class for convenience. This method performs the squared Euclidean distance calculation and includes a check for vector length consistency.

This Java JUnit test class preserves the original functionality and structure of the Python unittest class while adhering to Java conventions and best practices.