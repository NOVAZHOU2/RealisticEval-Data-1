Sure, here’s the equivalent Java method for the given Python function:

```java
import java.util.List;

public class DistanceCalculator {

    /**
     * Computes the squared Euclidean distance between two vectors.
     *
     * @param vec1 the first vector as a List of integers.
     * @param vec2 the second vector as a List of integers.
     * @return the squared Euclidean distance between vec1 and vec2 as an integer.
     */
    public static int squaredEuclideanDistance(List<Integer> vec1, List<Integer> vec2) {
        // Implementation goes here
        return 0; // Placeholder return statement
    }
}
```

Here’s a complete version with the implementation included:

```java
import java.util.List;

public class DistanceCalculator {

    /**
     * Computes the squared Euclidean distance between two vectors.
     *
     * @param vec1 the first vector as a List of integers.
     * @param vec2 the second vector as a List of integers.
     * @return the squared Euclidean distance between vec1 and vec2 as an integer.
     */
    public static int squaredEuclideanDistance(List<Integer> vec1, List<Integer> vec2) {
        if (vec1.size() != vec2.size()) {
            throw new IllegalArgumentException("Vectors must be of the same length");
        }

        int sum = 0;
        for (int i = 0; i < vec1.size(); i++) {
            int diff = vec1.get(i) - vec2.get(i);
            sum += diff * diff;
        }
        return sum;
    }
}
```

This Java method preserves the original functionality and includes the implementation logic as well.