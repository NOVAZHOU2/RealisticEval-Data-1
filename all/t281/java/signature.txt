Sure! Here is the equivalent Java code for the provided Python function, including appropriate Javadoc comments and type conversions:

```java
import java.util.List;

public class Answer {

    /**
     * Computes the squared Euclidean distance between two vectors.
     *
     * @param vec1 The first vector as a List of integers.
     * @param vec2 The second vector as a List of integers.
     * @return The squared Euclidean distance between vec1 and vec2 as an integer.
     * @throws IllegalArgumentException If the vectors are of different lengths.
     */
    public static int squaredEuclideanDistance(List<Integer> vec1, List<Integer> vec2) {
        if (vec1.size() != vec2.size()) {
            throw new IllegalArgumentException("Vectors must be of the same length");
        }

        int distanceSquared = 0;
        for (int i = 0; i < vec1.size(); i++) {
            int diff = vec1.get(i) - vec2.get(i);
            distanceSquared += diff * diff;
        }
        return distanceSquared;
    }

    // A simple check function to verify the correctness of the squaredEuclideanDistance method.
    public static void main(String[] args) {
        List<Integer> vec1 = List.of(1, 2, 3);
        List<Integer> vec2 = List.of(4, 5, 6);
        int result = squaredEuclideanDistance(vec1, vec2);
        System.out.println("Squared Euclidean Distance: " + result); // Expected output: 27
    }
}
```

### Explanation:
1. **Import Statement**: The `import java.util.List;` statement is necessary to use the `List` interface in Java.
2. **Class Definition**: The class `Answer` contains the method `squaredEuclideanDistance`.
3. **Javadoc Comments**: The method is documented using Javadoc comments, which provide detailed information about the method's purpose, arguments, and return value.
4. **Method Signature**: The method `squaredEuclideanDistance` takes two `List<Integer>` parameters and returns an `int`. It throws an `IllegalArgumentException` if the input vectors have different lengths.
5. **Logic Implementation**: The method calculates the squared Euclidean distance by iterating over the elements of the vectors and summing the squares of their differences.
6. **Main Method**: A simple `main` method is included to demonstrate the usage of the `squaredEuclideanDistance` method and to verify its correctness with a test case.

This Java code preserves the original functionality and structure of the Python code while adhering to Java conventions and best practices.