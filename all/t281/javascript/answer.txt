Certainly! Below is the equivalent JavaScript code that maintains the same functionality, logic, and structure as the provided Python code:

```javascript
function squaredEuclideanDistance(vec1, vec2) {
    /**
     * Compute the squared Euclidean distance between two vectors.
     *
     * @param {Array} vec1 - First vector.
     * @param {Array} vec2 - Second vector.
     * @returns {number} - Squared Euclidean distance between vec1 and vec2.
     * @throws {Error} - If the vectors are of different lengths.
     */
    if (vec1.length !== vec2.length) {
        throw new Error('Vectors must be of the same length');
    }

    let distanceSquared = vec1.reduce((acc, curr, index) => {
        return acc + Math.pow(curr - vec2[index], 2);
    }, 0);

    return distanceSquared;
}
```

### Explanation:
1. **Function Definition**: The function `squaredEuclideanDistance` is defined with two parameters, `vec1` and `vec2`.
2. **Length Check**: A check is performed to ensure that `vec1` and `vec2` have the same length. If they do not, an error is thrown.
3. **Distance Calculation**: The squared Euclidean distance is calculated using the `reduce` method. It iterates over each element of `vec1`, computes the squared difference between corresponding elements of `vec1` and `vec2`, and accumulates the result.
4. **Return Value**: The final squared Euclidean distance is returned.

This JavaScript code closely mirrors the behavior of the original Python code, including the use of descriptive comments and error handling.