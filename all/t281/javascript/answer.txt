Certainly! Below is the equivalent JavaScript code that maintains the same functionality, logic, and structure as the provided Python code:

```javascript
function squaredEuclideanDistance(vec1, vec2) {
    /**
     * Compute the squared Euclidean distance between two vectors.
     *
     * @param {Array} vec1 - First vector.
     * @param {Array} vec2 - Second vector.
     * @returns {number} - Squared Euclidean distance between vec1 and vec2.
     * @throws {Error} - If the vectors are of different lengths.
     */
    if (vec1.length !== vec2.length) {
        throw new Error('Vectors must be of the same length');
    }

    let distanceSquared = vec1.reduce((acc, current, index) => {
        const difference = current - vec2[index];
        return acc + difference * difference;
    }, 0);

    return distanceSquared;
}
```

This JavaScript function `squaredEuclideanDistance` takes two arrays (`vec1` and `vec2`) as input and computes the squared Euclidean distance between them. It checks if the vectors have the same length before performing the calculation. If they do not, it throws an error. The computation uses the `reduce` method to iterate over the elements of the first vector (`vec1`) while simultaneously accessing the corresponding elements from the second vector (`vec2`). The squared differences are accumulated and returned as the final result.