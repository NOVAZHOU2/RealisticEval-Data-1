Here is how you could convert your Python unit test to Jest test case in JavaScript:

```javascript
const { expect } = require('@jest/globals');

function squaredEuclideanDistance(vec1, vec2) {
    let sum = 0;
    for(let i=0; i<vec1.length; i++) {
        sum += Math.pow((vec1[i] - vec2[i]), 2);
    }
    return sum;
}

describe('squaredEuclideanDistance', () => {

    it('should calculate the squared euclidean distance correctly', () => {
        const vec1 = [3, 4];
        const vec2 = [6, 8];
        expect(squaredEuclideanDistance(vec1, vec2)).toBe(25);
    });

    it('should handle vectors of different lengths', () => {
        const vec1 = [1, 2, 3];
        const vec2 = [4, 5];
        expect(() => squaredEuclideanDistance(vec1, vec2)).toThrowError();
    });
});
```

In this example, we have used `@jest/globals` package which provides the global variables like `expect`, `test`, `it`, etc. We also defined the function `squaredEuclideanDistance` similar to your Python function. The tests check if the function works correctly with valid inputs and throws an error when invalid inputs are given. 

Please make sure that you have installed `@jest/globals` package using npm or yarn before running these tests.