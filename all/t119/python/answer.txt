Sure! Below is the equivalent Python code for the provided JavaScript function getCookie. In Python, we'll use the http.cookies module to handle cookies if necessary. However, since Python typically doesn't handle cookies directly in the same way as JavaScript (which operates in a web browser environment), this function will be a more simplified version, assuming you are passing a cookie string directly to the function.
JavaScript Code
javascript
function getCookie(name) {
    let cookieName = `${name}=`;
    let cookies = document.cookie.split(';').map(cookie => cookie.trim()); // Trim whitespace once
    for (let cookie of cookies) {
        if (cookie.startsWith(cookieName)) {
            return cookie.substring(cookieName.length);
        }
    }
    return null; // Typically, returning null is more appropriate for not found
}
Python Code
Here's how you can implement the same functionality in Python:
python
def get_cookie(name: str, cookie_string: str) -> str:
    """
    Retrieve the value of a cookie by its name from a cookie string.

    Args:
        name (str): The name of the cookie to retrieve.
        cookie_string (str): The string containing all cookies.

    Returns:
        str: The value of the cookie if found, otherwise None.
    """
    cookie_name = f"{name}="
    cookies = cookie_string.split(';')  # Split the cookie string into individual cookies

    for cookie in cookies:
        cookie = cookie.strip()  # Trim whitespace
        if cookie.startswith(cookie_name):
            return cookie[len(cookie_name):]  # Return the value of the cookie

    return None  # Return None if the cookie is not found
Explanation of the Python Code
Function Definition:
The function get_cookie takes two parameters: name (the name of the cookie you want to retrieve) and cookie_string (a string containing all cookies).
Cookie Name Construction:
The cookie name is constructed as f"{name}=", similar to JavaScript.
Splitting Cookies:
The cookie_string is split using ; to create a list of individual cookies.
Trimming Whitespace:
Each cookie is stripped of leading and trailing whitespace.
Finding the Cookie:
The function checks if the cookie starts with the specified cookie name. If it does, it returns the value by slicing the string from the end of the cookie name.
Return Value:
If the cookie is not found, the function returns None.
Usage Example
Here's how you might use the get_cookie function in practice:
python
# Example cookie string
cookie_string = "user=JohnDoe; sessionId=abc123; theme=dark"

# Retrieve the 'user' cookie
user_cookie = get_cookie('user', cookie_string)
print(user_cookie)  # Output: JohnDoe

# Retrieve a non-existing cookie
non_existing_cookie = get_cookie('nonexistent', cookie_string)
print(non_existing_cookie)  # Output: None
This implementation allows you to retrieve cookie values similarly to the original JavaScript function but in a Python context.