Here is your Python code converted into TypeScript:

```typescript
import { Counter } from 'typescript-collections';

function findMinWindowSubstring(source: string, target: string): string {
    let charCount = new Counter<string>();
    for (let char of target) {
        charCount.increment(char);
    }

    let left = 0;
    let right = 0;
    let minLen = Infinity;
    let minStr = '';
    let formed = 0;

    while (right < source.length) {
        let currentChar = source[right];
        if (charCount.containsKey(currentChar)) {
            charCount.decrement(currentChar);
            if (charCount.getValue(currentChar) === 0) {
                formed++;
            }
        }
        right++;

        while (left <= right && formed === charCount.size()) {
            let tempLen = right - left;
            if (tempLen < minLen) {
                minLen = tempLen;
                minStr = source.substring(left, right);
            }
            let leftChar = source[left];
            if (charCount.containsKey(leftChar)) {
                charCount.increment(leftChar);
                if (charCount.getValue(leftChar) > 0) {
                    formed--;
                }
            }
            left++;
        }
    }

    return minStr;
}
```

Please note that you need to install `typescript-collections` package using npm or yarn before running this code. Also, this function returns the first minimum window substring found and not necessarily the only one. If there's a requirement to return all minimum window substrings, then some modifications will be needed.