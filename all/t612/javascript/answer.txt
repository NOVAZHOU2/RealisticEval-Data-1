Hereâ€™s the equivalent JavaScript code for the provided Python function. This version uses Node.js to handle file operations, maintaining the same functionality, logic, and structure:

```javascript
const fs = require('fs');

function findAndReplaceInFile(filePath, searchString, replaceString) {
    /** 
     * Finds and replaces text in a specified file.
     *
     * @param {string} filePath - The path to the file.
     * @param {string} searchString - The string to search for.
     * @param {string} replaceString - The string to replace with.
     * @throws {Error} If an I/O error occurs reading from the file or writing to the file.
     */
    try {
        // Read the content of the file
        let fileContent = fs.readFileSync(filePath, { encoding: 'utf-8' });

        // Replace the search string with the replacement string
        let replacedContent = fileContent.replace(new RegExp(searchString, 'g'), replaceString);

        // Write the replaced content back to the file
        fs.writeFileSync(filePath, replacedContent, { encoding: 'utf-8' });
    } catch (error) {
        console.error(`Error occurred: ${error.message}`);
    }
}
```

### Key Changes:
1. **File Operations**: Used `fs.readFileSync` and `fs.writeFileSync` for synchronous file operations in Node.js.
2. **Regular Expressions**: Wrapped `searchString` with `RegExp` to allow for global replacement (similar to Python's `str.replace`).
3. **Error Handling**: Used `console.error` for error logging, akin to Python's `print`. 

Make sure to have Node.js installed to use this code, as it relies on the `fs` module for file system operations.