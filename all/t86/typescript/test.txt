Sure! Below is the equivalent TypeScript test case using Jest:

```typescript
import { bresenhamLine } from './bresenham'; // Adjust the import path accordingly

describe('Bresenham Line Algorithm', () => {
  it('should generate correct coordinates for horizontal line', () => {
    const result = bresenhamLine(0, 0, 5, 0);
    expect(result).toEqual([
      [0, 0],
      [1, 0],
      [2, 0],
      [3, 0],
      [4, 0],
      [5, 0]
    ]);
  });

  it('should generate correct coordinates for vertical line', () => {
    const result = bresenhamLine(0, 0, 0, 5);
    expect(result).toEqual([
      [0, 0],
      [0, 1],
      [0, 2],
      [0, 3],
      [0, 4],
      [0, 5]
    ]);
  });

  it('should generate correct coordinates for diagonal line', () => {
    const result = bresenhamLine(0, 0, 5, 5);
    expect(result).toEqual([
      [0, 0],
      [1, 1],
      [2, 2],
      [3, 3],
      [4, 4],
      [5, 5]
    ]);
  });

  it('should handle negative coordinates', () => {
    const result = bresenhamLine(-3, -3, 2, 2);
    expect(result).toEqual([
      [-3, -3],
      [-2, -2],
      [-1, -1],
      [0, 0],
      [1, 1],
      [2, 2]
    ]);
  });
});
```

In this TypeScript test case, we're using Jest to write tests for the `bresenhamLine` function. Each test case checks if the function returns the expected list of coordinates for different scenarios, including horizontal lines, vertical lines, diagonal lines, and lines with negative coordinates. Make sure to adjust the import path to match the location of your `bresenhamLine` implementation.