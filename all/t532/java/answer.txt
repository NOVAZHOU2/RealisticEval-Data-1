Here's how you can translate the JavaScript function into Java:

```java
import java.util.ArrayList;
import java.util.List;

/**
 * Counts the occurrences of consecutive identical letters in a given string.
 *
 * @param inputString The string to analyze for letter changes.
 * @return A list of integers representing the number of consecutive
 *         identical letters before a different letter is found.
 */
public List<Integer> countLetterChanges(String inputString) {
    List<Integer> counts = new ArrayList<>();
    if (inputString == null || inputString.isEmpty()) {
        return counts; // Return an empty list if the input is null or empty
    }

    int currentCount = 1; // Start counting from the first character

    for (int i = 1; i < inputString.length(); i++) {
        if (inputString.charAt(i) == inputString.charAt(i - 1)) {
            currentCount++; // Increment count if the same character continues
        } else {
            counts.add(currentCount); // Add the count when a different character is found
            currentCount = 1; // Reset the count
        }
    }

    counts.add(currentCount); // Add the last count

    return counts;
}
```

This Java method does exactly what your JavaScript function does: it iterates over the characters of the input string and keeps track of the number of consecutive identical letters. When it encounters a different letter, it adds the count to a list and resets the counter. After the loop, it adds the final count to the list before returning it.