Sure! Here's how you can convert the JavaScript function `countLetterChanges` into C++:

```cpp
#include <iostream>
#include <vector>
#include <string>

/**
 * Counts the occurrences of consecutive identical letters in a given string.
 *
 * @param inputString - The string to analyze for letter changes.
 * @return A vector of counts representing the number of consecutive
 *         identical letters before a different letter is found.
 */
std::vector<int> countLetterChanges(const std::string& inputString) {
    std::vector<int> counts;
    if (inputString.empty()) return counts;

    int currentCount = 1;

    for (size_t i = 1; i < inputString.length(); ++i) {
        if (inputString[i] == inputString[i - 1]) {
            ++currentCount;
        } else {
            counts.push_back(currentCount);
            currentCount = 1;
        }
    }

    // Push the last count
    counts.push_back(currentCount);

    return counts;
}

int main() {
    std::string inputString = "aaabbccddd";
    std::vector<int> result = countLetterChanges(inputString);

    for (int count : result) {
        std::cout << count << " ";
    }

    return 0;
}
```

### Explanation:
- **Header Files**: We include `<iostream>` for input/output operations, `<vector>` for using vectors, and `<string>` for handling strings.
- **Function Signature**: The function `countLetterChanges` takes a constant reference to a string (`const std::string&`) and returns a vector of integers (`std::vector<int>`).
- **Edge Case Handling**: If the input string is empty, we return an empty vector.
- **Main Logic**:
  - Initialize `currentCount` to 1 since at least one character will be counted.
  - Iterate through the string starting from the second character.
  - If the current character is the same as the previous one, increment `currentCount`.
  - Otherwise, push `currentCount` to the `counts` vector and reset `currentCount` to 1.
- **Push Last Count**: After the loop, push the final count to the `counts` vector.
- **Main Function**: Demonstrates how to use the `countLetterChanges` function and prints the results.

This C++ code should work similarly to your original JavaScript function.