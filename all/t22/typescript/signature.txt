Here is the equivalent TypeScript code signature:

```typescript
interface Point {
    x: number;
    y: number;
}

function calculateEuclideanDistance(point1: Point, point2: Point): number {
    /**
     * Calculate the Euclidean distance between two points in a 2D space.
     *
     * @param {Point} point1 - The first point as an object with x and y properties.
     * @param {Point} point2 - The second point as an object with x and y properties.
     * @returns {number} - The Euclidean distance between the two points.
     */
```

In TypeScript, we use interfaces to define the structure of objects. We also use type annotations for function parameters and return values. The `calculateEuclideanDistance` function takes two `Point` objects as arguments and returns a `number`.