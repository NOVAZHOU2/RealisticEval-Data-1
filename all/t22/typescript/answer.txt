Sure, here is your Python function translated into TypeScript:

```typescript
type Point = [number, number];

function calculateEuclideanDistance(point1: Point, point2: Point): number {
    /**
     * Calculate the Euclidean distance between two points in a 2D space.
     *
     * @param {Point} point1 - The first point as a tuple of coordinates [x1, y1].
     * @param {Point} point2 - The second point as a tuple of coordinates [x2, y2].
     * @returns {number} - The Euclidean distance between the two points.
     */
    
    const xDiff = point1[0] - point2[0];
    const yDiff = point1[1] - point2[1];
    return Math.sqrt(xDiff * xDiff + yDiff * yDiff);
}
```

In this TypeScript version, I've defined a type `Point` for clarity and used it in the function parameters. The function calculates the Euclidean distance similarly to the original Python function.