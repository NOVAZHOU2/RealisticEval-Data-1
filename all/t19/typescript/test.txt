Certainly! Here is the equivalent TypeScript code using Jest for testing the `containsPhoneNumber` function. The test cases will be written using Jest's assertion methods to ensure the functionality and logic are preserved.

First, let's define the `containsPhoneNumber` function in TypeScript:

```typescript
/**
 * Determines whether the string contains a phone number.
 * Possible formats for a phone number include +1-800-555-1234, 555-555-1234, 555 555 1234.
 *
 * @param s - The input string that may contain a phone number.
 * @returns true if the string contains a phone number, false otherwise.
 */
function containsPhoneNumber(s: string): boolean {
    // Regex pattern to identify phone numbers
    const pattern = /(\+\d{1,3}[- ]?)?(\d{3}[- ]\d{3}[- ]\d{4})/;
    // Use RegExp test method to find a match
    return pattern.test(s);
}

export { containsPhoneNumber };
```

Next, we'll write the Jest test suite:

```typescript
import { containsPhoneNumber } from './path/to/containsPhoneNumber'; // Adjust the path as needed

describe('containsPhoneNumber', () => {
    it('should detect international prefix', () => {
        expect(containsPhoneNumber('+1-800-555-1234')).toBe(true);
    });

    it('should detect standard format with dashes', () => {
        expect(containsPhoneNumber('800-555-1234')).toBe(true);
    });

    it('should detect standard format with spaces', () => {
        expect(containsPhoneNumber('800 555 1234')).toBe(true);
    });

    it('should not detect any phone number', () => {
        expect(containsPhoneNumber('Hello, world!')).toBe(false);
    });

    it('should detect phone number in text', () => {
        expect(containsPhoneNumber('Call me at 800-555-1234 today!')).toBe(true);
    });
});
```

### Explanation:
1. **Import Statement**: Import the `containsPhoneNumber` function from the module where it is defined.
2. **Test Suite**: Use `describe` to group the test cases under the `containsPhoneNumber` function.
3. **Test Cases**:
   - Each test case is defined using `it`.
   - Jest's `expect` is used with various matchers (e.g., `toBe`) to assert the expected behavior.
4. **Assertion Methods**:
   - `expect(containsPhoneNumber('+1-800-555-1234')).toBe(true)` checks that the function returns `true` for a valid phone number with an international prefix.
   - Similar assertions are used for other test cases to ensure the function behaves correctly for different input formats.

This setup ensures that the functionality and logic of the tests are preserved, and the code is structured according to Jest's conventions.