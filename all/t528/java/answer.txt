Sure! Below is the equivalent Java code for the JavaScript function `findMarkdownFiles`. This Java code uses the `java.nio.file` package to traverse directories and identify Markdown files.

```java
import java.io.IOException;
import java.nio.file.*;
import java.util.ArrayList;
import java.util.List;

public class MarkdownFileFinder {

    /**
     * Searches for Markdown files in the specified directory and returns the path of the files as a list
     *
     * @param dir The directory path to search in.
     * @return A list of paths to Markdown files.
     */
    public static List<String> findMarkdownFiles(String dir) {
        List<String> markdownFiles = new ArrayList<>();
        try (DirectoryStream<Path> stream = Files.newDirectoryStream(Paths.get(dir), "*.{md,markdown}")) {
            for (Path file : stream) {
                if (Files.isRegularFile(file)) {
                    markdownFiles.add(file.toString());
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return markdownFiles;
    }

    public static void main(String[] args) {
        String directoryPath = "your_directory_path_here";
        List<String> mdFiles = findMarkdownFiles(directoryPath);
        for (String filePath : mdFiles) {
            System.out.println(filePath);
        }
    }
}
```

### Explanation:
1. **Imports**: The necessary imports include classes from the `java.nio.file` package for file operations and `java.util` for collections.
2. **findMarkdownFiles Method**:
   - It takes a directory path as input and returns a list of Markdown file paths.
   - It uses `Files.newDirectoryStream` with a glob pattern `"*.{md,markdown}"` to filter files that end with `.md` or `.markdown`.
   - It iterates over the directory stream, checks if each file is a regular file using `Files.isRegularFile`, and adds it to the list if it is.
3. **main Method**: Demonstrates how to use the `findMarkdownFiles` method by searching a directory and printing the paths of Markdown files found.

Make sure to replace `"your_directory_path_here"` with the actual directory path you want to search.