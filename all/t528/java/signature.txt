Sure, here is the equivalent Java code with the same functionality and comments:

```java
import java.io.File;
import java.util.ArrayList;
import java.util.List;

/**
 * Searches for Markdown files in the specified directory and returns the path of the files as a list
 *
 * @param dir The directory path to search in.
 * @return A list of paths to Markdown files.
 */
public List<String> findMarkdownFiles(String dir) {
    List<String> markdownFiles = new ArrayList<>();
    File directory = new File(dir);
    
    if (directory.exists() && directory.isDirectory()) {
        File[] files = directory.listFiles();
        
        if (files != null) {
            for (File file : files) {
                if (file.isFile() && file.getName().endsWith(".md")) {
                    markdownFiles.add(file.getAbsolutePath());
                } else if (file.isDirectory()) {
                    markdownFiles.addAll(findMarkdownFiles(file.getAbsolutePath()));
                }
            }
        }
    }
    
    return markdownFiles;
}
```

This Java method `findMarkdownFiles` will recursively search through the given directory and its subdirectories for files ending with `.md`, adding their absolute paths to a list which it then returns.