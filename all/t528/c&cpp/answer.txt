Sure! Here is the equivalent C++ code using Boost.Filesystem library:

```cpp
#include <iostream>
#include <vector>
#include <boost/filesystem.hpp>

namespace fs = boost::filesystem;

std::vector<std::string> findMarkdownFiles(const std::string& dir) {
    std::vector<std::string> markdown_files;
    if (fs::exists(dir) && fs::is_directory(dir)) {
        for (const auto& entry : fs::directory_iterator(dir)) {
            if (entry.is_regular_file() && entry.path().extension() == ".md") {
                markdown_files.push_back(entry.path().string());
            }
        }
    }
    return markdown_files;
}

int main() {
    std::vector<std::string> md_files = findMarkdownFiles("your_directory_path");
    for(auto &file: md_files){
        std::cout << file << std::endl;
    }
    return 0;
}
```

Please note that you need to install Boost.Filesystem library before compiling this code. If you're using GCC compiler, you can do it with `-lboost_filesystem` option.

Also, replace `"your_directory_path"` with your actual directory path where you want to search for Markdown files. 

This C++ program will output the paths of all `.md` files in the specified directory.