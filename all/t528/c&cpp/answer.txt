Here is the equivalent C++ code using the Boost Filesystem library:

```cpp
#include <iostream>
#include <vector>
#include <boost/filesystem.hpp>

using namespace std;
namespace fs = boost::filesystem;

/**
 * Searches for Markdown files in the specified directory and returns the path of the files as an vector
 *
 * @param {string} dir - The directory path to search in.
 * @returns {vector<string>} - A vector of paths to Markdown files.
 */
vector<string> findMarkdownFiles(const string& dir) {
    vector<string> result;
    if (fs::exists(dir) && fs::is_directory(dir)) {
        for (auto& entry : fs::directory_iterator(dir)) {
            if (entry.path().extension() == ".md") {
                result.push_back(entry.path().string());
            }
        }
    }
    return result;
}

int main() {
    // Example usage:
    auto markdown_files = findMarkdownFiles("your/directory/path");
    for (const auto& file : markdown_files) {
        cout << file << endl;
    }

    return 0;
}
```

Note: This code uses the Boost Filesystem library which needs to be installed on your system. You can install it via your package manager or download it from the official website.

Also, remember to replace `"your/directory/path"` with the actual path where you want to search for Markdown files.