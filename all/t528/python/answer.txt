Sure! Below is the equivalent Python code using the `os` module to achieve the same functionality as your JavaScript code:

```python
import os

def find_markdown_files(directory):
    """
    Searches for Markdown files in the specified directory and returns the path of the files as an array.

    :param directory: The directory path to search in.
    :return: A list of paths to Markdown files.
    """
    markdown_files = []
    
    # Walk through all directories and files in the given directory
    for root, dirs, files in os.walk(directory):
        for file in files:
            if file.endswith('.md'):
                # Construct the full path to the file
                file_path = os.path.join(root, file)
                markdown_files.append(file_path)
                
    return markdown_files

# Example usage:
directory_to_search = '/path/to/your/directory'
markdown_files = find_markdown_files(directory_to_search)
print(markdown_files)
```

### Explanation:
- **Importing Modules**: We import the `os` module which provides a way of using operating system dependent functionality like reading or writing to a file.
  
- **Function Definition**: The function `find_markdown_files` takes a single argument `directory`, which is the path to the directory you want to search.

- **Walking Through Directory**: Using `os.walk()`, we traverse through each directory starting from the provided directory. This function yields a 3-tuple `(root, dirs, files)` where:
  - `root`: the current directory being walked through,
  - `dirs`: a list of directories in the current directory (excluding '.' and '..'),
  - `files`: a list of files in the current directory.

- **Checking File Extension**: For each file, we check if it ends with `.md`. If it does, we construct its full path using `os.path.join()` and append it to the `markdown_files` list.

- **Returning Results**: Finally, the function returns the list of Markdown file paths.

This Python script will perform the same task as your original JavaScript code, searching for `.md` files in the specified directory and returning their paths.