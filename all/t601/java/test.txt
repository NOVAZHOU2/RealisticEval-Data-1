Hereâ€™s the equivalent Java test class using JUnit 4, placed in the package `org.real.temp` and named `Tester`. The functionality and logic of the tests are preserved:

```java
package org.real.temp;

import static org.junit.Assert.assertEquals;

import org.junit.Test;

public class Tester {

    @Test
    public void testCountWordsInVariousStrings() {
        // Empty string
        assertEquals(0, Answer.countWords(""));

        // String with only spaces
        assertEquals(0, Answer.countWords("     "));

        // Single word
        assertEquals(1, Answer.countWords("Hello"));

        // Multiple words with single spaces
        assertEquals(5, Answer.countWords("This is a test string"));

        // Multiple spaces between words
        assertEquals(5, Answer.countWords("This    is   a   test   string"));

        // Leading and trailing spaces
        assertEquals(2, Answer.countWords("   Hello world!   "));
    }
}
```

### Key Changes:
1. **Package Declaration**: The package is declared as `package org.real.temp;`.
2. **JUnit Annotations**: The `@Test` annotation is used to indicate test methods.
3. **Assertions**: The `REQUIRE` assertions from Catch2 are replaced with `assertEquals` from JUnit.
4. **Method Structure**: All test cases are placed within a single test method (`testCountWordsInVariousStrings`) for simplicity, reflecting the grouped nature of the original C++ tests. 

You can expand or modify this structure to suit your testing preferences!