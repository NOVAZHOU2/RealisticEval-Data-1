Hereâ€™s the equivalent JavaScript code, converting the C++ function signature and comments into JavaScript while maintaining the original functionality and structure:

```javascript
/**
 * @brief Prints a 3x3 game board to the console.
 *
 * This function takes a 2D array representing a game board and prints
 * it in a formatted manner, displaying the contents of each cell.
 * The board is assumed to be a square of size 3x3, and each cell can
 * contain either a character representing a player's move ('X' or 'O')
 * or an empty space (' ').
 *
 * The output format includes a row of dashes to separate the rows of
 * the board, and each cell is enclosed within vertical bars.
 * The function does not return any value.
 *
 * @param {Array<Array<string>>} board A 2D array of characters, where each character represents
 *              the state of a cell in the game board. The board must be
 *              of size 3x3, and each character can be 'X', 'O', or ' '.
 * For example:
 *      input: [['X', 'O', 'X'],
 *              [' ', 'X', 'O'],
 *              ['O', ' ', ' ']]
 *      output: -------------\n| X | O | X | \n-------------\n|   | X | O | \n-------------\n| O |   |   | \n-------------\n
 */
function printBoard(board) {
    const boardSize = 3; // Size of the board
    console.log("-------------");

    // Loop through each row
    for (let i = 0; i < boardSize; i++) {
        let row = "| "; // Start of the row

        // Loop through each column in the row
        for (let j = 0; j < boardSize; j++) {
            row += board[i][j] + " | "; // Append each cell
        }

        console.log(row); // Print the row
        console.log("-------------"); // Print the row separator
    }
}

// Example usage
const board = [
    ['X', 'O', 'X'],
    [' ', 'X', 'O'],
    ['O', ' ', ' ']
];

printBoard(board);
```

### Key Adaptations:
- **Function Declaration:** Changed from `void printBoard(const vector<vector<char>>& board)` to `function printBoard(board)`, removing the need for explicit types and memory management.
- **Comment Conversion:** C++ comments were translated into JavaScript-style comments while maintaining their structure and content.
- **Parameter Type Annotation:** Added JSDoc notation to specify that `board` is a 2D array of strings.