Here’s the equivalent JavaScript code that translates the C++ functionality while adhering to JavaScript conventions:

```javascript
function printBoard(board) {
    const boardSize = 3; // Size of the board
    console.log("-------------");

    // Loop through each row
    for (let i = 0; i < boardSize; i++) {
        let row = "| "; // Start of the row

        // Loop through each column in the row
        for (let j = 0; j < boardSize; j++) {
            row += board[i][j] + " | "; // Append each cell
        }

        console.log(row); // Print the row
        console.log("-------------"); // Print the row separator
    }
}

// Example usage
const board = [
    ['X', 'O', 'X'],
    ['O', 'X', 'O'],
    ['X', ' ', 'O']
];

printBoard(board);
```

### Key Adaptations:
- **Function Declaration:** JavaScript uses `function` to declare functions.
- **Array Representation:** JavaScript arrays are similar to C++ vectors but don’t require the `vector` syntax.
- **Console Output:** The `cout` stream in C++ is replaced with `console.log` in JavaScript.
- **String Concatenation:** Used `+=` to build the row string instead of printing directly in the loop. This helps keep the output more structured.