Here is the C++ version of your Python function:

```c++
#include <iostream>
#include <map>
#include <string>

std::map<std::string, std::string> clean_dictionary(const std::map<std::string, std::string>& input_dict) {
    std::map<std::string, std::string> result;
    for(auto const& pair : input_dict){
        if(!pair.second.empty()){
            result.insert(pair);
        }
    }
    return result;
}
```
In this C++ code, we have a function `clean_dictionary` that takes a map of string pairs as an argument. It then iterates through each key-value pair in the input dictionary. If the value is not empty, it inserts the pair into a new map called `result`. Finally, it returns the `result`.

Note: This version of the code assumes that the values in the input dictionary are strings. If the values can be any other type, you will need to adjust the comparison accordingly. Also, please note that C++ does not support NaN or None, so these checks are not implemented.