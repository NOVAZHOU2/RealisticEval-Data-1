Sure, here is the equivalent Java code signature for your Python function, keeping the comments intact:

```java
import java.util.HashMap;
import java.util.Map;

/**
 * Cleans the input dictionary by removing keys with invalid values. Valid values are non-NaN, non-None, and non-whitespace strings.
 *
 * @param inputMap The dictionary to be cleaned.
 * @return A new dictionary containing only valid values.
 */
public Map<String, Object> cleanDictionary(Map<String, Object> inputMap) {
    // Implementation of the cleanDictionary method goes here.
}
```

### Explanation:
1. **Imports**: We import `HashMap` and `Map` from the `java.util` package since Java uses these classes for dictionaries.
2. **Comments**: The Javadoc-style comments are used to document the method, including its purpose, parameters, and return value.
3. **Method Signature**:
   - The method is named `cleanDictionary`.
   - It takes one parameter, `inputMap`, which is a `Map<String, Object>` representing the dictionary to be cleaned.
   - It returns a `Map<String, Object>` containing only valid values.

This Java method signature mirrors the functionality and documentation of your original Python function.