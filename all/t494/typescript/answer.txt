Here is the equivalent TypeScript code for your Python function:

```typescript
interface Dictionary {
  [key: string]: any;
}

function cleanDictionary(inputDict: Dictionary): Dictionary {
  const result: Dictionary = {};

  for (const key in inputDict) {
    if (
      inputDict[key] !== null &&
      !isNaN(Number(inputDict[key])) &&
      typeof inputDict[key] === 'string' &&
      inputDict[key].trim() !== ''
    ) {
      result[key] = inputDict[key];
    }
  }

  return result;
}
```

This TypeScript function does essentially the same thing as your Python function. It iterates over each key-value pair in the input dictionary. If the value is not `null`, not `NaN` when converted to a number, of type `string`, and not just whitespace, it adds that key-value pair to the resulting dictionary.