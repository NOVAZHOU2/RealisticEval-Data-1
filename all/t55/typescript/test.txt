Here is how you can write your Python unit tests using Jest in TypeScript:

```typescript
import { describe, it, expect } from '@jest/globals';
import { minRemovalsToMakeUnique } from './your-file-path'; // replace with the actual path to your file

describe('minReovalsToMakeUnique', () => {
  it('should return the minimum number of removals to make all numbers unique', () => {
    expect(minRemovalsToMakeUnique([3, 3, 1, 2, 2, 1])).toBe(3);
    expect(minRemovalsToMakeUnique([1, 2, 3, 4, 5])).toBe(0);
    expect(minRemovalsToMakeUnique([])).toBe(0);
    expect(minRemovalsToMakeUnique([1, 1, 1, 1, 1])).toBe(4);
    expect(minRemovalsToMakeUnique([-1, -2, -3, -4, -5])).toBe(0);
  });
});
```

Please note that you need to install `@types/jest` package if you haven't done it already.

Also, you should replace `'./your-file-path'` with the actual relative or absolute path to the JavaScript file where your function is defined. If your function is written in TypeScript and you want to run these tests directly on TypeScript files, you might need to transpile them into JavaScript first. 

Finally, ensure that Jest is installed and properly configured in your project. You can do this by running `npm install --save-dev jest` and adding `"test": "jest"` to your `package.json`.