Certainly! Below is the equivalent TypeScript code for the given Python function, including appropriate JSDoc-style documentation:

```typescript
/**
 * Calculates the minimum number of elements to delete so that the elements in the array are not duplicate.
 * 
 * Example:
 *   Input: [3, 3, 1, 2, 2, 1]
 *   Output: 3
 * 
 * @param nums - An array of integers.
 * @returns The minimum number of moves to make every value in the array unique.
 */
function minRemovalsToMakeUnique(nums: number[]): number {
    let numbers: Set<number> = new Set();
    let minimumDistinct: number = 0;

    for (let number of nums) {
        if (numbers.has(number)) {
            minimumDistinct += 1;
        } else {
            numbers.add(number);
        }
    }

    return minimumDistinct;
}
```

### Explanation:
1. **Function Signature**:
   - The function `minRemovalsToMakeUnique` takes an array of numbers (`number[]`) and returns a number.

2. **JSDoc Documentation**:
   - The JSDoc comment block provides a description of the function, an example, and parameter and return type information.

3. **Implementation**:
   - A `Set` named `numbers` is used to track unique numbers.
   - The variable `minimumDistinct` keeps track of the count of duplicates.
   - The loop iterates over the input array `nums`, checking if each number is already in the `Set`. If it is, the count of duplicates is incremented; otherwise, the number is added to the `Set`.

This TypeScript code preserves the original functionality and structure of the Python code while adhering to TypeScript conventions and providing clear documentation.