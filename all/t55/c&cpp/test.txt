Here is the equivalent C++ Catch2 test case for your Python unittest test class:

```cpp
#include <vector>
#include "catch.hpp"

int min_removals_to_make_unique(std::vector<int> nums) {
    // Your function implementation here
}

TEST_CASE("min_removals_to_make_unique", "[min_removals_to_make_unique]") {
    std::vector<int> nums = {3, 3, 1, 2, 2, 1};
    REQUIRE(min_removals_to_make_unique(nums) == 3);

    nums = {4, 5, 6, 7, 8};
    REQUIRE(min_removals_to_make_unique(nums) == 0);

    nums = {1, 1, 1, 1, 1};
    REQUIRE(min_removals_to_make_unique(nums) == 4);
}
```

Please replace the `// Your function implementation here` comment with the actual implementation of the `min_removals_to_make_unique` function. This code uses Catch2's `REQUIRE` macro to check if the output of `min_removals_to_make_unique` matches the expected result.