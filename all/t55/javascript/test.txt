Sure! Below is the equivalent JavaScript test case using Jest for the provided Python unittest test class.

```javascript
const { minRemovalsToMakeUnique } = require('./path-to-your-function'); // Adjust the path accordingly

describe('minReplacementsToMakeUnique', () => {
  it('should return the minimum number of removals to make all elements unique', () => {
    expect(minRemovalsToMakeUnique([3, 3, 1, 2, 2, 1])).toBe(3);
    expect(minRemovalsToMakeUnique([4, 5, 6, 7, 8, 9])).toBe(0);
    expect(minRemovalsToMakeUnique([1, 1, 1, 1, 1])).toBe(4);
    expect(minRemovalsToMakeUnique([2, 3, 4, 5, 6, 2, 3, 4])).toBe(4);
    expect(minRemovalsToMakeUnique([])).toBe(0);
  });
});
```

In this JavaScript test case:

- We import the function `minRemovalsToMakeUnique` from the specified file.
- We use `describe` to group related tests together.
- Each test case is defined within an `it` block and uses `expect` along with `.toBe` to check if the function returns the expected result.

Make sure to adjust the path to your function file accordingly. This should give you a good starting point for testing your function in JavaScript using Jest.