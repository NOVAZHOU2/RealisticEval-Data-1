Sure, here is the JavaScript equivalent for your Python function. Note that JavaScript does not have a built-in library like `pandas` for data manipulation, so we will use the `lodash` library which provides similar functionalities.

First, you need to install lodash using npm:

```bash
npm install lodash
```

Then, you can use the following JavaScript code:

```javascript
const _ = require('lodash');

/**
 * Fills missing values in the specified column of the DataFrame with the first valid value in that column.
 * @param {Object} df - The DataFrame object.
 * @param {string} columnName - The name of the column to fill missing values.
 * @returns {Object} - The DataFrame with missing values filled.
 */
function fillMissingWithFirstValid(df, columnName) {
    // Find the first valid value in the specified column
    const firstValidValue = _.first(_.compact(df[columnName]));

    if (firstValidValue === undefined) {
        throw new Error(`Column '${columnName}' has no valid values.`);
    }

    // Fill missing values with the first valid value
    df[columnName] = df[columnName].map(value => value !== undefined ? value : firstValidValue);

    return df;
}
```

### Explanation:
1. **Importing Lodash**: We import lodash at the beginning of the script using `require('lodash')`.
2. **Function Definition**: The function `fillMissingWithFirstValid` takes two parameters: `df` (the DataFrame object) and `columnName` (the name of the column).
3. **Finding the First Valid Value**: We use `_.compact` to remove all `undefined` values from the column and then find the first non-`undefined` value using `_.first`.
4. **Error Handling**: If there are no valid values in the column, an error is thrown.
5. **Filling Missing Values**: We use the `map` function to iterate over the column and replace any `undefined` values with the first valid value.
6. **Returning the Modified DataFrame**: Finally, the modified DataFrame is returned.

This JavaScript function should behave similarly to your original Python function.