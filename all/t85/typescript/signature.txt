Sure, here is the equivalent TypeScript function signature for the provided Python code:

```typescript
/**
 * Fills missing values in the specified column of the DataFrame with the first valid value in that column.
 * @param df - The pandas DataFrame.
 * @param columnName - The name of the column to fill missing values.
 * @returns The DataFrame with missing values filled.
 */
function fillMissingWithFirstValid(df: any, columnName: string): any {
    // Function implementation goes here
}
```

### Explanation:
- `df: any` and `columnName: string`: These represent the parameters of the function. In TypeScript, we use `any` type because there's no direct equivalent to Python's `pandas.DataFrame`.
- `: any`: This represents the return type of the function, which is also `any` since the output is expected to be a `DataFrame`.

Note: If you have access to TypeScript definitions for pandas or know the exact structure of your DataFrame, you can replace `any` with more specific types to make your code more robust and easier to understand.