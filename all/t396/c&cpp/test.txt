To convert the given Python unittest test class to a C++ test case using Catch2, you first need to define the function `length_of_LIS` in C++. Then, you can create a C++ test case that uses Catch2's testing framework.

Here is how you might implement the function and write a test case for it:

```cpp
#include <vector>
#include <algorithm>
#include <iostream>

// Function to find the length of the longest strictly increasing subsequence
int length_of_LIS(const std::vector<int>& nums) {
    if (nums.empty()) return 0;

    std::vector<int> dp(nums.size(), 1);
    for (size_t i = 1; i < nums.size(); ++i) {
        for (size_t j = 0; j < i; ++j) {
            if (nums[i] > nums[j]) {
                dp[i] = std::max(dp[i], dp[j] + 1);
            }
        }
    }

    return *std::max_element(dp.begin(), dp.end());
}

// Catch2 test cases
#define CATCH_CONFIG_MAIN
#include "catch.hpp"

TEST_CASE("Test Length of Longest Increasing Subsequence", "[LIS]") {
    REQUIRE(length_of_LIS({10, 9, 2, 5, 3, 7, 101, 18}) == 4); // The longest increasing subsequence is [2, 3, 7, 101]
    REQUIRE(length_of_LIS({0, 1, 0, 3, 2, 3}) == 4);          // The longest increasing subsequence is [0, 1, 2, 3]
    REQUIRE(length_of_LIS({7, 7, 7, 7, 7, 7, 7}) == 1);       // All elements are equal, so the longest increasing subsequence has length 1
    REQUIRE(length_of_LIS({}) == 0);                           // Empty input should return 0
}
```

### Explanation:

1. **Function Implementation**:
   - The function `length_of_LIS` calculates the length of the longest strictly increasing subsequence in a given vector of integers.
   - It uses dynamic programming to achieve this. The `dp` array stores the length of the longest increasing subsequence ending at each index.

2. **Catch2 Test Cases**:
   - The `#define CATCH_CONFIG_MAIN` directive tells Catch2 to generate the main function automatically.
   - `TEST_CASE` defines a test case with a name and tags. In this case, the tag `[LIS]` helps in filtering tests related to the LIS problem.
   - `REQUIRE` is used to assert that the output of `length_of_LIS` matches the expected result.

### Compilation and Execution:

To compile and run these tests, you will need to have Catch2 installed. Hereâ€™s a simple way to do it using g++:

```sh
g++ -std=c++17 -I/path/to/catch2/include your_test_file.cpp -o your_test_executable
./your_test_executable
```

Replace `/path/to/catch2/include` with the actual path where the Catch2 headers are located. This command compiles the test file and runs the executable, which will output the results of the tests.