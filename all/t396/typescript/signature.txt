Hereâ€™s the equivalent TypeScript code for the provided Python function:

```typescript
import { List } from "typescript";

/**
 * Given an array of integers `nums`, find the length of the longest strictly increasing subsequence.
 * 
 * @param nums - An array of integers.
 * @returns The length of the longest strictly increasing subsequence.
 */
function lengthOfLIS(nums: number[]): number {
    // Implementation goes here
}
```

### Explanation:

1. **Function Signature**: The Python function `length_of_LIS` is converted to `lengthOfLIS` in TypeScript, following camelCase convention.
2. **Type Annotations**: The parameter `nums` is annotated with `number[]` instead of `List[int]`.
3. **Return Type**: The return type is explicitly annotated as `number`.
4. **Documentation Comments**: The Python docstring is converted to TypeScript JSDoc comments.

This conversion preserves the original functionality and structure while adapting to TypeScript conventions.