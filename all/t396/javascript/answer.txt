Sure! I'll convert the given Python code into JavaScript while maintaining the same functionality, logic, and structure. Here's the equivalent JavaScript code:

```javascript
function lengthOfLIS(nums) {
    /**
     * Given an array of integers nums, find the length of the longest strictly increasing subsequence in it.
     *
     * @param {number[]} nums - Array of integers
     * @return {number} Length of the longest strictly increasing subsequence
     */
    if (!nums.length) {
        return 0;
    }
    const dp = [];
    for (let i = 0; i < nums.length; i++) {
        dp[i] = 1;
        for (let j = 0; j < i; j++) {
            if (nums[i] > nums[j]) {
                dp[i] = Math.max(dp[i], dp[j] + 1);
            }
        }
    }
    return Math.max(...dp);
}
```

### Explanation:
1. **Function Definition**: The function `lengthOfLIS` takes an array `nums` as input and returns the length of the longest strictly increasing subsequence.
2. **Initialization**: If the input array `nums` is empty, the function returns `0`.
3. **Dynamic Programming Array**: The `dp` array is initialized with all elements set to `1`, similar to the Python code.
4. **Nested Loops**:
   - The outer loop iterates over each element in `nums`.
   - The inner loop compares each element with previous elements to update the `dp` array based on the strictly increasing condition.
5. **Return Statement**: Finally, the function returns the maximum value found in the `dp` array using `Math.max(...dp)`.

This JavaScript code maintains the same logic and structure as the provided Python code.