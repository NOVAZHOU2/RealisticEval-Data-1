Sure! I'll convert the given Python code into JavaScript while preserving the functionality, logic, and structure. Hereâ€™s the equivalent JavaScript code:

```javascript
function lengthOfLIS(nums) {
    /**
     * Given an array of integers nums, find the length of the longest strictly increasing subsequence in it.
     *
     * @param {number[]} nums - Array of integers
     * @return {number} Length of the longest strictly increasing subsequence
     */
    if (nums.length === 0) {
        return 0;
    }

    const dp = new Array(nums.length).fill(1);

    for (let i = 0; i < nums.length; i++) {
        for (let j = 0; j < i; j++) {
            if (nums[i] > nums[j]) {
                dp[i] = Math.max(dp[i], dp[j] + 1);
            }
        }
    }

    return Math.max(...dp);
}
```

### Explanation:
- **Function Definition**: The function `lengthOfLIS` is defined to match the Python function `length_of_LIS`.
- **Type Annotations**: JavaScript does not have explicit type annotations like Python, but we can use JSDoc comments to describe the types.
- **Initialization**: The `dp` array is initialized with all elements set to `1`, similar to the Python version.
- **Nested Loops**: The nested loops iterate over the `nums` array to update the `dp` array based on the condition `nums[i] > nums[j]`.
- **Return Statement**: The maximum value in the `dp` array is returned using `Math.max(...dp)`.

This JavaScript function should behave identically to the provided Python function.