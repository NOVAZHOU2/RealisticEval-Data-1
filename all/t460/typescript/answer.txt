Sure! Here is the equivalent TypeScript code for the provided Python function:

```typescript
function matrixVectorMultiplication(matrix: number[][], vector: number[]): number[] {
    // Ensure matrix dimensions are compatible with vector length
    if (matrix[0].length !== vector.length) {
        throw new Error("Matrix and vector dimensions are not compatible for multiplication");
    }

    // Initialize the result array with zeros
    const result = new Array(matrix.length).fill(0);

    // Perform the matrix-vector multiplication
    for (let i = 0; i < matrix.length; i++) {
        for (let j = 0; j < vector.length; j++) {
            result[i] += matrix[i][j] * vector[j];
        }
    }

    return result;
}
```

### Explanation:
1. **Type Annotations**: In TypeScript, we use `number[][]` for a two-dimensional array of numbers and `number[]` for a one-dimensional array of numbers.
2. **Error Handling**: The error message is thrown using `throw new Error()` instead of raising a `ValueError`.
3. **Initialization of Result Array**: Instead of `[0.0] * len(matrix)`, we use `new Array(matrix.length).fill(0)` to initialize the result array with zeros.
4. **Loop Syntax**: The loop syntax remains similar, but we use `let` for variable declarations.

This TypeScript code maintains the same functionality and logic as the original Python code.