Below is the Java code equivalent to the provided Python code, organized with the package name `org.real.temp` and the class name `Answer`. It includes the method `convertToRingFormat`, which converts a list of hole positions to the ring format (list of 1s and 0s).

```java
package org.real.temp;

import java.util.ArrayList;
import java.util.List;

public class Answer {
    /**
     * Convert a list of hole positions to the ring format (list of 1s and 0s).
     *
     * @param holes A list of integers representing the positions of the holes (0-indexed).
     * @return A list of length 32, where positions with holes are 0 and others are 1.
     */
    public static List<Integer> convertToRingFormat(List<Integer> holes) {
        // Initialize the ring with all positions set to 1
        List<Integer> ring = new ArrayList<>();
        for (int i = 0; i < 32; i++) {
            ring.add(1);
        }

        // Mark the positions of holes as 0
        for (Integer hole : holes) {
            if (0 <= hole && hole < 32) {  // Ensure hole positions are within valid range
                ring.set(hole, 0);
            }
        }

        return ring;
    }

    public static void main(String[] args) {
        // Example usage
        List<Integer> holes = new ArrayList<>();
        holes.add(5);
        holes.add(10);
        holes.add(15);

        List<Integer> ring = convertToRingFormat(holes);
        System.out.println(ring);
    }
}
```

### Explanation:
1. **Package Declaration**: The package name `org.real.temp` is declared at the beginning.
2. **Class Definition**: The class `Answer` is defined.
3. **Method Signature**: The method `convertToRingFormat` takes a `List<Integer>` as input and returns a `List<Integer>` representing the ring format.
4. **Initialization**: An `ArrayList<Integer>` named `ring` is initialized with 32 elements, each set to 1.
5. **Marking Holes**: For each hole position in the input list, the corresponding index in the `ring` list is set to 0, ensuring the positions are within the valid range.
6. **Return Value**: The modified `ring` list is returned.

This Java code maintains the same functionality and logic as the original Python code while adhering to Java's syntax and conventions.