Sure! Here is the equivalent TypeScript code for the provided Python function:

```typescript
function convertToRingFormat(holes: number[]): boolean[] {
    /**
     * Convert a list of hole positions to the ring format (array of true and false).
     *
     * @param {number[]} holes - A list of integers representing the positions of the holes (0-indexed).
     * @returns {boolean[]} An array of length 32, where positions with holes are false and others are true.
     */

    const result: boolean[] = new Array(32).fill(true);

    holes.forEach((hole) => {
        if (hole >= 0 && hole < 32) {
            result[hole] = false;
        }
    });

    return result;
}
```

### Explanation:
- The `convertToRingFormat` function takes an array of numbers (`holes`) and returns an array of booleans.
- It initializes an array of length 32 filled with `true`.
- It then iterates over each hole position in the input array and sets the corresponding index in the result array to `false`.

This TypeScript function maintains the same logic as the original Python function but uses TypeScript's type system and syntax.