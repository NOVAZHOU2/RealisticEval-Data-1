Hereâ€™s the equivalent JavaScript code that maintains the functionality, logic, and structure of your provided Python code:

```javascript
const fs = require('fs');

class FileProcessor {
    readFileAndProcessLines(path) {
        const processedLines = [];
        try {
            const fileContent = fs.readFileSync(path, 'utf-8');
            const lines = fileContent.split('\n');

            for (let line of lines) {
                // Remove inline comments
                line = line.split('#')[0].trim();
                // Only add non-empty lines to the list
                if (line) {
                    processedLines.push(line);
                }
            }
        } catch (e) {
            console.error(`Error reading file: ${e}`);
            throw new Error(`Error reading file: ${e}`);
        }

        return processedLines;
    }
}
```

### Explanation:
1. **File System Module**: In JavaScript, you use the `fs` module to read files, which is similar to Python's built-in file handling.
2. **Synchronous Reading**: `fs.readFileSync` is used to read the file synchronously, similar to how Python opens a file in a context manager.
3. **Line Processing**: The lines are split by newline characters and processed similarly, with comments removed and non-empty lines added to the array.
4. **Error Handling**: Uses a `try...catch` block to handle potential file reading errors, similar to Python's `try...except`.

Make sure to include this code in a Node.js environment since it uses the `fs` module.