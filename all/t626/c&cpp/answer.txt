To convert the provided Python code into equivalent C++ code, you can use the following structure:

```cpp
#include <iostream>
#include <fstream>
#include <string>
#include <vector>

class FileProcessor {
public:
    std::vector<std::string> read_file_and_process_lines(const std::string& path) {
        std::vector<std::string> processed_lines;
        std::ifstream file(path);
        
        if (!file.is_open()) {
            std::cerr << "Error reading file: Unable to open file." << std::endl;
            throw std::runtime_error("Error reading file: Unable to open file.");
        }

        std::string line;
        while (std::getline(file, line)) {
            // Remove inline comments
            line = line.substr(0, line.find('#'));
            // Only add non-empty lines to the list
            if (!line.empty()) {
                processed_lines.push_back(line);
            }
        }

        return processed_lines;
    }
};
```

This C++ code maintains the same functionality, handling file reading, comment removal, and error management while adapting to C++ syntax and features.