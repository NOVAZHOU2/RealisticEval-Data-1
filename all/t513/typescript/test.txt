Here's how you can convert your Python unittest test class to a TypeScript test case using Jest:

```typescript
import { describe, it, expect } from '@jest/globals';

describe('isPhraseInStringIgnoreCase', () => {
  it('should return true when phrase is found in string with variations in whitespace', () => {
    const phrase = 'hello world';
    const string = 'Hello   World! ';
    
    expect(isPhraseInStringIgnoreCase(phrase, string)).toBe(true);
  });

  it('should return false when phrase is not found in string', () => {
    const phrase = 'hello world';
    const string = 'This is a different sentence.';
    
    expect(isPhraseInStringIgnoreCase(phrase, string)).toBe(false);
  });

  it('should ignore case when searching for phrase', () => {
    const phrase = 'hello world';
    const string = 'HELLO WORLD!';
    
    expect(isPhraseInStringIgnoreCase(phrase, string)).toBe(true);
  });
});

function isPhraseInStringIgnoreCase(phrase: string, string: string): boolean {
  // Convert both strings to lowercase and replace multiple whitespaces with a single space
  const normalizedPhrase = phrase.toLowerCase().replace(/\s+/g, ' ');
  const normalizedString = string.toLowerCase().replace(/\s+/g, ' ');

  // Use regular expression to check if the phrase is a whole word in the string
  const regex = new RegExp(`\\b${normalizedPhrase}\\b`, 'gi');
  
  return regex.test(normalizedString);
}
```

Note that I've assumed `isPhraseInStringIgnoreCase` function implementation here, based on the description provided in the question. If your actual function implementation differs, please update accordingly. Also, make sure to install Jest in your project before running these tests.