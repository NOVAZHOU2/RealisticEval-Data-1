Sure! Here's how you can convert your Python function into JavaScript:

```javascript
function isPhraseInStringIgnoreCase(phrase, str) {
    // Normalize both strings by converting them to lowercase and replacing multiple spaces with a single space
    const normalizedPhrase = phrase.toLowerCase().replace(/\s+/g, ' ');
    const normalizedStr = str.toLowerCase().replace(/\s+/g, ' ');

    // Create a regex pattern to match the normalized phrase as a whole word
    const regexPattern = new RegExp(`\\b${normalizedPhrase}\\b`, 'gi');

    // Test if the normalized string contains the phrase
    return regexPattern.test(normalizedStr);
}

// Example usage:
const phrase = "example phrase";
const str = "This is an example phrase with extra spaces.";
console.log(isPhraseInStringIgnoreCase(phrase, str));  // Output: true
```

### Explanation:
1. **Normalization**:
   - Convert both `phrase` and `str` to lowercase using `.toLowerCase()`.
   - Replace multiple consecutive spaces with a single space using `.replace(/\s+/g, ' ')`.

2. **Regex Pattern**:
   - Use `\b` to denote word boundaries in the regex pattern, ensuring that only whole words are matched.
   - Use `'gi'` flags where `g` stands for global search (match all occurrences), and `i` stands for case-insensitive search.

3. **Test Function**:
   - Use the `test` method of the regex object to check if the normalized string contains the phrase.

This JavaScript function should behave similarly to your original Python function.