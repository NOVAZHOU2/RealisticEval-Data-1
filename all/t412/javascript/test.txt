Sure! Here's how you can convert your Python unittest test class to a Jest test case in JavaScript:

```python
import unittest

class TestStringMethods(unittest.TestCase):

    def test_upper(self):
        self.assertEqual('foo'.upper(), 'FOO')

    def test_isupper(self):
        self.assertTrue('FOO'.isupper())
        self.assertFalse('Foo'.isupper())

    def test_split(self):
        s = 'hello world'
        self.assertEqual(s.split(), ['hello', 'world'])
        with self.assertRaises(TypeError):
            s.split(2)

if __name__ == '__main__':
    unittest.main()
```

Here's the equivalent Jest test case using `describe` and `test` functions:

```javascript
const assert = require('assert');

describe('String Methods', () => {
    describe('#toUpperCase()', () => {
        it('should return the string in uppercase', () => {
            assert.strictEqual('foo'.toUpperCase(), 'FOO');
        });
    });

    describe('#isUpper()', () => {
        it('should return true if the string is in uppercase', () => {
            assert.strictEqual('FOO'.isUpper(), true);
        });
        
        it('should return false if the string is not in uppercase', () => {
            assert.strictEqual('Foo'.isUpper(), false);
        });
    });

    describe('#split()', () => {
        it('should split the string into an array of words', () => {
            const s = 'hello world';
            assert.deepStrictEqual(s.split(), ['hello', 'world']);
        });

        it('should throw TypeError when called with non-integer argument', () => {
            const s = 'hello world';
            assert.throws(() => s.split(2), TypeError);
        });
    });
});
```

Note that in Jest, we use `expect` instead of `assert`, but for simplicity, I used `assert` here. Also, `isUpper()` method doesn't exist in JavaScript strings, so I replaced it with a hypothetical one. If you need to test actual string methods like `isUpperCase()`, you should replace them accordingly.

To run the Jest tests, make sure you have Jest installed and then run the following command in your terminal:

```bash
npx jest
```

This will execute all the tests in your project.