Certainly! Below is the equivalent Java JUnit test case for your provided Python unittest test class. The package is `org.real.temp`, and the class name is `Tester`.

```java
package org.real.temp;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class Tester {

    private Calculator calculator;

    @BeforeEach
    public void setUp() {
        calculator = new Calculator();
    }

    @Test
    public void testAddition() {
        int result = calculator.add(2, 3);
        assertEquals(5, result, "Should be 5");
    }

    @Test
    public void testSubtraction() {
        int result = calculator.subtract(5, 3);
        assertEquals(2, result, "Should be 2");
    }

    @Test
    public void testMultiplication() {
        int result = calculator.multiply(4, 3);
        assertEquals(12, result, "Should be 12");
    }

    @Test
    public void testDivision() {
        double result = calculator.divide(10, 2);
        assertEquals(5.0, result, "Should be 5.0");
    }

    @Test
    public void testIsEven() {
        boolean result = calculator.isEven(4);
        assertTrue(result, "4 should be even");
    }
}

class Calculator {
    public int add(int a, int b) {
        return a + b;
    }

    public int subtract(int a, int b) {
        return a - b;
    }

    public int multiply(int a, int b) {
        return a * b;
    }

    public double divide(int a, int b) {
        if (b == 0) {
            throw new IllegalArgumentException("Divisor cannot be zero");
        }
        return (double) a / b;
    }

    public boolean isEven(int number) {
        return number % 2 == 0;
    }
}
```

### Explanation:
1. **Package Declaration**: The `@Test` annotation from JUnit is used to mark methods that contain test cases.
2. **Setup Method**: The `@BeforeEach` annotation is used to run setup code before each test method.
3. **Assertions**: The `assertEquals` and `assertTrue` methods from JUnit are used to assert conditions in the tests.
4. **Calculator Class**: A simple `Calculator` class is defined with basic arithmetic operations and an even check.

Make sure you have JUnit 5 added to your project dependencies. If you're using Maven, you can add the following dependency to your `pom.xml`:

```xml
<dependency>
    <groupId>org.junit.jupiter</groupId>
    <artifactId>junit-jupiter-engine</artifactId>
    <version>5.8.1</version>
    <scope>test</scope>
</dependency>
```

If you're using Gradle, add the following to your `build.gradle`:

```groovy
dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}
```

This will allow you to run the JUnit tests in your Java project.