Certainly! Below is the equivalent TypeScript code for the provided Python function, including appropriate JSDoc-style documentation comments:

```typescript
/**
 * Saves the provided content to a specified file after cleaning up redundant whitespace.
 * 
 * @param content - The text content to be saved to the file.
 * @param path - The file path where the content will be saved.
 */
function saveContentToFile(content: string, path: string): void {
    // Remove redundant whitespace from the content.
    // Split the content into lines, strip leading/trailing whitespace,
    // and filter out empty lines.
    const lines = content.split('\n').filter(line => line.trim().length > 0).map(line => line.trim());
    content = lines.join('\n');

    // Replace multiple spaces with a single space.
    content = content.replace(/\s+/g, ' ');

    // Write the cleaned content to the specified file.
    const fs = require('fs');
    fs.writeFileSync(path, content, { encoding: 'utf-8' });
}

// Example usage:
// saveContentToFile("This is some   text.\n\n\nAnother line.", "example.txt");
```

### Explanation:
1. **Function Signature**:
   - The function `saveContentToFile` is defined with two parameters: `content` and `path`, both of type `string`. It returns `void`.

2. **JSDoc Documentation**:
   - The JSDoc-style documentation comment is added above the function signature, providing details about the function, its parameters, and return type.

3. **Whitespace Handling**:
   - The content is split into lines using `\n` as the delimiter.
   - Each line is trimmed to remove leading and trailing whitespace.
   - Empty lines are filtered out.
   - The lines are joined back together with newline characters.
   - Multiple spaces within the content are replaced with a single space.

4. **File Writing**:
   - The `fs` module is used to write the cleaned content to the specified file.
   - `fs.writeFileSync` is used to ensure synchronous writing, which is appropriate for this example.

This TypeScript code preserves the original functionality and structure of the Python code, including the comments and documentation.