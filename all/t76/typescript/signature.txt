Certainly! Below is the TypeScript code that converts the provided Python function into equivalent TypeScript code, including appropriate JSDoc-style documentation comments:

```typescript
/**
 * Removes the common leading indentation from each line in a given multi-line string,
 * preserving the relative indentation of the text.
 *
 * @param {string} multilineText - The input string containing multiple lines.
 * @returns {string} The sanitized string with common leading indentation removed.
 */
function removeCommonIndentation(multilineText: string): string {
    const lines = multilineText.split('\n');

    // Filter out lines that are empty or only whitespace, as they do not affect minimum indentation
    const nonEmptyLines = lines.filter(line => line.trim().length > 0);

    // Determine the minimum indentation of non-empty lines
    let minIndent = Infinity;
    for (const line of nonEmptyLines) {
        const strippedLine = line.replace(/^\s+/, '');
        const indent = line.length - strippedLine.length;
        minIndent = Math.min(minIndent, indent);
    }

    // If there's no indentation or all lines are empty, return the original string
    if (minIndent === Infinity) {
        return multilineText;
    }

    // Remove the common leading indentation from each line
    const sanitizedLines = lines.map(line => line.slice(minIndent));

    return sanitizedLines.join('\n');
}

// Example usage
const exampleMultilineText = `
    This is a
        multi-line
    string.
`;
console.log(removeCommonIndentation(exampleMultilineText));
```

### Explanation:
1. **JSDoc Documentation**:
   - The JSDoc-style documentation comment is added at the beginning of the function.
   - It includes a brief description of the function, parameter details, and return type.

2. **Function Signature**:
   - The function signature `removeCommonIndentation` is defined with a parameter `multilineText` of type `string` and a return type of `string`.

3. **Logic Preservation**:
   - The logic within the function remains the same, ensuring that the functionality is preserved.
   - The `split`, `filter`, `map`, and `join` methods are used to process the input string and remove the common leading indentation.

4. **Example Usage**:
   - An example usage is provided to demonstrate how the function can be called.

This TypeScript code accurately translates the Python function into TypeScript, maintaining the original functionality and adding appropriate documentation.