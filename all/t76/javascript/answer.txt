Certainly! Below is the equivalent JavaScript code that maintains the same functionality, logic, and structure as the provided Python code:

```javascript
function removeCommonIndentation(multilineText) {
    /**
     * Removes the common leading indentation from each line in a given multi-line string,
     * preserving the relative indentation of the text.
     *
     * @param {string} multilineText - The input string containing multiple lines.
     * @returns {string} The sanitized string with common leading indentation removed.
     */
    const lines = multilineText.split('\n');

    // Filter out lines that are empty or only whitespace, as they do not affect minimum indentation
    const nonEmptyLines = lines.filter(line => line.trim().length > 0);

    // Determine the minimum indentation of non-empty lines
    let minIndent = Infinity;
    for (const line of nonEmptyLines) {
        const strippedLine = line.replace(/^\s+/, '');
        const indent = line.length - strippedLine.length;
        minIndent = Math.min(minIndent, indent);
    }

    // If there's no indentation or all lines are empty, return the original string
    if (minIndent === Infinity) {
        return multilineText;
    }

    // Remove the common leading indentation from each line
    const sanitizedLines = lines.map(line => line.slice(minIndent));

    return sanitizedLines.join('\n');
}
```

### Explanation:
1. **Splitting the Input String**: `multilineText.split('\n')` splits the input string into an array of lines.
2. **Filtering Non-Empty Lines**: `lines.filter(line => line.trim().length > 0)` filters out lines that are empty or contain only whitespace.
3. **Determining Minimum Indentation**: A loop iterates over the non-empty lines to find the minimum indentation.
4. **Sanitizing Lines**: `lines.map(line => line.slice(minIndent))` removes the common leading indentation from each line.
5. **Joining the Sanitized Lines**: `sanitizedLines.join('\n')` joins the sanitized lines back into a single string.

This JavaScript function should behave identically to the provided Python function.