Sure, here's how you can convert your Python function into JavaScript:

```javascript
const fs = require('fs');
const readline = require('readline');

async function readJsonl(filePath) {
  const fileStream = fs.createReadStream(filePath);

  const rl = readline.createInterface({
    input: fileStream,
    crlfDelay: Infinity
  });

  let jsonData = [];

  for await (const line of rl) {
    try {
      jsonData.push(JSON.parse(line));
    } catch (error) {
      throw new Error(`Error parsing JSON on line: ${error.message}`);
    }
  }

  return jsonData;
}

module.exports = { readJsonl };
```

This JavaScript version uses Node.js's built-in `fs` and `readline` modules to read the file line-by-line and parse each line as a JSON object. It also handles exceptions that may occur during parsing, similar to how the Python code raises exceptions.