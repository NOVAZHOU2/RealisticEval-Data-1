Here's how you might translate that Python function into C++:

```cpp
#include <fstream>
#include <iostream>
#include <string>
#include <vector>
#include <nlohmann/json.hpp>

using namespace std;
using json = nlohmann::json;

vector<json> readJsonL(const string& filePath)
{
    vector<json> jsonData;
    
    ifstream file(filePath);
    
    if (!file.is_open())
    {
        throw runtime_error("File not found");
    }

    string line;
    while (getline(file, line))
    {
        try
        {
            jsonData.push_back(json::parse(line));
        }
        catch (const json::parse_error& e)
        {
            cerr << "Error parsing line: " << e.what() << endl;
            // Handle the error as per your needs.
        }
    }

    return jsonData;
}
```
Please note that this C++ version uses the `nlohmann/json` library for JSON parsing, which you need to include in your project. Also, make sure to handle exceptions properly according to your requirements.