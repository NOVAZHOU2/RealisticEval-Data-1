Sure, here's how you can translate your Python code to Java:

```java
package org.real.temp;

public class Answer {
    /**
     * Simplify file paths in Windows systems into name strings.
     * For example:
     *      input: C:\\Users\\User\\file.txt
     *      output: C_Users_User_file.txt
     *
     * @param path Windows file path string
     * @return Simplified path string
     */
    public static String simplifyWindowsPath(String path) {
        // Replace backslashes with underscores and remove leading/trailing slashes
        return path.replace("\\", "_").replaceAll("^[/\\\\]+|[/\\\\]+$", "");
    }

    public static void main(String[] args) {
        // Example usage
        String simplifiedPath = simplifyWindowsPath("C:\\Users\\User\\file.txt");
        System.out.println(simplifiedPath);  // Output: C_Users_User_file.txt
    }
}
```

### Explanation:
1. **Package Declaration**: The package declaration `package org.real.temp;` specifies where the class `Answer` belongs.
2. **Class Definition**: The class `Answer` contains the method `simplifyWindowsPath`.
3. **Method Signature**:
   - `public static String simplifyWindowsPath(String path)`: This defines a public static method that takes a `String` parameter (`path`) and returns a `String`.
4. **String Replacement**:
   - `path.replace("\\", "_")`: Replaces all occurrences of backslashes (`\`) with underscores (`_`).
   - `replaceAll("^[/\\\\]+|[/\\\\]+$", "")`: Removes any leading or trailing slashes or backslashes from the path.
5. **Main Method**: A simple `main` method is provided to demonstrate how to use the `simplifyWindowsPath` method.

This Java code should achieve the same functionality as your original Python code.