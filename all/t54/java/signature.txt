Certainly! Here is the equivalent Java code for the given Python function, including appropriate Javadoc comments and type conversions:

```java
import java.util.ArrayList;
import java.util.List;

public class Answer {

    /**
     * Processes a list of strings, removing all occurrences of three consecutive backticks from each string.
     *
     * @param stringList The list of strings to process.
     * @return A new list with all instances of three consecutive backticks removed from each string.
     */
    public static List<String> removeTripleBackticks(List<String> stringList) {
        // Use a stream to process each string in the list by removing three consecutive backticks
        List<String> processedList = new ArrayList<>();
        for (String s : stringList) {
            processedList.add(s.replace("```", ""));
        }
        return processedList;
    }

    public static void main(String[] args) {
        // Example usage
        List<String> exampleList = Arrays.asList("```example```", "test```code```", "no```backticks");
        List<String> resultList = removeTripleBackticks(exampleList);
        System.out.println(resultList); // Output: [example, testcode, nobackticks]
    }
}
```

### Explanation:
1. **Package Declaration**: The package declaration is omitted here since it is not explicitly required in the snippet. If needed, you can add `package org.real.temp;` at the top.
2. **Imports**: Necessary imports are included at the beginning (`ArrayList`, `List`).
3. **Class Definition**: The class `Answer` is defined.
4. **Javadoc Comments**: The Python docstring is converted into a Javadoc comment block.
5. **Method Signature**: The method `removeTripleBackticks` is declared as `public static List<String> removeTripleBackticks(List<String> stringList)`.
6. **Implementation**: The method processes each string in the input list using a loop and replaces occurrences of `"```"` with an empty string.
7. **Example Usage**: A `main` method is provided to demonstrate how to use the `removeTripleBackticks` method.

This Java code preserves the original functionality and structure of the Python code while adhering to Java's conventions and syntax.