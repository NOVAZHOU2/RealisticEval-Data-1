Here is the equivalent TypeScript code signature with the same comments:

```typescript
type Data = { [key: string]: any } | any[];

function convertStringsToNumbers(data: Data): Data {
    /**
     * Convert strings in nested structures (e.g. dictionaries, arrays) to numbers (integers or floating point numbers) as much as possible

     * @param data - before convert data

     * @returns - after convert data
     */
}
```

In TypeScript, we use `type` keyword instead of `from typing import`. Also, we use `{ [key: string]: any }` to represent dictionary and `any[]` for list. The function parameter and return type are specified using colon (`:`) followed by their types.