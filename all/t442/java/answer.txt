Here's the Java code equivalent, organized within the package `org.real.temp` and the class `Answer`, with the same functionality as the provided Python code:

```java
package org.real.temp;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Answer {

    public static Object convertStringsToNumbers(Object data) {
        if (data instanceof Map) {
            @SuppressWarnings("unchecked")
            Map<Object, Object> map = (Map<Object, Object>) data;
            Map<Object, Object> convertedMap = new HashMap<>();
            for (Map.Entry<Object, Object> entry : map.entrySet()) {
                convertedMap.put(entry.getKey(), convertStringsToNumbers(entry.getValue()));
            }
            return convertedMap;
        } else if (data instanceof List) {
            @SuppressWarnings("unchecked")
            List<Object> list = (List<Object>) data;
            List<Object> convertedList = new ArrayList<>();
            for (Object item : list) {
                convertedList.add(convertStringsToNumbers(item));
            }
            return convertedList;
        } else if (data instanceof String) {
            String str = (String) data;
            try {
                // Try converting to float first, then to int if possible
                if (str.contains(".")) {
                    return Float.parseFloat(str);
                } else {
                    return Integer.parseInt(str);
                }
            } catch (NumberFormatException e) {
                return data; // Return original string if conversion fails
            }
        } else {
            return data; // Return data unchanged if it's not a string
        }
    }

    public static void main(String[] args) {
        // Example usage
        Map<String, Object> data = new HashMap<>();
        data.put("a", "123");
        data.put("b", List.of("456", "789.0"));
        data.put("c", "not_a_number");

        System.out.println(convertStringsToNumbers(data));
    }
}
```

### Explanation:
1. **Package and Class Declaration**: The code starts with the package declaration `package org.real.temp;` followed by the class declaration `public class Answer`.
2. **Method Definition**: The method `convertStringsToNumbers` is defined to handle the conversion of strings to numbers.
3. **Type Checking**: Java uses explicit type checking with `instanceof`. The method checks if the input `data` is a `Map`, `List`, or `String`.
4. **Handling Collections**: For maps and lists, the method recursively calls itself to process each element.
5. **String Conversion**: If the input is a string, it attempts to convert it to a number. It tries to parse as a float first, then as an integer if no decimal point is present.
6. **Exception Handling**: A `NumberFormatException` is caught if the string cannot be parsed as a number, and the original string is returned.
7. **Main Method**: An example usage is provided in the `main` method to demonstrate how to call the `convertStringsToNumbers` method.

This Java code maintains the same functionality and logic as the provided Python code, adhering to Java's syntax and best practices.