To convert the provided Python unittest code to a Java TestCase using JUnit, I'll create a Java class that mirrors the structure of your Python code. Here's how it could look:

```java
package org.real.temp;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertArrayEquals;

class Tester {

    @Test
    void testPerformPolynomialDecryption() {
        int degree = 2;
        int modulus = 5;
        int[] key = {1, 2, 3};
        int[] encryptedData = {4, 3, 2};

        int[] expectedDecryptedData = { /* expected decrypted values */ };
        int[] actualDecryptedData = performPolynomialDecryption(degree, modulus, key, encryptedData);
        
        assertArrayEquals(expectedDecryptedData, actualDecryptedData);
    }

    int[] performPolynomialDecryption(int degree, int modulus, int[] key, int[] encryptedData) {
        // Implement the decryption logic based on the polynomial and keys
        return new int[] {}; // Placeholder for actual implementation
    }
}
```

Make sure to fill in the expected decrypted values and implement the decryption logic in the `performPolynomialDecryption` method.