Here is the equivalent TypeScript code for the provided Python function:

```typescript
/**
 * Calculate the total number of seconds given an array of time periods in the order of
 * days, hours, minutes, and seconds.
 * 
 * @param time - An array of numbers, where
 *        time[0] - number of days (optional)
 *        time[1] - number of hours (optional)
 *        time[2] - number of minutes (optional)
 *        time[3] - number of seconds (optional)
 * @returns The total number of seconds as a number.
 * 
 * Examples:
 *   calculateTotalSeconds([1, 2, 3, 4]) returns 93784
 *   calculateTotalSeconds([0, 2, 3]) returns 7380
 */
function calculateTotalSeconds(time: number[]): number {
    let totalSeconds = 0;

    // Assuming missing values are zero
    const days = time[0] || 0;
    const hours = time[1] || 0;
    const minutes = time[2] || 0;
    const seconds = time[3] || 0;

    totalSeconds += days * 24 * 60 * 60;
    totalSeconds += hours * 60 * 60;
    totalSeconds += minutes * 60;
    totalSeconds += seconds;

    return totalSeconds;
}
```

This TypeScript function preserves the original functionality and structure of the Python function, including its documentation and examples. The `Tuple[int]` type annotation in Python is translated to `number[]` in TypeScript, which represents an array of numbers. The function body remains largely unchanged, with some minor adjustments to match TypeScript syntax and conventions.