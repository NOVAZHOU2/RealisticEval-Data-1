Sure! Here's the equivalent TypeScript code for the provided Python function:

```typescript
function calculateTotalSeconds(time: [number, number?, number?, number?]): number {
    const SECONDS_PER_DAY = 86400;
    const SECONDS_PER_HOUR = 3600;
    const SECONDS_PER_MINUTE = 60;

    // Unpacking the time with defaults
    const [days = 0, hours = 0, minutes = 0, seconds = 0] = time;

    const totalSeconds = (
        days * SECONDS_PER_DAY +
        hours * SECONDS_PER_HOUR +
        minutes * SECONDS_PER_MINUTE +
        seconds
    );

    return totalSeconds;
}

// Example usage
console.log(calculateTotalSeconds([1, 2, 3, 4])); // Output: 93784
console.log(calculateTotalSeconds([0, 2, 3])); // Output: 7380
```

### Explanation:
1. **Function Definition**:
   - The function `calculateTotalSeconds` takes a tuple `[number, number?, number?, number?]` as its parameter. This tuple can have between 1 and 4 elements, where missing elements are optional.
   
2. **Constants**:
   - Constants `SECONDS_PER_DAY`, `SECONDS_PER_HOUR`, and `SECONDS_PER_MINUTE` are defined to represent the number of seconds in a day, hour, and minute respectively.

3. **Unpacking**:
   - The tuple is destructured using default values for missing elements (`days = 0`, `hours = 0`, `minutes = 0`, `seconds = 0`).

4. **Calculation**:
   - The total number of seconds is calculated by multiplying each component by its respective constant and summing them up.

5. **Return**:
   - The function returns the total number of seconds.

This approach ensures that the TypeScript code maintains the same functionality and logic as the original Python code while adhering to TypeScript's static type system.