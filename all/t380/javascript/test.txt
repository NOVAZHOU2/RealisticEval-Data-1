Sure! Below is the equivalent JavaScript test case using Jest for the provided Python `unittest` test class:

```javascript
const calculateTotalSeconds = require('./calculateTotalSeconds'); // Adjust the path accordingly

describe('calculateTotalSeconds', () => {
  it('should return the total number of seconds for [1, 2, 3, 4]', () => {
    const result = calculateTotalSeconds([1, 2, 3, 4]);
    expect(result).toBe(93784);
  });

  it('should return the total number of seconds for [0, 2, 3]', () => {
    const result = calculateTotalSeconds([0, 2, 3]);
    expect(result).toBe(7380);
  });
});
```

### Explanation:
- **`describe`**: This function groups related tests together.
- **`it`**: This function defines an individual test case.
- **`expect`**: This function is used to make assertions about the result of the function being tested.

Make sure you have Jest installed in your project. If not, you can install it using npm:

```sh
npm install --save-dev jest
```

Then, add the following script to your `package.json` file to run the tests:

```json
"scripts": {
  "test": "jest"
}
```

Now, you can run the tests using:

```sh
npm test
```

This will execute the tests defined in your JavaScript files.