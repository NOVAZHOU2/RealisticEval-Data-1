Sure! Below is the equivalent JavaScript code that maintains the same functionality, logic, and structure as the provided Python code:

```javascript
function calculateTotalSeconds(time) {
    /**
     * Calculate the total number of seconds given an array of time periods in the order of
     * days, hours, minutes, and seconds.
     *
     * @param {Array} time - array, where
     *   time[0] - number of days (optional)
     *   time[1] - number of hours (optional)
     *   time[2] - number of minutes (optional)
     *   time[3] - number of seconds (optional)
     * @returns {number} - total number of seconds
     *
     * Examples:
     *   calculateTotalSeconds([1, 2, 3, 4]) returns 93784
     *   calculateTotalSeconds([0, 2, 3]) returns 7380
     */
    const SECONDS_PER_DAY = 86400;
    const SECONDS_PER_HOUR = 3600;
    const SECONDS_PER_MINUTE = 60;

    // Unpacking the time with defaults
    let [days = 0, hours = 0, minutes = 0, seconds = 0] = time.concat([0, 0, 0, 0]).slice(0, 4);

    let totalSeconds = (
        days * SECONDS_PER_DAY +
        hours * SECONDS_PER_HOUR +
        minutes * SECONDS_PER_MINUTE +
        seconds
    );

    return totalSeconds;
}

// Example usage
console.log(calculateTotalSeconds([1, 2, 3, 4])); // Output: 93784
console.log(calculateTotalSeconds([0, 2, 3])); // Output: 7380
```

### Explanation:
1. **Function Definition**: The function `calculateTotalSeconds` is defined with a parameter `time`.
2. **Constants**: Constants `SECONDS_PER_DAY`, `SECONDS_PER_HOUR`, and `SECONDS_PER_MINUTE` are declared.
3. **Unpacking with Defaults**: The `time` array is extended with `[0, 0, 0, 0]` to ensure it has at least four elements, then sliced to get the first four elements. Default values (`0`) are assigned if any element is missing.
4. **Calculation**: The total number of seconds is calculated using the constants and unpacked values.
5. **Return Statement**: The total number of seconds is returned.
6. **Example Usage**: Two examples are provided to demonstrate the function's correctness.