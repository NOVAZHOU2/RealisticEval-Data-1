Certainly! Hereâ€™s the TypeScript version of your Jest test case using `describe` and `test` blocks, with the necessary type annotations:

```typescript
import { isCronBetween2And4AM } from './path/to/your/function'; // Import the function you want to test

describe('isCronBetween2And4AM', () => {
    test('should return true for specific hours 2, 3, and 4', () => {
        expect(isCronBetween2And4AM('0 2,3,4 * * *')).toBe(true);
    });

    test('should return false for range that includes 2 to 4 a.m.', () => {
        expect(isCronBetween2And4AM('0 1-5 * * *')).toBe(false);
    });

    test('should return false for range that excludes 2 to 4 a.m.', () => {
        expect(isCronBetween2And4AM('0 0-1,5-23 * * *')).toBe(false);
    });

    test('should return true for wildcard in hour field', () => {
        expect(isCronBetween2And4AM('0 * * * *')).toBe(true); // Note: This should be false based on the function logic
    });
});
```

### Explanation:
1. **Import Statement**: 
   - Ensure you import the `isCronBetween2And4AM` function from the appropriate module or file.
   
2. **Type Annotations**:
   - The function `isCronBetween2And4AM` is already defined with the correct types in the TypeScript code provided earlier.

3. **Test Cases**:
   - Each test case uses `expect` and `toBe` to assert the expected behavior of the function.

### Note:
- In the last test case, `'0 * * * *'` (wildcard in the hour field) should logically return `false` because the wildcard includes all hours, not just between 2 a.m. and 4 a.m. If the intention is different, you can adjust the expected value accordingly.

If you need any further adjustments or additional test cases, feel free to let me know!