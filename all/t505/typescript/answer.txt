Sure! Here is the equivalent TypeScript code:

```typescript
import { strict as assert } from 'assert';

function camelToSnake(camelStr: string): string {
    // Use regular expression to insert underscores before each uppercase letter,
    // and then convert the whole string to lowercase
    const snakeCaseStr = camelStr.replace(/(?<!^)(?=[A-Z])/g, '_').toLowerCase();
    return snakeCaseStr;
}

// Example usage
console.log(camelToSnake('CamelCaseString'));  // Output: camel_case_string

// Test function to verify correctness
function testCamelToSnake() {
    assert.equal(camelToSnake('CamelCaseString'), 'camel_case_string');
    assert.equal(camelToSnake('AnotherExample'), 'another_example');
    assert.equal(camelToSnake('SimpleTest'), 'simple_test');
    console.log('All tests passed!');
}

// Run the test function
testCamelToSnake();
```

This TypeScript code defines a function `camelToSnake` that converts a CamelCase string to snake_case. It uses a regular expression to insert underscores before each uppercase letter and then converts the entire string to lowercase. The test function `testCamelToSnake` verifies the correctness of the conversion with several examples.