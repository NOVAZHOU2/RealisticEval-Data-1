Certainly! Below is the Java equivalent of the provided Python code, including the method signature, Javadoc comments, and functionality. The method `camelToSnake` is defined within the class `Answer`, and the package is set to `org.real.temp`.

```java
package org.real.temp;

import java.util.regex.Pattern;

/**
 * A class containing methods for string manipulation.
 */
public class Answer {

    /**
     * Converts a CamelCase string to snake_case.
     *
     * @param camelStr The CamelCase string to convert.
     * @return The converted snake_case string.
     */
    public static String camelToSnake(String camelStr) {
        // Use regular expression to insert underscores before each uppercase letter,
        // and then convert the whole string to lowercase
        String snakeCaseStr = Pattern.compile("(?<!^)(?=[A-Z])").matcher(camelStr).replaceAll("_").toLowerCase();
        return snakeCaseStr;
    }

    // Example usage
    public static void main(String[] args) {
        String exampleCamel = "ExampleCamelCaseString";
        System.out.println("Converted to snake_case: " + camelToSnake(exampleCamel));
    }
}
```

### Explanation:
1. **Package Declaration**: The package is declared as `org.real.temp`.
2. **Class Definition**: The class `Answer` contains the method `camelToSnake`.
3. **Javadoc Comments**: The method `camelToSnake` includes detailed Javadoc comments describing its purpose, parameters, and return value.
4. **Method Implementation**: The method uses a regular expression to convert the CamelCase string to snake_case.
5. **Example Usage**: The `main` method demonstrates how to use the `camelToSnake` method.

This Java code preserves the original functionality and structure of the Python code while adhering to Java conventions and best practices.