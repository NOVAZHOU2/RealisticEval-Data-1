Sure, here's the equivalent JavaScript code that maintains the same functionality, logic, and structure as the provided Python code:

```javascript
function camelToSnake(camelStr) {
    /**
     * Convert a CamelCase string to snake_case.
     *
     * @param {string} camelStr - The CamelCase string to convert.
     * @returns {string} The converted snake_case string.
     */
    // Use regular expression to insert underscores before each uppercase letter,
    // and then convert the whole string to lowercase
    const snakeCaseStr = camelStr.replace(/(?<!^)(?=[A-Z])/g, '_').toLowerCase();
    return snakeCaseStr;
}
```

### Explanation:
1. **Function Definition**: The function `camelToSnake` is defined with a single parameter `camelStr`.
2. **Regular Expression**: The regular expression `/(?<!^)(?=[A-Z])/g` is used to match positions in the string where an underscore should be inserted. This regex uses negative lookbehind `(?<!^)` to ensure that the position is not at the start of the string and a positive lookahead `(?=[A-Z])` to ensure that the next character is an uppercase letter.
3. **String Replacement**: The `replace` method is used with the regex and a replacement string `'_'` to insert underscores before each uppercase letter.
4. **Lowercase Conversion**: The resulting string is converted to lowercase using `toLowerCase`.
5. **Return Statement**: The function returns the converted snake_case string.

This JavaScript function will behave identically to the provided Python function, converting CamelCase strings to snake_case.