Sure! Hereâ€™s the equivalent C++ code for the provided Python function:

```cpp
#include <vector>
#include <cmath> // For std::nan
#include <stdexcept> // For std::invalid_argument

double calculate(const std::vector<int>& values, int period) {
    // Check if the number of values is less than the specified period
    if (values.empty() || values.size() < static_cast<size_t>(period) || period <= 0) {
        return std::nan(""); // Return NaN for invalid input
    }

    double sum_values = 0.0; // Initialize the sum

    // Calculate the sum of the last 'period' values
    for (size_t i = values.size() - period; i < values.size(); ++i) {
        sum_values += values[i];
    }

    // Return the average of the last 'period' values
    return sum_values / period;
}
```

If you need further assistance or more details, just let me know!