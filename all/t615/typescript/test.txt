Hereâ€™s the equivalent Jest test class in TypeScript, converted from the provided Python unittest code:

```typescript
import { calculate } from './path-to-your-module'; // Adjust the import to the actual module path

describe('calculate', () => {
    
    test('should calculate the average with valid input', () => {
        const values: number[] = [1, 2, 3, 4, 5];
        const period: number = 3;
        const expected: number = 4.0; // (3 + 4 + 5) / 3
        expect(calculate(values, period)).toBe(expected);
    });

    test('should calculate the average with all same values', () => {
        const values: number[] = [5, 5, 5, 5, 5];
        const period: number = 5;
        const expected: number = 5.0; // (5 + 5 + 5 + 5 + 5) / 5
        expect(calculate(values, period)).toBe(expected);
    });

    test('should calculate the average with a single value', () => {
        const values: number[] = [10];
        const period: number = 1;
        const expected: number = 10.0; // (10) / 1
        expect(calculate(values, period)).toBe(expected);
    });

    test('should return NaN with insufficient values', () => {
        const values: number[] = [1, 2];
        const period: number = 3;
        expect(calculate(values, period)).toBeNaN(); // Expecting NaN
    });

    test('should return NaN with an empty list', () => {
        const values: number[] = [];
        const period: number = 1;
        expect(calculate(values, period)).toBeNaN(); // Expecting NaN
    });

    test('should return NaN with negative period', () => {
        const values: number[] = [1, 2, 3, 4, 5];
        const period: number = -1;
        expect(calculate(values, period)).toBeNaN(); // Expecting NaN
    });
});
```

### Key Adjustments:
1. **Import Statement**: The function `calculate` needs to be imported from the relevant module. Adjust the import path as necessary.
2. **Test Structure**: The `unittest.TestCase` is replaced with Jest's `describe` and `test` functions.
3. **Assertions**: Python's `assertEqual` and `assertTrue` are replaced with Jest's `toBe` and `toBeNaN` methods.
4. **Type Annotations**: TypeScript type annotations are included for the `values` and `period` variables.

This Jest test suite maintains the same functionality and logic as the original Python tests.