Here's the equivalent C++ code for your TypeScript function:

```cpp
#include <iostream>
#include <chrono>
#include <string>

std::string getTimestamp(std::chrono::system_clock::time_point createdAt) {
    auto now = std::chrono::system_clock::now();
    auto diffInSeconds = std::chrono::duration_cast<std::chrono::seconds>(now - createdAt).count();

    struct Interval {
        int seconds;
        const char* unit;
    };

    Interval intervals[] = {
        {31536000, "year"}, {2592000, "month"}, {604800, "week"},
        {86400, "day"}, {3600, "hour"}, {60, "minute"},
        {1, "second"}
    };

    int intervalCount = 0;
    const char* intervalUnit = "";

    for (const auto& interval : intervals) {
        if (diffInSeconds >= interval.seconds) {
            intervalCount = diffInSeconds / interval.seconds;
            intervalUnit = (intervalCount == 1) ? interval.unit : std::string(interval.unit) + "s".c_str();
            break;
        }
    }

    return std::to_string(intervalCount) + " " + intervalUnit + " ago";
}
```

You can use this function by passing a `std::chrono::system_clock::time_point` representing the created date.