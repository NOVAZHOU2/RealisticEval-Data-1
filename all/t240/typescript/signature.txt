Sure! Here is the TypeScript version of your Python code with the same function signature and comments:

```typescript
/**
 * Converts a time duration string into a `Date` object.
 * The input string can include days (d), hours (h), minutes (m), seconds (s), and milliseconds (ms).
 * e.g. "1d 2h 3m 4s 500ms"
 * Each unit should be specified by an integer followed by its corresponding unit letter.
 *
 * @param {string} timeString - A string representing the time duration.
 * @returns {Date} - A Date object representing the input duration.
 */
function genTimeoutDuration(timeString: string): Date {
    const regex = /(\d+)([dhms])/g;
    let match: RegExpExecArray | null;
    let totalMilliseconds = 0;

    while ((match = regex.exec(timeString)) !== null) {
        const value = parseInt(match[1], 10);
        const unit = match[2];

        switch (unit) {
            case 'd':
                totalMilliseconds += value * 24 * 60 * 60 * 1000;
                break;
            case 'h':
                totalMilliseconds += value * 60 * 60 * 1000;
                break;
            case 'm':
                totalMilliseconds += value * 60 * 1000;
                break;
            case 's':
                totalMilliseconds += value * 1000;
                break;
            case 'ms':
                totalMilliseconds += value;
                break;
            default:
                throw new Error(`Invalid unit: ${unit}`);
        }
    }

    return new Date(Date.now() + totalMilliseconds);
}
```

This TypeScript function `genTimeoutDuration` takes a time duration string and converts it into a `Date` object representing the input duration. It uses a regular expression to parse the input string and calculates the total number of milliseconds based on the provided units. Finally, it creates a new `Date` object with the current timestamp plus the calculated milliseconds.