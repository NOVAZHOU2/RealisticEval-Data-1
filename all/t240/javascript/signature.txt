Sure, here is the JavaScript equivalent of your Python function with the same comments:

```javascript
function genTimeoutTimedelta(timeString) {
    /**
     * Converts a time duration string into a timedelta object.
     * The input string can include days (d), hours (h), minutes (m), seconds (s), and milliseconds (ms).
     * eg. "1d 2h 3m 4s 500ms"
     * Each unit should be specified by an integer followed by its corresponding unit letter.
     *
     * @param {string} timeString - A string representing the time duration.
     * @returns {number} - The total time in milliseconds.
     */
    
    // Regular expression to match the pattern
    const regex = /(\d+)([dhms])/g;
    let match;
    let totalMilliseconds = 0;

    while ((match = regex.exec(timeString)) !== null) {
        const value = parseInt(match[1], 10);
        const unit = match[2];

        switch (unit) {
            case 'd':
                totalMilliseconds += value * 24 * 60 * 60 * 1000; // Days to milliseconds
                break;
            case 'h':
                totalMilliseconds += value * 60 * 60 * 1000; // Hours to milliseconds
                break;
            case 'm':
                totalMilliseconds += value * 60 * 1000; // Minutes to milliseconds
                break;
            case 's':
                totalMilliseconds += value * 1000; // Seconds to milliseconds
                break;
            default:
                throw new Error(`Invalid unit: ${unit}`);
        }
    }

    return totalMilliseconds;
}
```

This JavaScript function `genTimeoutTimedelta` takes a string representing a time duration and converts it into the total number of milliseconds. It uses a regular expression to parse the input string and accumulates the total milliseconds based on the units provided.