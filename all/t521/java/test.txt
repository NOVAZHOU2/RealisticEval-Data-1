To convert your Python `unittest` test class to a Java JUnit test case, you'll need to follow these steps:

1. Create a new Java class named `Tester`.
2. Import necessary packages.
3. Write JUnit test methods that correspond to your Python test cases.
4. Use assertions to verify the expected outcomes.

Below is an example of how you might write the equivalent Java JUnit test case for your Python code:

```java
package org.real.temp;

import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Tester {

    // Method under test
    public Map<String, Integer> wordFilterCounter(String text, List<String> filterWords) {
        Map<String, Integer> result = new HashMap<>();
        String[] words = text.split("\\s+");
        
        for (String filterWord : filterWords) {
            int count = 0;
            for (String word : words) {
                if (filterWord.equalsIgnoreCase(word)) {
                    count++;
                }
            }
            result.put(filterWord, count);
        }
        
        return result;
    }

    @Test
    public void testWordFilterCounter() {
        String text = "Hello world hello everyone";
        List<String> filterWords = List.of("hello", "world");
        Map<String, Integer> expected = new HashMap<>();
        expected.put("hello", 2);
        expected.put("world", 1);

        Map<String, Integer> actual = wordFilterCounter(text, filterWords);

        assertEquals(expected, actual);
    }

    @Test
    public void testWordFilterCounterWithCaseInsensitive() {
        String text = "Hello world hello Everyone";
        List<String> filterWords = List.of("hello", "world");
        Map<String, Integer> expected = new HashMap<>();
        expected.put("hello", 2);
        expected.put("world", 1);

        Map<String, Integer> actual = wordFilterCounter(text, filterWords);

        assertEquals(expected, actual);
    }

    @Test
    public void testWordFilterCounterWithNoMatches() {
        String text = "Goodbye cruel world";
        List<String> filterWords = List.of("hello", "world");
        Map<String, Integer> expected = new HashMap<>();
        expected.put("hello", 0);
        expected.put("world", 0);

        Map<String, Integer> actual = wordFilterCounter(text, filterWords);

        assertEquals(expected, actual);
    }

    @Test
    public void testWordFilterCounterWithEmptyText() {
        String text = "";
        List<String> filterWords = List.of("hello", "world");
        Map<String, Integer> expected = new HashMap<>();
        expected.put("hello", 0);
        expected.put("world", 0);

        Map<String, Integer> actual = wordFilterCounter(text, filterWords);

        assertEquals(expected, actual);
    }

    @Test
    public void testWordFilterCounterWithEmptyFilterWords() {
        String text = "Hello world hello Everyone";
        List<String> filterWords = List.of();
        Map<String, Integer> expected = new HashMap<>();

        Map<String, Integer> actual = wordFilterCounter(text, filterWords);

        assertEquals(expected, actual);
    }
}
```

### Explanation:

- **Package Declaration**: The package declaration at the top (`package org.real.temp;`) matches the package name you specified.
- **Class Declaration**: The Java class `Tester` corresponds to your Python class.
- **Method Implementation**: The `wordFilterCounter` method in Java follows the same logic as your Python method but uses Java's data structures and syntax.
- **JUnit Tests**: Several JUnit test methods (`testWordFilterCounter`, `testWordFilterCounterWithCaseInsensitive`, etc.) are written to cover different scenarios. Each test method asserts the expected output against the actual output using `assertEquals`.

Make sure you have JUnit 5 included in your project dependencies. If you're using Maven, add the following dependency to your `pom.xml`:

```xml
<dependency>
    <groupId>org.junit.jupiter</groupId>
    <artifactId>junit-jupiter-engine</artifactId>
    <version>5.8.1</version>
    <scope>test</scope>
</dependency>
```

If you're using Gradle, add the following to your `build.gradle`:

```groovy
dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}
```

This should give you a good starting point for converting your Python unit tests to Java JUnit tests.