Sure! Below is the equivalent C++ code signature for the given Python code:

```cpp
#include <iostream>
#include <string>
#include <vector>
#include <unordered_map>
#include <sstream>

/**
 * Counts the occurrences of specified words in the given text.
 *
 * This function filters the words from the text based on the provided list,
 * counts their occurrences, and returns an unordered map with the words in the
 * order they were provided.
 *
 * @param text The input text from which to count words.
 * @param filterWords A vector of words to filter and count.
 * @return An unordered map with the count of each filter word in the text,
 *         maintaining the order from filterWords.
 */
std::unordered_map<std::string, int> wordFilterCounter(const std::string& text, const std::vector<std::string>& filterWords);
```

This C++ code uses `std::unordered_map` instead of `Dict` and `std::vector` instead of `List`. Note that `std::unordered_map` does not maintain insertion order, so if you need to maintain the order, you might consider using `std::map` or another data structure that maintains order.