Certainly! Below is the equivalent JavaScript code that maintains the same functionality, logic, and structure as the provided Python code:

```javascript
const assert = require('assert'); // For testing purposes

function wordFilterCounter(text, filterWords) {
    /**
     * Counts the occurrences of specified words in the given text.
     *
     * This function filters the words from the text based on the provided list,
     * counts their occurrences, and returns an object with the words in the
     * order they were provided.
     *
     * @param {string} text - The input text from which to count words.
     * @param {Array<string>} filterWords - An array of words to filter and count.
     * @returns {Object} An object with the count of each filter word in the text,
     *                   maintaining the order from filterWords.
     */

    // Convert filter words to lowercase for case-insensitive comparison
    const filterWordsSet = new Set(filterWords.map(word => word.toLowerCase()));

    // Find all words in the text using a regex pattern
    const words = text.toLowerCase().match(/\b\w+(?:'\w+)?\b/g);

    // Count occurrences of filtered words
    const wordCounts = {};
    if (words) {
        words.forEach(word => {
            if (filterWordsSet.has(word)) {
                wordCounts[word] = (wordCounts[word] || 0) + 1;
            }
        });
    }

    // Create an ordered output based on the original order of filterWords
    const orderedOutput = {};
    filterWords.forEach(word => {
        orderedOutput[word] = wordCounts[word.toLowerCase()] || 0;
    });

    return orderedOutput;
}

// Example usage and test
const text = "The quick brown fox jumps over the lazy dog. The quick brown fox jumps over the lazy dog.";
const filterWords = ["the", "quick", "fox", "dog"];

const expectedResult = {
    the: 2,
    quick: 2,
    fox: 2,
    dog: 2
};

const result = wordFilterCounter(text, filterWords);
console.log(result); // Should log: { the: 2, quick: 2, fox: 2, dog: 2 }

// Test the function
assert.deepStrictEqual(result, expectedResult, 'The function did not return the expected result');
```

### Explanation:
1. **Function Definition**: `wordFilterCounter` is defined to match the Python function's behavior.
2. **Lowercase Conversion**: The filter words are converted to lowercase using `map` and `toLowerCase`.
3. **Regex Pattern**: The regex pattern `\b\w+(?:'\w+)?\b` is used to find all words in the text, including contractions.
4. **Word Counting**: A simple loop is used to count the occurrences of filtered words.
5. **Ordered Output**: The final object is constructed to maintain the order of `filterWords`.

This JavaScript code should provide the same functionality as the Python code.