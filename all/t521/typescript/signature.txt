Here's the TypeScript code signature equivalent to your Python code:

```typescript
import { Counter } from 'typescript-collections';

/**
 * Counts the occurrences of specified words in the given text.
 *
 * This function filters the words from the text based on the provided list,
 * counts their occurrences, and returns a dictionary with the words in the
 * order they were provided.
 *
 * @param text - The input text from which to count words.
 * @param filterWords - A list of words to filter and count.
 * @returns A dictionary with the count of each filter word in the text,
 *          maintaining the order from filterWords.
 */
function wordFilterCounter(text: string, filterWords: string[]): {[key: string]: number} {
```

Note that I've used `typescript-collections` library for the Counter class because TypeScript doesn't have built-in support for counting elements like Python does. You need to install it using npm or yarn before you can use it. Also, TypeScript uses interfaces or type aliases instead of Python's `Dict`. In this case, we're using an index signature `{[key: string]: number}` to define our return type.