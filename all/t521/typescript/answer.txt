Here is the equivalent TypeScript code for your Python code:

```typescript
function wordFilterCounter(text: string, filterWords: string[]): {[key: string]: number} {
    // Create a regex pattern that matches any of the filter words
    const pattern = new RegExp(`\\b(${filterWords.join('|')})\\b`, 'gi');
    
    // Find all matches in the text
    let matches = text.match(pattern);
    
    // If no matches found, return an empty object
    if (!matches) {
        return {};
    }

    // Count the occurrences of each match
    let counter: {[key: string]: number} = {};
    matches.forEach(match => {
        if (counter[match]) {
            counter[match]++;
        } else {
            counter[match] = 1;
        }
    });

    // Return the counter object
    return counter;
}
```

This TypeScript function `wordFilterCounter` does the same thing as your Python function: it takes a string `text` and an array of strings `filterWords`, and returns an object where the keys are the filter words and the values are the counts of those words in the text. The order of the keys in the returned object will be the same as the order of the filter words in the input array.