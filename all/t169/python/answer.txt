Hereâ€™s the equivalent Python code for the provided TypeScript function that converts an Arabic numeral to its Roman numeral equivalent. The Python version includes the necessary error handling and maintains the overall logic from the TypeScript code.
python
def convert_to_roman(num: int) -> str:
    """ 
    Converts an Arabic numeral to its Roman numeral equivalent.

    Args:
        num (int): The number to convert.

    Returns:
        str: The Roman numeral representation of the input number.

    Raises:
        ValueError: Will raise an error if the input is not a positive integer.
    """
    if not isinstance(num, int) or num <= 0:
        raise ValueError('Input must be a positive integer')

    roman_numerals = ["M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"]
    roman_values = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1]
    result = ""

    for i in range(len(roman_numerals)):
        while num >= roman_values[i]:
            result += roman_numerals[i]
            num -= roman_values[i]

    return result
Explanation of the Code:
Function Definition:
The function convert_to_roman is defined with a parameter num that is expected to be an integer.
Docstring:
A docstring explains what the function does, its parameters, return value, and any exceptions it may raise. This follows Python conventions for documentation.
Input Validation:
The function checks if num is an integer and greater than 0. If not, it raises a ValueError with a descriptive message.
Roman Numeral Conversion Logic:
Two lists, roman_numerals and roman_values, hold the Roman numeral symbols and their corresponding integer values.
An empty string result is initialized to accumulate the Roman numeral output.
A loop iterates through the roman_numerals list, and for each symbol, a nested while loop adds the corresponding Roman numeral to result as long as num is greater than or equal to the corresponding value in roman_values.
Return Statement:
Finally, the function returns the constructed Roman numeral string.
Usage Example:
You can use the function like this:
python
print(convert_to_roman(2024))  # Output: MMXXIV
print(convert_to_roman(1994))   # Output: MCMXCIV
This Python function closely mirrors the original TypeScript implementation in functionality and logic.