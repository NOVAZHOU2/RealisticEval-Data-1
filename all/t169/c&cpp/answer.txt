Here's the C++ equivalent of your TypeScript code:

```cpp
#include <iostream>
#include <stdexcept>
#include <vector>
#include <string>

std::string convertToRoman(int num) {
    if (num <= 0) {
        throw std::invalid_argument("Input must be a positive integer");
    }

    std::vector<std::string> romanNumerals = {"M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"};
    std::vector<int> romanValues = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};

    std::string result;

    for (size_t i = 0; i < romanNumerals.size(); i++) {
        while (num >= romanValues[i]) {
            result += romanNumerals[i];
            num -= romanValues[i];
        }
    }

    return result;
}
```

This function performs the same conversion and error handling as your TypeScript code.