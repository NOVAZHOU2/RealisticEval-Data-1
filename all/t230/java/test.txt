Certainly! Below is the equivalent Java test class using JUnit for the provided Python unittest test class. The Java test class is placed in the package `org.real.temp` and named `Tester`. It includes appropriate JUnit annotations and assertion methods to ensure the functionality and logic of the tests are preserved.

### Java Test Class Using JUnit

```java
package org.real.temp;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

/**
 * Test class for the moveEmojisToEnd function.
 */
public class Tester {

    /**
     * Tests the case where the input string contains no emojis.
     */
    @Test
    public void testNoEmojis() {
        String inputText = "This is a test.";
        String expectedOutput = "This is a test.";
        assertEquals(expectedOutput, moveEmojisToEnd(inputText));
    }

    /**
     * Tests the case where the input string contains only emojis.
     */
    @Test
    public void testAllEmojis() {
        String inputText = "😀😃😄😁";
        String expectedOutput = "😀😃😄😁";
        assertEquals(expectedOutput, moveEmojisToEnd(inputText));
    }

    /**
     * Tests the case where emojis are at the start of the text.
     */
    @Test
    public void testEmojisAtStart() {
        String inputText = "😀😃Hello world!";
        String expectedOutput = "Hello world!😀😃";
        assertEquals(expectedOutput, moveEmojisToEnd(inputText));
    }

    /**
     * Tests the case where emojis are already at the end of the text.
     */
    @Test
    public void testEmojisAtEnd() {
        String inputText = "Hello world!😀😃";
        String expectedOutput = "Hello world!😀😃";
        assertEquals(expectedOutput, moveEmojisToEnd(inputText));
    }

    /**
     * Tests the case where emojis are in the middle of the text.
     */
    @Test
    public void testEmojisInMiddle() {
        String inputText = "Hello 😀world😃!";
        String expectedOutput = "Hello world!😀😃";
        assertEquals(expectedOutput, moveEmojisToEnd(inputText));
    }

    /**
     * Tests the case where the input string contains mixed characters and emojis.
     */
    @Test
    public void testMixedCharacters() {
        String inputText = "Hi! 😀 How are you? 😃";
        String expectedOutput = "Hi!  How are you? 😀😃";
        assertEquals(expectedOutput, moveEmojisToEnd(inputText));
    }

    // Utility method to move emojis to the end of the text
    private String moveEmojisToEnd(String text) {
        // Regular expression pattern for capturing emojis
        Pattern emojiPattern = Pattern.compile(
            "[\\ud83c[\\udf00-\\udfff]|\\ud83d[\\udc00-\\ude4f\\ude80-\\udeff]|" +
            "[\\u2694-\\u2697\\u2699-\\u26cf\\u26d1-\\u26dd\\u26e9-\\u26ea\\u26ed\\u26ef-\\u26f3\\u26f8-\\u26fa\\u26fd-\\u26fe\\u2702-\\u2704\\u2706-\\u2708\\u270a-\\u270d\\u270f-\\u2712\\u2714\\u2716\\u2728\\u2733\\u2734\\u2744\\u27a1\\u2934-\\u2935\\u2b05-\\u2b07\\u2b1b-\\u2b1c\\u3030\\ud83c[\\udde6-\\uddff]{2}\\ud83c[\\uddfb-\\uddff]\\ud83d[\\ude00-\\ude4f]]+"
        );

        // Find all emojis in the text
        Matcher matcher = emojiPattern.matcher(text);
        StringBuffer buffer = new StringBuffer();
        StringBuffer emojis = new StringBuffer();

        // Remove emojis from the text and collect them
        while (matcher.find()) {
            matcher.appendReplacement(buffer, "");
            emojis.append(matcher.group());
        }
        matcher.appendTail(buffer);

        // Concatenate non-emoji text with extracted emojis
        return buffer.toString() + emojis.toString();
    }
}
```

### Explanation:
1. **Package Declaration**: The Java code starts with the package declaration `package org.real.temp;`.

2. **Imports**: The necessary imports for `org.junit.Test` and `org.junit.Assert.assertEquals` are included.

3. **Class Definition**: The test class `Tester` is defined with the appropriate Javadoc comment.

4. **JUnit Annotations**: Each test method is annotated with `@Test` to indicate that it is a test method.

5. **Assertion Methods**: The `assertEquals` method from JUnit is used to assert the expected output against the actual output.

6. **Utility Method**: The `moveEmojisToEnd` method is included within the test class to keep the test cases self-contained. This method is marked as `private` since it is only used within the test class.

This Java test class preserves the functionality and logic of the Python unittest test class, ensuring that the tests are structured and executed correctly using JUnit.