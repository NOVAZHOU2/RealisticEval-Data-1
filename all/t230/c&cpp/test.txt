Sure! Below is the equivalent C++ test case using Catch2 for your Python `unittest` test class. Note that I'll assume you want to test the `move_emojis_to_end` function, which moves emojis to the end of a given string.

First, ensure you have Catch2 installed. If not, you can install it via vcpkg or download it directly from [Catch2's GitHub repository](https://github.com/catchorg/Catch2).

Here's how you can write the C++ test case:

```cpp
#include <catch2/catch.hpp>
#include <string>
#include <regex>

// Function to move emojis to the end of the string
std::string move_emojis_to_end(const std::string& text) {
    // Regular expression to match emojis
    static const std::regex emoji_regex(R"([\x{1F600}-\x{1F64F}\x{1F300}-\x{1F5FF}\x{1F680}-\x{1F6FF}\x{1F700}-\x{1F77F}\x{1F780}-\x{1F7FF}\x{1F800}-\x{1F8FF}\x{1F900}-\x{1F9FF}\x{1FA00}-\x{1FA6F}\x{1FA70}-\x{1FAFF}\x{2600}-\x{26FF}\x{2700}-\x{27BF}])", std::regex_constants::icase);
    
    std::string emojis;
    std::string non_emojis;
    
    // Separate emojis and non-emoji characters
    for (char c : text) {
        if (emoji_regex.match(std::string(1, c))) {
            emojis += c;
        } else {
            non_emojis += c;
        }
    }
    
    return non_emojis + emojis;
}

TEST_CASE("Move Emojis to End", "[move_emojis_to_end]") {
    REQUIRE(move_emojis_to_end("") == "");
    REQUIRE(move_emojis_to_end("Hello World!") == "Hello World!");
    REQUIRE(move_emojis_to_end("Hello 🌍!") == "Hello !🌍");
    REQUIRE(move_emojis_to_end("👋 Hello 🌍!") == "Hello !👋🌍");
    REQUIRE(move_emojis_to_end("Hello 🌍👋!") == "Hello !👋🌍");
}
```

### Explanation:
1. **Function Definition**: The `move_emojis_to_end` function uses a regular expression to identify emojis and separates them from the rest of the text.
2. **Regular Expression**: The regex pattern covers most Unicode emoji ranges.
3. **Test Cases**:
   - Empty string should return an empty string.
   - A string without emojis should remain unchanged.
   - A string with emojis at the beginning and middle should move the emojis to the end.
   - A string with multiple emojis in different positions should correctly separate and append them.

Make sure to include the Catch2 header file (`#include <catch2/catch.hpp>`) and link against the Catch2 library when compiling your program.