Sure! Below is the JavaScript version of the Python function `move_emojis_to_end` with the same functionality and comments:

```javascript
/**
 * Move the emoji expressions in the string to the end of the text
 *
 * @param {string} text - The input string containing text and possibly emojis.
 * @returns {string} - The modified string with all emojis moved to the end.
 */
function moveEmojisToEnd(text) {
    // Regular expression to match emojis
    const emojiRegex = /([\u{1F600}-\u{1F64F}\u{1F300}-\u{1F5FF}\u{1F680}-\u{1F6FF}\u{2600}-\u{26FF}\u{2700}-\u{27BF}\u{1F900}-\u{1F9FF}\u{1FA70}-\u{1FAFF}])/gu;

    // Split the text into non-emoji parts and emoji parts
    let nonEmojiParts = [];
    let emojiParts = [];

    for (let part of text.split(emojiRegex)) {
        if (part.match(emojiRegex)) {
            emojiParts.push(part);
        } else {
            nonEmojiParts.push(part);
        }
    }

    // Join the non-emoji parts and emoji parts
    return nonEmojiParts.join('') + emojiParts.join('');
}
```

### Explanation:
1. **Regular Expression**: The regex `/([\u{1F600}-\u{1F64F}\u{1F300}-\u{1F5FF}\u{1F680}-\u{1F6FF}\u{2600}-\u{26FF}\u{2700}-\u{27BF}\u{1F900}-\u{1F9FF}\u{1FA70}-\u{1FAFF}])/gu` matches most common emojis. This range covers a wide variety of Unicode characters that represent emojis.
   
2. **Splitting Text**: The text is split using the regex. If a part matches the regex, it's considered an emoji and added to `emojiParts`. Otherwise, it's added to `nonEmojiParts`.

3. **Joining Parts**: Finally, the non-emoji parts and emoji parts are joined back together, with the emojis at the end.

This function should work similarly to the original Python function, moving all emojis to the end of the input string while keeping the order of both non-emoji and emoji parts intact.