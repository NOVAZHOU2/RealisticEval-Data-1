Sure! Below is how you can convert your Python `unittest` test class to a Jest test case using JavaScript. I'll assume you have some tests for the `move_emojis_to_end` function.

### Python unittest example:

```python
import unittest
import re

def move_emojis_to_end(text: str) -> str:
    # Regular expression to match emojis
    emoji_pattern = re.compile(r'[^\w\s]')
    
    # Extract emojis from the text
    emojis = emoji_pattern.findall(text)
    
    # Remove emojis from the original text
    clean_text = emoji_pattern.sub('', text)
    
    # Append emojis to the end of the cleaned text
    result = clean_text + ''.join(emojis)
    
    return result

class TestMoveEmojisToEnd(unittest.TestCase):
    def test_move_emojis_to_end(self):
        self.assertEqual(move_emojis_to_end("Hello, World! 😊"), "Hello, World!😊")
        self.assertEqual(move_emojis_to_end("Python 🐍 is fun!"), "Python is fun!PYTHON")
        self.assertEqual(move_emojis_to_end("No emojis here."), "No emojis here.")
        self.assertEqual(move_emojis_to_end(""), "")

if __name__ == '__main__':
    unittest.main()
```

### Equivalent Jest test case:

First, make sure you have Jest installed. If not, you can install it using npm or yarn:

```bash
npm install --save-dev jest
# or
yarn add --dev jest
```

Then, create a new file named `test.js` and paste the following code:

```javascript
const moveEmojisToEnd = require('./path/to/your/moveEmojisToEnd');

describe('moveEmojisToEnd', () => {
  test('moves emojis to the end of the text', () => {
    expect(moveEmojisToEnd("Hello, World! 😊")).toBe("Hello, World!😊");
    expect(moveEmojisToEnd("Python 🐍 is fun!")).toBe("Python is fun!PYTHON");
    expect(moveEmojisToEnd("No emojis here.")).toBe("No emojis here.");
    expect(moveEmojisToEnd("")).toBe("");
  });
});
```

Make sure to replace `'./path/to/your/moveEmojisToEnd'` with the actual path to your `moveEmojisToEnd` function.

To run the tests, you can use the following command:

```bash
npx jest
# or
yarn jest
```

This will execute the Jest test cases and provide you with the results.