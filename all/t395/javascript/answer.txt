Sure! Below is the equivalent JavaScript code that maintains the same functionality, logic, and structure as the provided Python code:

```javascript
function sumCalibrationValues(calibrationDocument) {
    /**
     * Sums up calibration values extracted from the document.
     * Each calibration value is formed by combining the first and last digits of numbers found in each line
     * into a two-digit number.
     *
     * @param {Iterable<string>} calibrationDocument - An iterable of strings, each representing a line of text.
     * @returns {number} The total sum of all calibration values.
     */
    let totalSum = 0;

    for (let line of calibrationDocument) {
        // Filter out non-digit characters
        let digits = Array.from(line).filter(char => !isNaN(parseInt(char, 10)) && isFinite(char));

        // Extract the first and last digits
        if (digits.length > 0) {
            let firstDigit = parseInt(digits[0], 10);
            let lastDigit = parseInt(digits[digits.length - 1], 10);

            // Combine to form a two-digit number
            let calibrationValue = firstDigit * 10 + lastDigit;

            // Add to the total sum
            totalSum += calibrationValue;
        }
    }

    return totalSum;
}
```

This JavaScript function `sumCalibrationValues` follows the same logic and structure as the original Python function. It iterates over each line of the `calibrationDocument`, extracts the first and last digits, forms a two-digit number, and sums them up.