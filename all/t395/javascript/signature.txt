Here's the equivalent JavaScript function with JSDoc comments:

```javascript
/**
 * Sums up calibration values extracted from the document.
 * Each calibration value is formed by combining the first and last digits of numbers found in each line
 * into a two-digit number.
 * 
 * @param {Iterable<string>} calibrationDocument - An iterable of strings, each representing a line of text.
 * 
 * @returns {number} The total sum of all calibration values.
 */
function sumCalibrationValues(calibrationDocument) {
    // Function body goes here.
}
```

Key changes made:
1. The function name `sum_calibration_values` was converted to camelCase (`sumCalibrationValues`) as per common JavaScript conventions.
2. The Python docstring was converted to JSDoc format.
3. The parameter name was changed to `calibrationDocument` to match the function naming convention.
4. The type hint for the return value (`-> int`) is not needed in JavaScript but is described in the JSDoc comment.
5. The parameter description now uses the term "Iterable" which is the closest JavaScript equivalent to Python's "iterable". 

Please note that the actual implementation logic is not included in this translation. You would need to implement the logic inside the JavaScript function based on the original Python function's behavior.