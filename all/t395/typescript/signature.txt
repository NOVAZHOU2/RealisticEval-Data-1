Here's the equivalent TypeScript code for the given Python function:

```typescript
/**
 * Sums up calibration values extracted from the document.
 * Each calibration value is formed by combining the first and last digits of numbers found in each line
 * into a two-digit number.
 * 
 * @param {Iterable<string>} calibrationDocument - An iterable of strings, each representing a line of text.
 * @returns {number} The total sum of all calibration values.
 */
function sumCalibrationValues(calibrationDocument: Iterable<string>): number {
    // Implementation would go here

    // Placeholder return statement
    return 0;
}
```

Note that TypeScript does not have a direct equivalent of Python's `iterable` type. However, you can use `Iterable<string>` to indicate that the parameter should be an iterable collection of strings. You may need to adjust the implementation based on the specific requirements and behavior of the function.