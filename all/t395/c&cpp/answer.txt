Certainly! Below is the equivalent C++ code that maintains the same functionality, logic, and structure as the provided Python code:

```cpp
#include <iostream>
#include <vector>
#include <string>
#include <cctype> // For std::isdigit

// Function to sum up calibration values extracted from the document.
// Each calibration value is formed by combining the first and last digits of numbers found in each line
// into a two-digit number.
int sum_calibration_values(const std::vector<std::string>& calibration_document) {
    int total_sum = 0;

    for (const auto& line : calibration_document) {
        std::vector<char> digits;

        // Filter out non-digit characters
        for (char ch : line) {
            if (std::isdigit(ch)) {
                digits.push_back(ch);
            }
        }

        // Extract the first and last digits
        if (!digits.empty()) {
            char first_digit = digits.front();
            char last_digit = digits.back();

            // Combine to form a two-digit number
            int calibration_value = (first_digit - '0') * 10 + (last_digit - '0');

            // Add to the total sum
            total_sum += calibration_value;
        }
    }

    return total_sum;
}

// Example usage
int main() {
    std::vector<std::string> calibration_document = {
        "abc3def5",
        "ghi7jkl2",
        "mno9pqr8"
    };

    int result = sum_calibration_values(calibration_document);
    std::cout << "Total sum: " << result << std::endl;

    return 0;
}
```

### Explanation:
1. **Headers**: 
   - `#include <iostream>` for input/output operations.
   - `#include <vector>` for using `std::vector`.
   - `#include <string>` for using `std::string`.
   - `#include <cctype>` for `std::isdigit` function to check if a character is a digit.

2. **Function Definition**:
   - `sum_calibration_values` takes a vector of strings (`std::vector<std::string>`) as input.
   - It iterates over each string (line) in the document.
   - It filters out non-digit characters and stores the digits in a `std::vector<char>`.
   - If there are digits, it extracts the first and last digits, combines them into a two-digit number, and adds this value to the total sum.

3. **Example Usage**:
   - In the `main` function, we create a sample `calibration_document` and call `sum_calibration_values` with it.
   - The result is printed to the console.

This C++ code closely mirrors the functionality and logic of the original Python code.