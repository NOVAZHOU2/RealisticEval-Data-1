Certainly! Here is the equivalent Java code for the given Python function, including proper Javadoc comments and method signature:

```java
package org.real.temp;

import java.util.List;

public class Answer {

    /**
     * Sums up calibration values extracted from the document.
     * Each calibration value is formed by combining the first and last digits of numbers found in each line
     * into a two-digit number.
     *
     * @param calibrationDocument An iterable of strings, each representing a line of text.
     * @return The total sum of all calibration values.
     */
    public static int sumCalibrationValues(List<String> calibrationDocument) {
        int totalSum = 0;

        for (String line : calibrationDocument) {
            // Filter out non-digit characters
            List<Character> digits = new ArrayList<>();
            for (char ch : line.toCharArray()) {
                if (Character.isDigit(ch)) {
                    digits.add(ch);
                }
            }

            // Extract the first and last digits
            if (!digits.isEmpty()) {
                char firstDigit = digits.get(0);
                char lastDigit = digits.get(digits.size() - 1);

                // Combine to form a two-digit number
                int calibrationValue = Character.getNumericValue(firstDigit) * 10 + Character.getNumericValue(lastDigit);

                // Add to the total sum
                totalSum += calibrationValue;
            }
        }

        return totalSum;
    }

    public static void main(String[] args) {
        // Example usage
        List<String> calibrationDocument = new ArrayList<>();
        calibrationDocument.add("abc123xyz");
        calibrationDocument.add("456def");
        calibrationDocument.add("ghi789");

        int result = sumCalibrationValues(calibrationDocument);
        System.out.println("Total Sum: " + result);
    }
}
```

### Explanation:
1. **Package Declaration**: The Java code starts with the package declaration `package org.real.temp;`.
2. **Class Definition**: The class `Answer` is defined within the package.
3. **Javadoc Comments**: The method `sumCalibrationValues` includes detailed Javadoc comments that describe the purpose, parameters, and return type.
4. **Method Signature**: The method `sumCalibrationValues` is declared as `public static int sumCalibrationValues(List<String> calibrationDocument)` to match the functionality of the Python function.
5. **Iterating Over Lines**: The method iterates over each line in the `calibrationDocument` list.
6. **Filtering Digits**: It filters out non-digit characters using a loop and adds the digits to an `ArrayList<Character>`.
7. **Extracting First and Last Digits**: If the list of digits is not empty, it extracts the first and last digits and combines them into a two-digit number.
8. **Adding to Total Sum**: The two-digit number is added to the `totalSum`.
9. **Returning Total Sum**: The method returns the final `totalSum`.
10. **Example Usage**: A `main` method is included to demonstrate how to use the `sumCalibrationValues` method with an example list of strings.

This Java code preserves the original functionality and structure of the Python code while adhering to Java conventions and best practices.