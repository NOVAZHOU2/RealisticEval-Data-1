To convert the given Python unittest test class into an equivalent JUnit test class in Java, we need to define a method with similar functionality and write corresponding JUnit tests. Below is the Java code that includes the method `sumCalibrationValues` and the test class `Tester` using JUnit:

```java
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class CalibrationDocumentProcessor {

    /**
     * Sums up calibration values extracted from the document.
     * Each calibration value is formed by combining the first and last digits of numbers found in each line
     * into a two-digit number.
     *
     * @param calibrationDocument An iterable of strings, each representing a line of text.
     * @return The total sum of all calibration values.
     */
    public int sumCalibrationValues(Iterable<String> calibrationDocument) {
        int totalSum = 0;
        
        for (String line : calibrationDocument) {
            // Assuming a helper method to find the first and last digits in a line
            int calibrationValue = extractCalibrationValue(line);
            totalSum += calibrationValue;
        }
        
        return totalSum;
    }

    private int extractCalibrationValue(String line) {
        // Implementation to find the first and last digits in the line
        // This is a placeholder implementation for demonstration purposes
        // Replace this with actual logic to find the first and last digits
        // For example, you can use regular expressions or string manipulation techniques
        return 12; // Example return value
    }
}

package org.real.temp;

import java.util.Arrays;
import java.util.List;
import org.junit.BeforeClass;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class Tester {
    
    private static CalibrationDocumentProcessor processor;

    @BeforeClass
    public static void setup() {
        processor = new CalibrationDocumentProcessor();
    }

    @Test
    public void testSumCalibrationValues() {
        List<String> calibrationDocument = Arrays.asList(
            "abc123xyz",   // Example line where the first digit is 1 and the last is 3 => 13
            "456def",      // Example line where the first digit is 4 and the last is 6 => 46
            "789"          // Example line where the first digit is 7 and the last is 9 => 79
        );
        
        int expectedSum = 13 + 46 + 79; // Example expected sum
        
        assertEquals(expectedSum, processor.sumCalibrationValues(calibrationDocument));
    }
}
```

In this Java code, the `CalibrationDocumentProcessor` class contains the `sumCalibrationValues` method which performs the summing of calibration values as described. The `Tester` class uses JUnit's `@Test` annotation to define a test case that verifies the correctness of the `sumCalibrationValues` method. The `setup` method annotated with `@BeforeClass` initializes the `CalibrationDocumentProcessor` object before running any tests.