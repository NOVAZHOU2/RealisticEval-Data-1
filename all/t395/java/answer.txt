Sure! Below is the Java equivalent of the provided Python code, organized within the package `org.real.temp` and the class `Answer`. It includes appropriate handling of type declarations, method signatures, and object-oriented principles:

```java
package org.real.temp;

import java.util.ArrayList;
import java.util.List;

public class Answer {

    /**
     * Sums up calibration values extracted from the document.
     * Each calibration value is formed by combining the first and last digits of numbers found in each line
     * into a two-digit number.
     *
     * @param calibrationDocument An iterable of strings, each representing a line of text.
     * @return The total sum of all calibration values.
     */
    public static int sumCalibrationValues(List<String> calibrationDocument) {
        int totalSum = 0;

        for (String line : calibrationDocument) {
            // Filter out non-digit characters
            List<Character> digits = new ArrayList<>();
            for (char c : line.toCharArray()) {
                if (Character.isDigit(c)) {
                    digits.add(c);
                }
            }

            // Extract the first and last digits
            if (!digits.isEmpty()) {
                char firstDigit = digits.get(0);
                char lastDigit = digits.get(digits.size() - 1);

                // Combine to form a two-digit number
                int calibrationValue = Character.getNumericValue(firstDigit) * 10 + Character.getNumericValue(lastDigit);

                // Add to the total sum
                totalSum += calibrationValue;
            }
        }

        return totalSum;
    }

    // Example usage
    public static void main(String[] args) {
        List<String> calibrationDocument = new ArrayList<>();
        calibrationDocument.add("abc123xyz");
        calibrationDocument.add("456def789");
        calibrationDocument.add("000");

        int result = sumCalibrationValues(calibrationDocument);
        System.out.println("Total Sum: " + result);
    }
}
```

### Explanation:
1. **Method Signature**: The method `sumCalibrationValues` takes a `List<String>` as input, which represents the iterable of strings in Java.
2. **Character Filtering**: The method iterates over each character in a line and filters out non-digit characters using `Character.isDigit`.
3. **First and Last Digits Extraction**: It extracts the first and last digits from the filtered list of digits.
4. **Combining Digits**: It combines the first and last digits into a two-digit number and adds it to the total sum.
5. **Example Usage**: The `main` method demonstrates how to use the `sumCalibrationValues` method with an example list of strings.