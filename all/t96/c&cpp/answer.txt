Here's the equivalent C++ code for the provided JavaScript function. The function modifies an ABC notation string by inserting a specified clef after the tone line (`K:`). If no clef is specified, it defaults to "bass".

```cpp
#include <string>

std::string changedClef(const std::string& abc, const std::string& clef = "bass") {
    size_t clef_index = abc.find("\nK:");

    // If the key signature is found
    if (clef_index != std::string::npos) {
        // Find the next newline character after the key signature line, or if none exists, use the end of the string
        size_t next_newline = abc.find("\n", clef_index + 1);
        if (next_newline == std::string::npos) {
            next_newline = abc.length();
        }

        // Create the string to inject, which includes the clef
        std::string injection = " clef=" + clef;

        // Construct the new ABC string with the injected clef
        return abc.substr(0, next_newline) + injection + abc.substr(next_newline);
    }

    // If the key signature is not found, return the original string
    return abc;
}
```

### Explanation:
1. **Function Signature**: The function takes a constant reference to a string (`abc`) and an optional clef (default is "bass").
2. **Finding the Key Signature**: Uses `find` to locate `\nK:`.
3. **Next Newline**: Determines the position of the next newline or the end of the string.
4. **Injection**: Constructs the clef injection string.
5. **String Concatenation**: Uses `substr` to build the final string by combining parts of the original string with the injection.
6. **Return**: If the key signature is not found, the original string is returned.