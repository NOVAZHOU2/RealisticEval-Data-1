Hereâ€™s the equivalent TypeScript version of the provided C++ function, adapting the comments and ensuring it preserves the original functionality:

```typescript
/**
 * Converts a floating-point number to its hexadecimal representation.
 *
 * @param value The float value to be converted to hexadecimal.
 * @returns A string containing the hexadecimal representation of the
 *          input float.
 *
 * @note The output string will be in lowercase hexadecimal format.
 */
function floatToHex(value: number): string {
    // Create a typed array to hold the float value
    const floatArray = new Float32Array(1);
    floatArray[0] = value;

    // Convert the float to its integer representation using DataView
    const buffer = new ArrayBuffer(4);
    const view = new DataView(buffer);
    for (let i = 0; i < 4; i++) {
        view.setUint8(i, floatArray[0].toString().charCodeAt(i));
    }

    // Convert the integer to a hexadecimal string
    const intRepresentation = view.getUint32(0);
    return intRepresentation.toString(16).padStart(8, '0');
}
```

### Explanation:
- The `floatToHex` function is defined in TypeScript using the `function` keyword.
- The parameter `value` is typed as `number`, which corresponds to the `float` type in C++.
- Instead of using `std::string`, we use `string` in TypeScript.
- The method of converting the float to its hexadecimal representation is adapted to JavaScript's capabilities using `ArrayBuffer` and `DataView`.
- Comments are converted to TypeScript-style comments.