Hereâ€™s the equivalent JUnit4 test class in Java for the provided C++ Catch2 unit tests. The class is structured to maintain the same functionality and logic.

```java
package org.real.temp;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class Tester {

    @Test
    public void testFloatToHexPositive() {
        float input = 123.456f;
        String expected = "42f6e979";
        assertEquals(expected, Answer.floatToHex(input));
    }

    @Test
    public void testFloatToHexNegative() {
        float input = -123.456f;
        String expected = "c2f6e979";
        assertEquals(expected, Answer.floatToHex(input));
    }

    @Test
    public void testFloatToHexZero() {
        float input = 0.0f;
        String expected = "00000000";
        assertEquals(expected, Answer.floatToHex(input));
    }

    @Test
    public void testFloatToHexSmallPositive() {
        float input = 0.0001f;
        String expected = "38d1b717";
        assertEquals(expected, Answer.floatToHex(input));
    }

    @Test
    public void testFloatToHexLarge() {
        float input = 1e30f;
        String expected = "7149f2ca";
        assertEquals(expected, Answer.floatToHex(input));
    }
}
```

### Explanation:
1. **Package Declaration**: The Java code starts with the `package org.real.temp;` statement.
2. **Import Statements**: Necessary imports for JUnit are included.
3. **Test Class**: The class `Tester` contains methods for each test case.
4. **Test Methods**: Each section from the C++ code is converted into a separate method annotated with `@Test`. The names are descriptive for clarity.
5. **Assertions**: `REQUIRE` statements in C++ are replaced with `assertEquals` in Java to check expected vs. actual values.

This Java test class retains the same functionality and structure as the original C++ tests.