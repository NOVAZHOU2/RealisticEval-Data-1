Here's how you can convert your JavaScript code into TypeScript:

```typescript
/**
 * Filters elements from an array based on a qualification function.
 *
 * @param {T[]} unfilteredArray - The array to filter.
 * @param {(element: T) => boolean} isQualified - The function that determines if an element qualifies.
 * @returns {T[]} - A new array containing the elements that qualify.
 */
function filterArray<T>(unfilteredArray: T[], isQualified: (element: T) => boolean): T[] {
    return unfilteredArray.filter(isQualified);
}
```

In this TypeScript version:
- `T` is a type parameter that represents the type of elements in the array. This makes the function more generic and reusable for different types of arrays.
- The `isQualified` function now has a specific signature `(element: T) => boolean`, which means it takes an element of type `T` and returns a boolean indicating whether the element qualifies or not.
- The `filterArray` function itself is typed to return an array of type `T`.