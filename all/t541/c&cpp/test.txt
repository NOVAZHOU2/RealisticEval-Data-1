Sure! Below is the equivalent C++ Catch2 test case for the JavaScript Jest test case you provided.

```cpp
#include <catch2/catch.hpp>
#include <vector>
#include <functional>

// Function to filter elements from an array based on a qualification function.
std::vector<int> filterArray(const std::vector<int>& unfilteredArray, const std::function<bool(int)>& isQualified) {
    std::vector<int> filteredArray;
    for (const auto& item : unfilteredArray) {
        if (isQualified(item)) {
            filteredArray.push_back(item);
        }
    }
    return filteredArray;
}

TEST_CASE("filterArray", "[array][filter]") {
    // Test with an empty array
    std::vector<int> emptyArray = {};
    std::vector<int> resultEmpty = filterArray(emptyArray, [](int x) { return x > 5; });
    REQUIRE(resultEmpty.empty());

    // Test with an array where no elements qualify
    std::vector<int> noQualifyArray = {1, 2, 3};
    std::vector<int> resultNoQualify = filterArray(noQualifyArray, [](int x) { return x > 5; });
    REQUIRE(resultNoQualify.empty());

    // Test with an array where some elements qualify
    std::vector<int> someQualifyArray = {1, 6, 3, 8};
    std::vector<int> resultSomeQualify = filterArray(someQualifyArray, [](int x) { return x > 5; });
    REQUIRE(resultSomeQualify == std::vector<int>({6, 8}));

    // Test with an array where all elements qualify
    std::vector<int> allQualifyArray = {7, 9, 4};
    std::vector<int> resultAllQualify = filterArray(allQualifyArray, [](int x) { return x > 5; });
    REQUIRE(resultAllQualify == std::vector<int>({7, 9}));
}
```

In this C++ test case:
- We define the `filterArray` function, which takes a vector of integers and a lambda function as parameters.
- We then create several test cases using Catch2's `TEST_CASE` macro.
- Each test case checks different scenarios: an empty array, an array with no qualifying elements, an array with some qualifying elements, and an array with all qualifying elements.

Make sure you have Catch2 installed in your project to compile and run these tests.