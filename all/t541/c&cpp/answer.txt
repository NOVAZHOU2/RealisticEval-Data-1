Here's how you can write the same functionality in C++:

```cpp
#include <vector>
#include <functional>

/**
 * Filters elements from a vector based on a qualification function.
 *
 * @param unfilteredVector - The vector to filter.
 * @param isQualified - The function that determines if an element qualifies.
 * @return A new vector containing the elements that qualify.
 */
std::vector<int> filterArray(const std::vector<int>& unfilteredVector, const std::function<bool(int)>& isQualified) {
    std::vector<int> filteredVector;
    for (const auto& item : unfilteredVector) {
        if (isQualified(item)) {
            filteredVector.push_back(item);
        }
    }
    return filteredVector;
}
```

This C++ version uses `std::vector` instead of JavaScript arrays and `std::function` instead of JavaScript functions. It also assumes that the array elements are integers (`int`). If your array contains different types, replace `int` with the appropriate type.