Here's the equivalent Java code for the provided Python function:

```java
package org.real.temp;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Answer {
    
    /**
     * Extracts the date in the format YYYY-MM-DD from the given file name.
     *
     * @param fileName The name of the file which may contain a date.
     * @return The extracted date string in YYYY-MM-DD format if found, else null.
     */
    public static String extractDateFromFileName(String fileName) {
        // Define the regex pattern to match dates in the format YYYY-MM-DD
        Pattern pattern = Pattern.compile("\\b\\d{4}-\\d{2}-\\d{2}\\b");
        
        // Create a matcher object to find matches in the file name
        Matcher matcher = pattern.matcher(fileName);
        
        // Check if a match is found
        if (matcher.find()) {
            return matcher.group();
        } else {
            return null;
        }
    }
}
```

### Explanation:
1. **Package Declaration**: The `package` declaration specifies where the class belongs.
2. **Class Definition**: The `Answer` class is defined within the specified package.
3. **Method Signature**: The method `extractDateFromFileName` is declared as `static`, meaning it can be called without creating an instance of the class.
4. **Regex Pattern**: A regular expression pattern is used to match dates in the format `YYYY-MM-DD`.
5. **Matcher Object**: A `Matcher` object is created to search for the pattern in the input `fileName`.
6. **Finding Matches**: The `find()` method of the `Matcher` class checks if there is a match in the input string.
7. **Returning Results**: If a match is found, the matched date string is returned; otherwise, `null` is returned.

This Java code should work similarly to the original Python function.