To convert your Python unittest test class into a TypeScript test case using Jest, you need to follow these steps:

1. Install Jest and any necessary dependencies.
2. Write the TypeScript equivalent of your Python function.
3. Write the Jest test cases for the TypeScript function.

Here's an example of how you can do this:

### Step 1: Install Jest

First, make sure you have Node.js installed. Then, create a new directory for your project and initialize it with npm:

```sh
mkdir my-project
cd my-project
npm init -y
```

Next, install Jest as a development dependency:

```sh
npm install --save-dev jest
```

### Step 2: Write the TypeScript Function

Create a file named `extractDateFromFilename.ts` and add the following TypeScript code:

```typescript
export function extractDateFromFilename(fileName: string): string | null {
    const regex = /\d{4}-\d{2}-\d{2}/;
    return fileName.match(regex) ? fileName.match(regex)[0] : null;
}
```

### Step 3: Write the Jest Test Cases

Create a file named `extractDateFromFilename.test.ts` and add the following Jest test cases:

```typescript
import { extractDateFromFilename } from './extractDateFromFilename';

describe('extractDateFromFilename', () => {
    test('should extract date from filename', () => {
        expect(extractDateFromFilename('report_2023-04-15.pdf')).toBe('2023-04-15');
    });

    test('should return null if no date is found', () => {
        expect(extractDateFromFilename('report_without_date.txt')).toBeNull();
    });

    test('should handle filenames with multiple dates', () => {
        expect(extractDateFromFilename('archive_2022-12-31_2023-01-01.zip')).toBe('2022-12-31');
    });
});
```

### Step 4: Configure Jest

Create a `jest.config.js` file in the root of your project and add the following configuration:

```javascript
module.exports = {
    testEnvironment: 'node',
};
```

### Step 5: Run the Tests

Finally, run the tests using the following command:

```sh
npx jest
```

This will execute the Jest test cases and output the results.

### Summary

By following these steps, you have successfully converted your Python unittest test class into a TypeScript test case using Jest. This approach ensures that your code is tested effectively in a modern JavaScript environment.