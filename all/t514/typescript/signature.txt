Certainly! Below is the equivalent TypeScript code for the provided Python function, including appropriate JSDoc-style documentation comments:

```typescript
/**
 * Extracts the date in the format YYYY-MM-DD from the given file name.
 *
 * @param fileName - The name of the file which may contain a date.
 * @returns The extracted date string in YYYY-MM-DD format if found, else null.
 */
function extractDateFromFileName(fileName: string): string | null {
    // Define the regex pattern for matching a date in the format YYYY-MM-DD
    const datePattern = '\\d{4}-\\d{2}-\\d{2}';
    
    // Search for the date pattern in the file name
    const match = fileName.match(new RegExp(datePattern));
    
    // If a match is found, return the matched date; otherwise, return null
    return match ? match[0] : null;
}

// Example usage
console.log(extractDateFromFileName('document_2023-05-15.pdf'));  // Output: '2023-05-15'
console.log(extractDateFromFileName('image.png'));               // Output: null
```

### Explanation:
1. **JSDoc Documentation**:
   - The JSDoc-style documentation is added at the beginning of the function.
   - The `@param` tag is used to document the parameter `fileName`.
   - The `@returns` tag is used to document the return type.

2. **Function Signature**:
   - The function `extractDateFromFileName` is defined with a parameter `fileName` of type `string`.
   - The return type is specified as `string | null`, indicating that the function can return either a string or `null`.

3. **Regex Pattern**:
   - The regex pattern `datePattern` is defined similarly to the Python version. Note that backslashes need to be escaped in JavaScript/TypeScript strings.

4. **Regex Execution**:
   - The `fileName.match(new RegExp(datePattern))` method is used to search for the pattern in the `fileName`. This is equivalent to `re.search` in Python.

5. **Return Value**:
   - If a match is found, `match[0]` returns the matched string; otherwise, `null` is returned.

This TypeScript code preserves the original functionality and structure of the Python code, while adhering to TypeScript conventions and providing clear documentation.