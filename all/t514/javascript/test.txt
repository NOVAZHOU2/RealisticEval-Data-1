Sure! Below is the equivalent JavaScript test case using Jest for the provided Python unittest test class. Note that I'll assume you have a function `extractDateFromFilename` that performs the same functionality as your Python function.

```javascript
const { extractDateFromFilename } = require('./path-to-your-function');

describe('extractDateFromFilename', () => {
  it('should return null when no date is found', () => {
    const fileName = 'example.txt';
    expect(extractDateFromFilename(fileName)).toBeNull();
  });

  it('should return the correct date when found', () => {
    const fileName = 'report_2023-10-05.pdf';
    expect(extractDateFromFilename(fileName)).toBe('2023-10-05');
  });

  it('should handle different date formats', () => {
    const fileName = 'data_20230915.csv';
    expect(extractDateFromFilename(fileName)).toBe('2023-09-15');
  });

  it('should ignore non-date parts of the filename', () => {
    const fileName = 'log_file_2023-10-05.log';
    expect(extractDateFromFilename(fileName)).toBe('2023-10-05');
  });
});
```

### Explanation:

1. **Importing the Function**: Replace `'./path-to-your-function'` with the actual path to your `extractDateFromFilename` function.
  
2. **Describe Block**: The `describe` block groups related tests together. In this case, all tests are related to the `extractDateFromFilename` function.

3. **It Blocks**: Each `it` block represents an individual test case. Here's what each one does:
   - **No Date Found**: Checks if the function returns `null` when no date is present in the file name.
   - **Correct Date Found**: Verifies that the function correctly extracts and returns the date when it's present.
   - **Different Date Formats**: Ensures the function can handle different date formats (e.g., `YYYY-MM-DD`, `YYYYMMDD`).
   - **Non-Date Parts Ignored**: Confirms that the function ignores non-date parts of the file name and only extracts the date.

4. **Expectations**: The `expect` function is used to assert the expected outcome of the function call. The `.toBe` matcher checks if the actual value matches the expected value.

This setup should help you transition from Python unittest to Jest for testing your JavaScript functions.