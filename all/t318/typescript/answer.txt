Sure! Here's how you can convert the given JavaScript function to TypeScript:

```typescript
/**
 * Count the number of numbers in a string.
 *
 * @param {string} str - The string from which to count numeric digits.
 * @returns {number} - The total count of numeric digits found in the string.
 */
function countNumbers(str: string): number {
    let count = 0;
    for (let i = 0; i < str.length; i++) {
        if (!isNaN(parseInt(str[i]))) {
            count++;
        }
    }
    return count;
}
```

In this TypeScript version:
- I added type annotations to the parameters and return value of the `countNumbers` function.
- I used `parseInt` inside an `if` statement to check if each character is a numeric digit. If it is, I incremented the `count`.