Here is the equivalent Java code for your JavaScript function:

```java
import java.util.ArrayList;
import java.util.List;

public class Main {

    public static void main(String[] args) {
        Integer[] arr = {1, 2, 3};
        List<List<Integer>> result = generateUniquePairs(arr);
        
        // print results
        for (List<Integer> pair : result) {
            System.out.println(pair.get(0) + ", " + pair.get(1));
        }
    }

    /**
     * Generates all unique combinations of pairs from an array.
     *
     * @param array - The input array from which combinations are generated.
     * @return A list of lists, where each inner list contains a unique pair of elements.
     */
    public static List<List<Integer>> generateUniquePairs(Integer[] array) {
        List<List<Integer>> result = new ArrayList<>();
        
        if (array == null || array.length <= 1) return result;
        
        for (int i = 0; i < array.length-1; i++) {
            for (int j = i+1; j < array.length; j++) {
                List<Integer> pair = new ArrayList<>();
                pair.add(array[i]);
                pair.add(array[j]);
                
                result.add(pair);
            }
        }
        
        return result;
    }
}
```

This Java program defines a `generateUniquePairs` method that generates all unique combinations of pairs from an array and prints them out in the `main` method. It uses nested loops to iterate over the array and create pairs, then adds those pairs to a result list.

Please note that you need to pass an array of integers to this method, not just any type of object. If you want to work with other types, you will need to adjust the method accordingly.