Here’s how you can convert the provided JavaScript code to Python. The JavaScript function generates all unique combinations of pairs from an array, and the Python version will do the same.
Converted Python Code
python
def generate_unique_pairs(array):
    """
    Generates all unique combinations of pairs from an array.

    :param array: The input list from which combinations are generated.
    :return: A list of lists, where each inner list contains a unique pair of elements.
    """
    pairs = []
    length = len(array)
    for i in range(length):
        for j in range(i + 1, length):
            pairs.append([array[i], array[j]])
    return pairs

# Example usage
if __name__ == "__main__":
    data = [1, 2, 3, 4]
    unique_pairs = generate_unique_pairs(data)
    print(unique_pairs)  # Output: [[1, 2], [1, 3], [1, 4], [2, 3], [2, 4], [3, 4]]
Explanation of the Python Code:
Function Definition:
The function is defined as generate_unique_pairs, which takes a single parameter array.
Docstring:
A docstring describes the function’s purpose, parameters, and return value, similar to JSDoc in JavaScript.
Pairs Initialization:
An empty list pairs is initialized to store the unique pairs.
Looping Through the Array:
The outer loop iterates through the indices of the input list.
The inner loop starts from i + 1 to ensure unique pairs (avoiding duplicates and self-pairs).
Appending Pairs:
Each unique pair is created using the current indices i and j and is appended to the pairs list.
Return Statement:
The function returns the list of unique pairs.
Example Usage:
An example usage is provided, which demonstrates how to call the function and prints the result.
This Python version retains the functionality of the JavaScript code while following Python conventions and syntax.