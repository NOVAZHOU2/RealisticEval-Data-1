Sure! Below is the TypeScript version of your JavaScript function `generateUniquePairs`:

```typescript
/**
 * Generates all unique combinations of pairs from an array.
 *
 * @param {T[]} array - The input array from which combinations are generated.
 * @returns {T[][]} - An array of arrays, where each inner array contains a unique pair of elements.
 */
function generateUniquePairs<T>(array: T[]): T[][] {
    const result: T[][] = [];

    for (let i = 0; i < array.length; i++) {
        for (let j = i + 1; j < array.length; j++) {
            result.push([array[i], array[j]]);
        }
    }

    return result;
}
```

### Explanation:
- **Type Parameter `<T>`**: This allows the function to work with any type of array.
- **Function Signature**: The function takes an array of type `T[]` and returns an array of arrays of type `T[][]`.
- **Nested Loops**: The loops iterate through the array to generate all unique pairs. The outer loop runs from the start to the second-to-last element, and the inner loop starts one index after the current index of the outer loop to ensure uniqueness.

This TypeScript function will now correctly handle arrays of any type and provide type safety.