Sure! Here is the TypeScript version of your JavaScript function:

```typescript
/**
 * Generates all unique combinations of pairs from an array.
 *
 * @param {Array<T>} array - The input array from which combinations are generated.
 * @returns {Array<Array<T>>} - An array of arrays, where each inner array contains a unique pair of elements.
 */
function generateUniquePairs<T>(array: T[]): Array<[T, T]> {
    const result: Array<[T, T]> = [];

    for (let i = 0; i < array.length; i++) {
        for (let j = i + 1; j < array.length; j++) {
            result.push([array[i], array[j]]);
        }
    }

    return result;
}
```

### Explanation:
- **Type Parameter `T`**: This allows the function to work with any type of array elements.
- **Return Type `Array<[T, T]>`**: This specifies that the function returns an array of tuples, where each tuple contains two elements of type `T`.
- **Nested Loops**: The nested loops iterate through the array and create pairs without repetition.

This TypeScript function will now correctly type-check and enforce the expected types in your code.