Sure! Below is the equivalent C++ test case using Catch2 for the `generateUniquePairs` function. Note that the JavaScript function `generateUniquePairs` is not provided in the question, so I'll assume it's a simple implementation and provide a basic version.

Here's the C++ code:

```cpp
#include <catch2/catch.hpp>
#include <vector>
#include <algorithm>

/**
 * Generates all unique combinations of pairs from an array.
 *
 * @param array - The input array from which combinations are generated.
 * @return A vector of vectors, where each inner vector contains a unique pair of elements.
 */
std::vector<std::vector<int>> generateUniquePairs(const std::vector<int>& array) {
    std::vector<std::vector<int>> result;
    int n = array.size();
    if (n <= 1) return result;

    for (int i = 0; i < n - 1; ++i) {
        for (int j = i + 1; j < n; ++j) {
            result.push_back({array[i], array[j]});
        }
    }

    return result;
}

TEST_CASE("Generate Unique Pairs", "[generate_unique_pairs]") {
    // Test case with an empty array
    std::vector<int> emptyArray = {};
    std::vector<std::vector<int>> expectedEmptyResult = {};
    REQUIRE(generateUniquePairs(emptyArray) == expectedEmptyResult);

    // Test case with a single element array
    std::vector<int> singleElementArray = {1};
    std::vector<std::vector<int>> expectedSingleResult = {};
    REQUIRE(generateUniquePairs(singleElementArray) == expectedSingleResult);

    // Test case with multiple elements array
    std::vector<int> multiElementArray = {1, 2, 3, 4};
    std::vector<std::vector<int>> expectedResult = {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}};
    REQUIRE(generateUniquePairs(multiElementArray) == expectedResult);
}
```

In this C++ code:
- We include the necessary headers: `<catch2/catch.hpp>` for the testing framework, `<vector>` for the vector container, and `<algorithm>` for any additional algorithms you might need.
- We define the `generateUniquePairs` function, which generates all unique combinations of pairs from an array.
- We write three test cases using Catch2's `TEST_CASE` macro:
  1. An empty array should return an empty result.
  2. A single-element array should also return an empty result since there are no pairs.
  3. A multi-element array should return the correct unique pairs.

Make sure you have Catch2 installed and properly configured in your development environment to compile and run these tests.