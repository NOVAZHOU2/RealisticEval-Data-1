Sure, here is the equivalent Java code signature for your Python function:

```java
import java.util.List;
import java.util.ArrayList;

/**
 * Check for ticker symbols with the same ex-dividend date but different dividend amounts.
 *
 * @param records A list of tuples where each tuple contains (ticker, exDividendDate, dividendAmount).
 * @return A list of tuples containing (ticker, exDividendDate) that have different dividend amounts.
 */
public class DividendChecker {

    public static List<String[]> checkDividendVariances(List<String[]> records) {
        // Implementation goes here
        return new ArrayList<>();
    }
}
```

### Explanation:
- **Java Imports**: We import `List` and `ArrayList` from the `java.util` package.
- **Class Definition**: We define a class `DividendChecker` to encapsulate our method.
- **Method Signature**:
  - The method `checkDividendVariances` takes a `List<String[]>` as input, where each `String[]` represents a tuple `(ticker, exDividendDate, dividendAmount)`.
  - It returns a `List<String[]>`, where each `String[]` represents a tuple `(ticker, exDividendDate)` that has different dividend amounts.
- **Javadoc Comments**: The Javadoc comment above the method provides a description of what the method does, its parameters, and its return value.

This Java code maintains the structure and intent of the original Python function while adhering to Java's syntax and conventions.