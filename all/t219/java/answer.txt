Here's how you could write the equivalent Java code:

```java
package org.real.temp;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Answer {

    public static List<String[]> checkDividendVariances(List<String[]> records) {
        Map<String, Double> map = new HashMap<>();
        List<String[]> result = new ArrayList<>();

        for(String[] record : records){
            String ticker = record[0];
            String exDividendDate = record[1];
            double dividendAmount = Double.parseDouble(record[2]);

            if(map.containsKey(ticker + "-" + exDividendDate)){
                if(dividendAmount != map.get(ticker + "-" + exDividendDate)){
                    result.add(new String[]{ticker, exDividendDate});
                }
            } else {
                map.put(ticker + "-" + exDividendDate, dividendAmount);
            }
        }

        return result;
    }
}
```
This Java function works similarly to your Python function. It iterates over the input list of records and checks if there are any entries with the same ticker symbol and ex-dividend date but different dividend amounts. If such an entry is found, it adds the corresponding ticker and ex-dividend date to the output list. The results are returned in a list of string arrays, where each array contains a ticker and its corresponding ex-dividend date.