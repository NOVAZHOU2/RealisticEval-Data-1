Here's how you can convert your Python unittest test case into a TypeScript test case using Jest:

```typescript
import { checkDividendVariances } from './path_to_your_module'; // Adjust path accordingly

describe('checkDividendVariances', () => {
  it('should return tickers with the same ex-dividend date but different dividend amounts', () => {
    const records = [
      ['AAPL', '2023-10-05', 0.75],
      ['GOOGL', '2023-10-05', 0.65],
      ['AAPL', '2023-10-05', 0.85], // Different amount for AAPL
      ['MSFT', '2023-10-05', 0.45],
      ['MSFT', '2023-10-05', 0.45] // Same amount for MSFT
    ];

    const expected = [
      ['AAPL', '2023-10-05']
    ];

    expect(checkDividendVariances(records)).toEqual(expected);
  });
});
```

In this TypeScript test case:

1. We import the `checkDividendVariances` function from your module.
2. We use `describe` to group related tests together.
3. Inside the `describe`, we define an `it` block for each test case.
4. We provide input data in the form of an array of tuples, similar to your Python example.
5. We define the expected output.
6. We call `expect` followed by the function call and chain `.toEqual(expected)` to assert that the output matches the expected result.

Make sure to adjust the import statement to point to the correct location of your `checkDividendVariances` function.