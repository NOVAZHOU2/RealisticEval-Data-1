Hereâ€™s the equivalent Jest test code based on the provided C++ Catch2 test cases:

```typescript
describe("Test cases for extractStringFromBraces function", () => {
    
    test("Basic extraction", () => {
        const input = "This is a sample text with some data {data: \"value\"} and more text.";
        const result = extractStringFromBraces(input);
        expect(result).toBe("{data: \"value\"}");
    });

    test("No braces", () => {
        const input = "This string has no braces.";
        const result = extractStringFromBraces(input);
        expect(result).toBe("No opening brace found.");
    });

    test("Only opening brace", () => {
        const input = "This string has an opening brace { but no closing brace.";
        const result = extractStringFromBraces(input);
        expect(result).toBe("No closing brace found.");
    });

    test("Only closing brace", () => {
        const input = "This string has a closing brace } but no opening brace.";
        const result = extractStringFromBraces(input);
        expect(result).toBe("No opening brace found.");
    });

    test("Multiple braces", () => {
        const input = "First {first} and second {second} braces.";
        const result = extractStringFromBraces(input);
        expect(result).toBe("{first}");
    });

    test("Empty braces", () => {
        const input = "This string has empty braces {} and some text.";
        const result = extractStringFromBraces(input);
        expect(result).toBe("{}");
    });

});
```

This maintains the structure and logic of the original tests while adapting them to TypeScript and Jest conventions. Let me know if you need further assistance!