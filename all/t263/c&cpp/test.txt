To convert your Python `unittest` test class into a C++ `Catch2` test case, you'll need to write equivalent C++ code using Catch2's testing framework. Below is an example of how you might structure this:

Firstly, ensure that Catch2 is installed and included in your project. If you're using a package manager like vcpkg or conan, you can install it easily. For simplicity, let's assume Catch2 is already available in your project.

Here's how you might translate your Python `unittest` class into a C++ `Catch2` test case:

```cpp
#include <catch2/catch.hpp>
#include <vector>

// Assuming the implementation of MatrixTraversal::spiral_traversal is available here

class MatrixTraversal {
public:
    std::vector<int> spiral_traversal(const std::vector<std::vector<int>>& matrix) {
        // Implementation goes here
    }
};

TEST_CASE("MatrixTraversal::spiral_traversal", "[MatrixTraversal]") {
    MatrixTraversal mt;

    SECTION("Empty matrix") {
        std::vector<std::vector<int>> matrix = {};
        REQUIRE(mt.spiral_traversal(matrix).empty());
    }

    SECTION("1x1 matrix") {
        std::vector<std::vector<int>> matrix = {{1}};
        std::vector<int> expected = {1};
        REQUIRE(mt.spiral_traversal(matrix) == expected);
    }

    SECTION("2x3 matrix") {
        std::vector<std::vector<int>> matrix = {{1, 2, 3}, {4, 5, 6}};
        std::vector<int> expected = {1, 2, 3, 6, 5, 4};
        REQUIRE(mt.spiral_traversal(matrix) == expected);
    }

    SECTION("3x2 matrix") {
        std::vector<std::vector<int>> matrix = {{1, 2}, {3, 4}, {5, 6}};
        std::vector<int> expected = {1, 2, 4, 6, 5, 3};
        REQUIRE(mt.spiral_traversal(matrix) == expected);
    }

    SECTION("4x4 matrix") {
        std::vector<std::vector<int>> matrix = {
            {1, 2, 3, 4},
            {5, 6, 7, 8},
            {9, 10, 11, 12},
            {13, 14, 15, 16}
        };
        std::vector<int> expected = {1, 2, 3, 4, 8, 12, 16, 15, 14, 13, 9, 5, 6, 7, 11, 10};
        REQUIRE(mt.spiral_traversal(matrix) == expected);
    }
}

```

### Explanation:

- **Include Catch2 Header**: We include the Catch2 header file (`#include <catch2/catch.hpp>`).
  
- **Class Definition**: We define the `MatrixTraversal` class similarly to your Python class.
  
- **Test Case**: We create a `TEST_CASE` named "MatrixTraversal::spiral_traversal" which will contain multiple sections for different test cases.
  
- **Sections**: Each section represents a specific scenario to test. We have tests for an empty matrix, a 1x1 matrix, a 2x3 matrix, a 3x2 matrix, and a 4x4 matrix.
  
- **Assertions**: We use `REQUIRE` to assert that the output of the `spiral_traversal` method matches the expected result.

This setup allows you to run the tests using Catch2's command-line interface or integrate them into your build system.