Hereâ€™s the converted C++ class and method with comments and documentation adapted to C++ standards:

```cpp
#include <vector>
#include <iostream>

// Define a class for matrix traversal operations
class MatrixTraversal {
public:
    // Function to traverse a given m x n matrix in a spiral order and return all elements as a vector
    /*
        Traverse a given m x n matrix in a spiral order and return all elements as a vector.

        The function starts at the top-left corner of the matrix and traverses it in a
        clockwise spiral order, moving right across the top row, down the right column,
        left across the bottom row, and up the left column, repeating this process
        until all elements are traversed.

        Args:
            matrix (std::vector<std::vector<int>>): A 2D vector representing the matrix with m rows and n columns.

        Returns:
            std::vector<int>: A vector of integers representing the elements of the matrix
            in the order they were traversed.
    */
    std::vector<int> spiral_traversal(const std::vector<std::vector<int>>& matrix) {
        // Implementation of the spiral traversal algorithm goes here
        // ...
        return {}; // Placeholder return value
    }
};
```

This C++ code preserves the structure, purpose, and documentation of the original Python code. The `spiral_traversal` method is now part of a `MatrixTraversal` class in C++, and the Python comments and docstring have been translated into C++-style comments.