```java
import java.util.ArrayList;
import java.util.List;

public class MatrixTraversal {
    /**
     * Traverse a given m x n matrix in a spiral order and return all elements as a list.
     *
     * The function starts at the top-left corner of the matrix and traverses it in a
     * clockwise spiral order, moving right across the top row, down the right column,
     * left across the bottom row, and up the left column, repeating this process
     * until all elements are traversed.
     *
     * @param matrix A 2D array representing the matrix with m rows and n columns.
     * @return A list of integers representing the elements of the matrix
     *         in the order they were traversed.
     */
    public List<Integer> spiralTraversal(int[][] matrix) {
        List<Integer> result = new ArrayList<>();
        if (matrix == null || matrix.length == 0 || matrix[0].length == 0) {
            return result;
        }

        int top = 0, bottom = matrix.length - 1;
        int left = 0, right = matrix[0].length - 1;

        while (top <= bottom && left <= right) {
            // Traverse from left to right along the top row
            for (int i = left; i <= right; i++) {
                result.add(matrix[top][i]);
            }
            top++;

            // Traverse downwards along the rightmost column
            for (int i = top; i <= bottom; i++) {
                result.add(matrix[i][right]);
            }
            right--;

            // Check if there is still a valid row to traverse from right to left
            if (top <= bottom) {
                for (int i = right; i >= left; i--) {
                    result.add(matrix[bottom][i]);
                }
                bottom--;
            }

            // Check if there is still a valid column to traverse upwards
            if (left <= right) {
                for (int i = bottom; i >= top; i--) {
                    result.add(matrix[i][left]);
                }
                left++;
            }
        }

        return result;
    }
}
```

This Java version of the `MatrixTraversal` class includes a method `spiralTraversal` that takes a 2D array (`int[][]`) as input and returns a `List<Integer>` containing the elements of the matrix in spiral order. The method follows the same logic as the original Python method, ensuring that the traversal wraps around the edges of the matrix in a clockwise direction.