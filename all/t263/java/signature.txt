Certainly! Below is the equivalent Java class for the provided Python class, including the method signature, comments, and documentation converted to Java style:

```java
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * Class to perform spiral traversal on a 2D matrix.
 */
public class MatrixTraversal {

    /**
     * Traverse a given m x n matrix in a spiral order and return all elements as a list.
     *
     * The function starts at the top-left corner of the matrix and traverses it in a
     * clockwise spiral order, moving right across the top row, down the right column,
     * left across the bottom row, and up the left column, repeating this process
     * until all elements are traversed.
     *
     * @param matrix A 2D list representing the matrix with m rows and n columns.
     * @return A list of integers representing the elements of the matrix
     *         in the order they were traversed.
     */
    public List<Integer> spiralTraversal(int[][] matrix) {
        // Implementation of the spiral traversal logic goes here
        List<Integer> result = new ArrayList<>();
        
        if (matrix == null || matrix.length == 0 || matrix[0].length == 0) {
            return result;
        }
        
        int top = 0;
        int bottom = matrix.length - 1;
        int left = 0;
        int right = matrix[0].length - 1;
        
        while (top <= bottom && left <= right) {
            // Traverse from left to right
            for (int i = left; i <= right; i++) {
                result.add(matrix[top][i]);
            }
            top++;
            
            // Traverse from top to bottom
            for (int i = top; i <= bottom; i++) {
                result.add(matrix[i][right]);
            }
            right--;
            
            if (top <= bottom) {
                // Traverse from right to left
                for (int i = right; i >= left; i--) {
                    result.add(matrix[bottom][i]);
                }
                bottom--;
            }
            
            if (left <= right) {
                // Traverse from bottom to top
                for (int i = bottom; i >= top; i--) {
                    result.add(matrix[i][left]);
                }
                left++;
            }
        }
        
        return result;
    }

    public static void main(String[] args) {
        MatrixTraversal mt = new MatrixTraversal();
        int[][] matrix = {
            {1, 2, 3},
            {4, 5, 6},
            {7, 8, 9}
        };
        
        List<Integer> result = mt.spiralTraversal(matrix);
        System.out.println(result);
    }
}
```

This Java class includes the `spiralTraversal` method, which performs the same functionality as the Python function. The method includes Javadoc comments that describe the purpose, parameters, and return value. The method also includes a basic implementation of the spiral traversal logic.