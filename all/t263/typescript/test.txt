Certainly! Here is the equivalent TypeScript test class using Jest, ensuring that the functionality and logic of the tests are preserved. The provided Python unittest test class will be converted to a Jest test suite in TypeScript.

### TypeScript Code with Jest Testing

```typescript
import { MatrixTraversal } from './MatrixTraversal'; // Import the MatrixTraversal class

describe('MatrixTraversal', () => {
  let mt: MatrixTraversal;

  beforeEach(() => {
    mt = new MatrixTraversal();
  });

  it('should return an empty list for an empty matrix', () => {
    // 异常值测试：空矩阵
    expect(mt.spiralTraversal([])).toEqual([], 'Should return an empty list for an empty matrix');
  });

  it('should return the single element in the matrix', () => {
    // 基本逻辑功能测试：单元素矩阵
    const matrix = [[42]];
    expect(mt.spiralTraversal(matrix)).toEqual([42], 'Should return the single element in the matrix');
  });

  it('should return all elements in a single row', () => {
    // 边界值测试：单行矩阵
    const matrix = [[1, 2, 3, 4, 5]];
    expect(mt.spiralTraversal(matrix)).toEqual([1, 2, 3, 4, 5], 'Should return all elements in a single row');
  });

  it('should return all elements in a single column', () => {
    // 边界值测试：单列矩阵
    const matrix = [[1], [2], [3], [4], [5]];
    expect(mt.spiralTraversal(matrix)).toEqual([1, 2, 3, 4, 5], 'Should return all elements in a single column');
  });

  it('should return elements in spiral order for a general case matrix', () => {
    // 基本逻辑功能测试：多行多列矩阵
    const matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];
    expect(mt.spiralTraversal(matrix)).toEqual([1, 2, 3, 6, 9, 8, 7, 4, 5], 'Should return elements in spiral order for a general case matrix');
  });
});
```

### Explanation:
1. **Import Statement**: The `MatrixTraversal` class is imported at the beginning of the file.
2. **Describe Block**: The `describe` block sets up the test suite for `MatrixTraversal`.
3. **BeforeEach Hook**: The `beforeEach` hook initializes a new instance of `MatrixTraversal` before each test.
4. **Test Cases**:
   - Each test case uses the `it` function to describe the test and the `expect` function to assert the expected behavior.
   - The test cases are structured to match the original Python test cases, ensuring that the functionality and logic are preserved.
   - The `toEqual` matcher is used to compare arrays, which is equivalent to `assertEqual` in Python's `unittest`.

### Additional Notes:
- Ensure that the `MatrixTraversal` class is correctly implemented and exported from another file (e.g., `MatrixTraversal.ts`).
- The Jest configuration should be set up in your project to run these tests.

This TypeScript code with Jest ensures that the tests are equivalent to the original Python unittest tests, preserving the functionality and logic.