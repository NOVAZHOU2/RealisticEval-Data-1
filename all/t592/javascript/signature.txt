Hereâ€™s the equivalent JavaScript code for the provided C++ function signature, along with the comments converted appropriately:

```javascript
/**
 * @brief Performs a mathematical operation on two operands.
 *
 * This function takes two numbers and an operator character, and performs
 * the specified arithmetic operation. Supported operations include addition,
 * subtraction, multiplication, division, and exponentiation.
 *
 * @param {number} a The first operand.
 * @param {number} b The second operand.
 * @param {string} op A character representing the operation to perform:
 *                    '+' for addition,
 *                    '-' for subtraction,
 *                    '*' for multiplication,
 *                    '/' for division,
 *                    '^' for exponentiation.
 *
 * @return {number} The result of the operation.
 *
 * @throws {Error} if the operator is not recognized or if
 *         there is an attempt to divide by zero.
 */
function applyOp(a, b, op) {}
```

### Explanation of Changes:
1. **Type Declarations**: Changed `double` to `number` and `char` to `string`, which are appropriate JavaScript types.
2. **Comment Syntax**: Converted C++ comments to JSDoc format, which is common in JavaScript for documentation.
3. **Function Declaration**: Used the `function` keyword for defining the function in JavaScript, omitting the return type.