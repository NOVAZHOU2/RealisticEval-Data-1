Hereâ€™s the equivalent JavaScript code using Jest for the provided C++ Catch2 test cases:

```javascript
describe("applyOp function tests", () => {
    test("Addition", () => {
        expect(applyOp(3, 4, '+')).toBe(7);
        expect(applyOp(-1, -1, '+')).toBe(-2);
    });

    test("Subtraction", () => {
        expect(applyOp(10, 5, '-')).toBe(5);
        expect(applyOp(5, 10, '-')).toBe(-5);
    });

    test("Multiplication", () => {
        expect(applyOp(3, 4, '*')).toBe(12);
        expect(applyOp(-2, 5, '*')).toBe(-10);
    });

    test("Division", () => {
        expect(applyOp(8, 4, '/')).toBe(2);
        expect(applyOp(5, 2, '/')).toBe(2.5);
        expect(() => applyOp(5, 0, '/')).toThrow("Division by zero is not allowed.");
    });

    test("Exponentiation", () => {
        expect(applyOp(2, 3, '^')).toBe(8);
        expect(applyOp(9, 0.5, '^')).toBe(3); // Square root of 9
    });
});
```

### Explanation of Changes:
1. **Test Structure**: Used `describe` for grouping tests and `test` for individual test cases, consistent with Jest.
2. **Assertions**: Replaced `REQUIRE` with `expect(...).toBe(...)` for value checks.
3. **Error Handling**: Used `expect(() => ...).toThrow(...)` to check for exceptions, specifying the error message directly.
4. **Formatting**: Maintained clear formatting for readability in JavaScript style.