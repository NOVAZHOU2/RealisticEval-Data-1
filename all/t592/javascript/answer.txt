Here's the equivalent JavaScript code for the provided C++ function:

```javascript
function applyOp(a, b, op) {
    switch (op) {
        case '+':
            return a + b;
        case '-':
            return a - b;
        case '*':
            return a * b;
        case '/':
            if (b === 0) {
                throw new Error("Division by zero is not allowed.");
            }
            return a / b;
        case '^':
            return Math.pow(a, b);
        default:
            throw new Error("Invalid operator.");
    }
}
```

### Explanation of Changes:
1. **Function Declaration**: JavaScript uses the `function` keyword instead of the type signature.
2. **Error Handling**: In JavaScript, `throw new Error(...)` is used instead of `throw std::invalid_argument(...)`.
3. **Math Operations**: The `pow` function in C++ is replaced with `Math.pow()` in JavaScript.
4. **Strict Equality**: Used `===` for strict comparison when checking for zero to prevent type coercion.
5. **Formatting**: JavaScript conventions were followed for clarity and readability.