Here's how you can convert your Python unittest test class to C++ using Catch2:

```cpp
#include <catch2/catch.hpp>
#include <cmath>

// Define the constant for conversion: Boltzmann constant in keV/K
const double k_B_over_keV = 8.617333262145e-5;  // eV/K to keV/K

double convert_log10_K_to_keV(double T_log10_K) {
    return std::pow(10.0, T_log10_K) * k_B_over_keV;
}

TEST_CASE("Convert log10(K) to keV", "[convert_log10_K_to_keV]") {
    REQUIRE(convert_log10_K_to_keV(0.0) == Approx(k_B_over_keV));
    REQUIRE(convert_log10_K_to_keV(1.0) == Approx(10.0 * k_B_over_keV));
    REQUIRE(convert_log10_K_to_keV(-1.0) == Approx(0.1 * k_B_over_keV));
}
```

In this C++ code, we've used Catch2's `TEST_CASE` macro to create a test case named "Convert log10(K) to keV". We're testing three scenarios where the input values are 0.0, 1.0 and -1.0 respectively. We're comparing the output with expected results using Catch2's `REQUIRE` macro along with `Approx` to allow for floating point comparison.