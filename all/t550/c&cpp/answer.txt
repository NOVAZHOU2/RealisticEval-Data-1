Here's how you can translate the Python code into C and C++:

C Code:

```c
#include <stdio.h>
#include <math.h>

#define k_B_over_keV 8.617333262145e-5

double convert_log10_K_to_keV(double T_log10_K){
    return pow(10, T_log10_K) * k_B_over_keV;
}

int main(){
    double temp = convert_log10_K_to_keV(2.0);
    printf("Temperature in keV: %f\n", temp);
    return 0;
}
```

C++ Code:

```cpp
#include <iostream>
#include <cmath>

const double k_B_over_keV = 8.617333262145e-5;

double convert_log10_K_to_keV(double T_log10_K){
    return std::pow(10, T_log10_K) * k_B_over_keV;
}

int main(){
    double temp = convert_log10_K_to_keV(2.0);
    std::cout << "Temperature in keV: " << temp << std::endl;
    return 0;
}
```
In both codes, we're using the `pow` function from the math library to calculate the power of 10 to the input value, which is equivalent to converting it from log10(K) to K. Then, we multiply it by the constant `k_B_over_keV` to get the temperature in keV. 

The `main` function just calls our conversion function with an example input and prints out the result.