Sure, here's the equivalent TypeScript code for your Python function:

```typescript
const k_B_over_keV: number = 8.617333262145e-5; // eV/K to keV/K

function convertLog10KToKeV(T_log10_K: number | number[]): number | number[] {
    if (typeof T_log10_K === 'number') {
        return Math.pow(10, T_log10_K) * k_B_over_keV;
    } else if (Array.isArray(T_log10_K)) {
        return T_log10_K.map(temp => Math.pow(10, temp) * k_B_over_keV);
    } else {
        throw new Error('Input must be a number or an array of numbers');
    }
}
```

### Explanation:
1. **Constants and Variables**:
   - `k_B_over_keV` is defined as a constant with the same value as in the Python code.
   
2. **Function Definition**:
   - The function `convertLog10KToKeV` takes one argument `T_log10_K`, which can either be a single number or an array of numbers.
   
3. **Type Checking and Conversion**:
   - If `T_log10_K` is a single number, it converts the temperature from log10(K) to keV using the formula \( \text{keV} = 10^{\text{T\_log10\_K}} \times k_{B,\text{over}\_keV} \).
   - If `T_log10_K` is an array, it maps over each element in the array, applying the same conversion formula, and returns an array of converted temperatures.
   - If the input is neither a number nor an array, it throws an error indicating that the input must be a number or an array of numbers.

This TypeScript function should behave similarly to your original Python function.