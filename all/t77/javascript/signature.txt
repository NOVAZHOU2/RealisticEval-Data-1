Sure! Below is the JavaScript version of the provided Python function with the same functionality and comments:

```javascript
/**
 * Formats the given timestamp as a string according to the specified format, using the system's local time zone.
 *
 * @param {number} timestamp - The time value representing the seconds since the epoch.
 * @param {string} [dateFormat='%a %b %d %I:%M:%S %p %z %Y'] - The format string to use for formatting the timestamp.
 *                                                           Defaults to '%a %b %d %I:%M:%S %p %z %Y'.
 * @returns {string} - The formatted date and time string.
 */
function formatTimestampToString(timestamp, dateFormat = '%a %b %d %I:%M:%S %p %z %Y') {
    // Convert the timestamp to a Date object
    const date = new Date(timestamp * 1000);

    // Function to pad numbers with leading zeros
    function pad(number) {
        return number < 10 ? '0' + number : number;
    }

    // Extract date components
    const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
    const day = daysOfWeek[date.getUTCDay()];
    const month = months[date.getUTCMonth()];
    const dayOfMonth = date.getUTCDate();
    const hours = date.getUTCHours();
    const minutes = date.getUTCMinutes();
    const seconds = date.getUTCSeconds();
    const ampm = hours >= 12 ? 'PM' : 'AM';
    const hour12 = hours % 12 || 12; // Convert to 12-hour format

    // Format the date string based on the provided format
    let formattedString = dateFormat.replace(/%a/g, day)
                                  .replace(/%b/g, month)
                                  .replace(/%d/g, pad(dayOfMonth))
                                  .replace(/%I/g, pad(hour12))
                                  .replace(/%M/g, pad(minutes))
                                  .replace(/%S/g, pad(seconds))
                                  .replace(/%p/g, ampm)
                                  .replace(/%z/g, date.getTimezoneOffset() / 60)
                                  .replace(/%Y/g, date.getUTCFullYear());

    return formattedString;
}
```

This JavaScript function `formatTimestampToString` takes a timestamp in seconds since the epoch and an optional date format string, then returns the formatted date and time string according to the specified format. The default format is similar to the one used in the Python example.