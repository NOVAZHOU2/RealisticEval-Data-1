Here is the equivalent JavaScript code:

```javascript
function formatTimestampToString(timestamp, dateFormat = '%a %b %d %I:%M:%S %p %z %Y') {
    const date = new Date(timestamp * 1000); // Convert to milliseconds

    const pad = (n) => n.toString().padStart(2, '0');

    const options = {
        weekday: 'short', year: 'numeric', month: 'short', day: 'numeric',
        hour: '2-digit', minute: '2-digit', second: '2-digit',
        timeZoneName: 'short'
    };

    return dateFormat.replace(/%([a-zA-Z])/g, function(match, letter) {
        switch(letter) {
            case 'a': return date.toLocaleTimeString('en-US', {hour12: true}).split(':')[0];
            case 'A': return date.toLocaleTimeString('en-US', {hour12: false}).split(':')[0];
            case 'b': return date.toLocaleString('en-US', {month: 'short'});
            case 'B': return date.toLocaleString('en-US', {month: 'long'});
            case 'c': return date.toLocaleString();
            case 'd': return pad(date.getDate());
            case 'e': return date.getDate();
            case 'H': return pad(date.getHours());
            case 'h': return pad(date.getHours() % 12 || 12);
            case 'I': return pad(date.getHours() % 12 || 12);
            case 'j': return pad((date.getMonth() + 1) * 32 + date.getDate());
            case 'm': return pad(date.getMonth() + 1);
            case 'M': return pad(date.getMinutes());
            case 'p': return date.toLocaleTimeString('en-US', {hour12: true}).split(':')[1].toLowerCase();
            case 'P': return date.toLocaleTimeString('en-US', {hour12: true}).split(':')[1].toUpperCase();
            case 's': return Math.floor(date.getTime() / 1000);
            case 'U': return pad(Math.ceil((date - new Date(date.getFullYear(), 0, 1)) / 86400000));
            case 'w': return date.getDay();
            case 'W': return pad(Math.ceil((date - new Date(date.getFullYear(), 0, 7 - date.getDay())) / 86400000));
            case 'x': return date.toLocaleDateString();
            case 'X': return date.toLocaleTimeString();
            case 'y': return ('' + date.getFullYear()).slice(-2);
            case 'Y': return date.getFullYear();
            default: return match;
        }
    });
}
```

Please note that JavaScript's `Date` object uses milliseconds instead of seconds since the Unix Epoch, so we need to multiply the input timestamp by 1000. Also, some of the Python format specifiers don't have direct equivalents in JavaScript, so I've had to make some assumptions about what you might want to achieve with them.