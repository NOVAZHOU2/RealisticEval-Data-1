Here is the equivalent TypeScript code:

```typescript
import { format } from 'date-fns';

interface FormatTimestampToStringOptions {
  timestamp: number;
  dateFormat?: string;
}

export function formatTimestampToString(options: FormatTimestampToStringOptions): string {
  const { timestamp, dateFormat = '%a %b %d %I:%M:%S %p %z %Y' } = options;

  return format(new Date(timestamp * 1000), dateFormat);
}
```

In this code, I've used `date-fns` library which is a popular JavaScript/TypeScript library for working with dates. It has a `format` function that formats a date based on a provided pattern. Note that `timestamp` in Python is in seconds while in JavaScript it's in milliseconds, so we multiply by 1000 when converting it to a JavaScript `Date`. Also note that you need to install the `date-fns` package before running this code (`npm install date-fns`).