Certainly! Below is the equivalent JavaScript code for the provided Python function, including the function signature and comments rewritten in JSDoc format:

```javascript
/**
 * Converts RGB color to HSV color.
 * 
 * Example:
 *   Input: 0, 0, 255
 *   Output: [240, 100, 100]
 * 
 * @param {number} r - The red value (0-255)
 * @param {number} g - The green value (0-255)
 * @param {number} b - The blue value (0-255)
 * 
 * @returns {Array<number>} An array representing the HSV values [H, S, V]
 */
function rgbToHsv(r, g, b) {
    // Normalize the RGB values by dividing by 255
    r /= 255.0;
    g /= 255.0;
    b /= 255.0;

    // Find the minimum and maximum values among R, G, and B
    const maxRgb = Math.max(r, g, b);
    const minRgb = Math.min(r, g, b);
    const delta = maxRgb - minRgb;

    // Calculate H (Hue)
    let h = 0;
    if (delta === 0) {
        h = 0;
    } else if (maxRgb === r) {
        h = ((g - b) / delta) % 6;
    } else if (maxRgb === g) {
        h = ((b - r) / delta) + 2;
    } else {
        h = ((r - g) / delta) + 4;
    }

    h *= 60;  // Convert to degrees on the color circle

    // Calculate S (Saturation)
    let s = 0;
    if (maxRgb === 0) {
        s = 0;
    } else {
        s = delta / maxRgb;
    }

    // V (Value) is equal to maxRgb
    const v = maxRgb;

    return [h, s * 100, v * 100];
}
```

### Explanation:
1. **Function Signature**:
   - The function `rgbToHsv` is defined with parameters `r`, `g`, and `b`.
   - The return type is specified as an array of numbers `[H, S, V]`.

2. **JSDoc Comments**:
   - The JSDoc comment block provides a description of the function, an example, and details about the parameters and return type.
   - The `@param` tags describe the input parameters `r`, `g`, and `b`.
   - The `@returns` tag describes the output array.

3. **Implementation**:
   - The function body remains the same as the original Python implementation, ensuring the logic and structure are preserved.

This JavaScript code should provide the same functionality as the original Python function, with proper documentation using JSDoc.