Certainly! Below is the equivalent TypeScript code for the given Python function `rgb_to_hsv`, including appropriate JSDoc-style documentation comments:

```typescript
/**
 * Converts an RGB color to an HSV color.
 * 
 * Example:
 *   Input: 0, 0, 255
 *   Output: [240, 100, 100]
 * 
 * @param r - The red value of the RGB color (0-255).
 * @param g - The green value of the RGB color (0-255).
 * @param b - The blue value of the RGB color (0-255).
 * @returns A tuple representing the HSV color values [H, S, V].
 */
function rgbToHsv(r: number, g: number, b: number): [number, number, number] {
    // Normalize the RGB values by dividing by 255
    const normalizedR = r / 255.0;
    const normalizedG = g / 255.0;
    const normalizedB = b / 255.0;

    // Find the minimum and maximum values among R, G, and B
    const maxRgb = Math.max(normalizedR, normalizedG, normalizedB);
    const minRgb = Math.min(normalizedR, normalizedG, normalizedB);
    const delta = maxRgb - minRgb;

    // Calculate H (Hue)
    let h: number;
    if (delta === 0) {
        h = 0;
    } else if (maxRgb === normalizedR) {
        h = ((normalizedG - normalizedB) / delta) % 6;
    } else if (maxRgb === normalizedG) {
        h = ((normalizedB - normalizedR) / delta) + 2;
    } else {
        h = ((normalizedR - normalizedG) / delta) + 4;
    }

    h *= 60;  // Convert to degrees on the color circle

    // Calculate S (Saturation)
    let s: number;
    if (maxRgb === 0) {
        s = 0;
    } else {
        s = delta / maxRgb;
    }

    // V (Value) is equal to maxRgb
    const v = maxRgb;

    return [h, s * 100, v * 100];
}
```

### Explanation:
1. **Function Signature**: The function signature is defined with explicit types for the parameters and return type.
2. **JSDoc Comments**: The Python docstring is converted to JSDoc-style comments, providing clear documentation for the function.
3. **Type Annotations**: The parameter types `int` in Python are translated to `number` in TypeScript.
4. **Return Type**: The return type `Tuple[int, int, int]` in Python is translated to `[number, number, number]` in TypeScript.
5. **Logic**: The logic for converting RGB to HSV remains the same, ensuring consistency with the original Python implementation.

This TypeScript code preserves the original functionality and structure while adhering to TypeScript's static type system and providing clear documentation.