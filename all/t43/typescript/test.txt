Sure! Below is the equivalent TypeScript test case using Jest for the given Python `unittest` test class.

```typescript
import { describe, it, expect } from '@jest/globals';

function rgbToHsv(r: number, g: number, b: number): [number, number, number] {
    /**
     * Convert RGB color to HSV color.
     * For example:
     *      input: 0, 0, 255
     *      output: 240, 100, 100
     * Args:
     *      r (int): rgb red value
     *      g (int): rgb green value
     *      b (int): rgb blue value
     *
     * Returns:
     *    Tuple[int, int, int]: HSV value
     */
    const max = Math.max(r, g, b);
    const min = Math.min(r, g, b);
    let h = 0;
    let s = 0;
    let v = max;

    if (max !== min) {
        const delta = max - min;
        s = Math.round((delta / max) * 100);

        switch (max) {
            case r:
                h = ((g - b) / delta) % 6;
                break;
            case g:
                h = (b - r) / delta + 2;
                break;
            case b:
                h = (r - g) / delta + 4;
                break;
        }

        h = Math.round(h * 60);
        if (h < 0) h += 360;
    }

    return [h, s, v];
}

describe('rgbToHsv', () => {
    it('should convert RGB (0, 0, 255) to HSV (240, 100, 100)', () => {
        const result = rgbToHsv(0, 0, 255);
        expect(result).toEqual([240, 100, 100]);
    });

    // Add more test cases here...
});
```

### Explanation:
- **Imports**: The `@jest/globals` module provides access to Jest's global functions like `describe`, `it`, and `expect`.
- **Function Definition**: The `rgbToHsv` function is defined in TypeScript, following the same logic as the original Python function.
- **Test Suite**: The `describe` block groups related tests together, and each individual test is defined within an `it` block.
- **Assertions**: The `expect` function along with `.toEqual` is used to assert that the output of `rgbToHsv` matches the expected result.

Feel free to add more test cases to cover different scenarios!