Sure! Here's how you can translate the JavaScript function signature into Python, keeping the comments intact:

```python
import hashlib

def get_price(recipe_id: str, min_val: float = 10, max_val: float = 30) -> float:
    """
    The recipe ID is hashed to produce a price in the specified range.

    :param recipe_id: The ID of the recipe to hash.
    :type recipe_id: str
    :param min_val: The minimum value of the price range, defaults to 10.
    :type min_val: float, optional
    :param max_val: The maximum value of the price range, defaults to 30.
    :type max_val: float, optional
    :return: The hashed price, mapped to the specified range with two decimal places.
    :rtype: float
    """
```

In this Python version, I've used type hints for better readability and clarity. The `hashlib` module will be used to hash the `recipe_id`. However, the actual hashing logic (which was not provided in the original JavaScript code) would need to be implemented within the function body.