Here's the equivalent JavaScript code that maintains the same logic and functionality as the provided C++ code:

```javascript
/**
 * @brief Returns a copy of the specified string.
 * 
 * @param {string} str - The input string to be copied.
 * @return {string} A copy of the input string.
 * @throws {Error} If the input string is null or undefined.
 */
function returnString(str) {
    if (str == null) {
        throw new Error("Input string cannot be null or undefined.");
    }

    // Create a copy of the string
    const copiedStr = str.slice();

    return copiedStr;
}
```

### Key Changes Explained:
1. **Memory Management**: JavaScript manages memory automatically, so there's no need for manual allocation like in C++ with `new`.
2. **String Handling**: JavaScript strings are immutable, so using `slice()` creates a copy of the string easily.
3. **Error Handling**: JavaScript uses `Error` to throw exceptions, which is somewhat similar to `std::invalid_argument` in C++.
4. **Function Naming**: Adjusted to JavaScript conventions (camelCase).
5. **Type Annotations**: Used JSDoc comments to annotate parameter and return types, similar to the C++ style.