Sure! Below is the equivalent C++ code for your Python function `replace_phone_numbers`.

```cpp
#include <iostream>
#include <regex>
#include <string>

std::string replace_phone_numbers(const std::string& text) {
    // Define the regex pattern for phone numbers
    std::regex phone_pattern(R"((\d{3}[-.\s]?)?\(?\d{3}\)?[-.\s]?\d{3}[-.\s]?\d{4}))");
    
    // Replace phone numbers with "[PHONE_NUM]"
    std::string result = std::regex_replace(text, phone_pattern, "[PHONE_NUM]");
    
    return result;
}

int main() {
    std::string input = "Call me at 123-456-7890.";
    std::string output = replace_phone_numbers(input);
    std::cout << output << std::endl;  // Output: Call me at [PHONE_NUM].
    
    return 0;
}
```

### Explanation:

1. **Regex Pattern**: 
   - The regex pattern `R"((\d{3}[-.\s]?)?\(?\d{3}\)?[-.\s]?\d{3}[-.\s]?\d{4}))"` is used to match various phone number formats.
     - `\d{3}` matches exactly three digits.
     - `[-.\s]?` matches an optional hyphen, dot, or space.
     - `\(?\d{3}\)?` matches an optional set of parentheses around three digits.
     - `[-.\s]?\d{3}[-.\s]?\d{4}` matches three more digits separated by an optional hyphen, dot, or space and then four more digits.

2. **Replace Function**:
   - `std::regex_replace` is used to replace all occurrences of the phone number pattern in the input string with `[PHONE_NUM]`.

3. **Main Function**:
   - The `main` function demonstrates how to use the `replace_phone_numbers` function by passing an example input string and printing the result.

This C++ code should work similarly to your original Python function, replacing all recognized phone numbers in a given string with `[PHONE_NUM]`.