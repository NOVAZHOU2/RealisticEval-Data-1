Sure, here is the JavaScript equivalent of your Python function, keeping the same comments and structure:

```javascript
/**
 * Replaces all phone numbers (in various formats) in the string with the string '[PHONE_NUM]'
 * 
 * Example:
 *      Input: Call me at 123-456-7890.
 *      Output: Call me at [PHONE_NUM].
 * 
 * @param {string} text - The input string that may contain phone numbers.
 * @returns {string} - The modified string with phone numbers replaced by '[PHONE_NUM]'.
 */
function replacePhoneNumbers(text) {
    // Regular expression to match various phone number formats
    const phoneNumberRegex = /(\(\d{3}\)|\d{3})[-.\s]?\d{3}[-.\s]?\d{4}/g;

    // Replace all occurrences of phone numbers with '[PHONE_NUM]'
    return text.replace(phoneNumberRegex, '[PHONE_NUM]');
}
```

### Explanation:
1. **Regular Expression**: The regular expression `/(\(\d{3}\)|\d{3})[-.\s]?\d{3}[-.\s]?\d{4}/g` matches different phone number formats such as `(123) 456-7890`, `123.456.7890`, `123-456-7890`, etc.
   - `(\(\d{3}\)|\d{3})`: Matches either `(123)` or `123`.
   - `[-.\s]?`: Optionally matches `-`, `.`, or a space.
   - `\d{3}`: Matches exactly three digits.
   - `[-.\s]?`: Optionally matches `-`, `.`, or a space.
   - `\d{4}`: Matches exactly four digits.
   - `g`: Global flag to replace all occurrences in the string.

2. **Replace Function**: The `replace` method is used to substitute all matched phone numbers with `[PHONE_NUM]`.

This function should work similarly to your original Python function in terms of functionality and behavior.