Certainly! Here is the equivalent JavaScript function with JSDoc comments:

```javascript
/**
 * Replaces all phone numbers in the string with the string [PHONE_NUM].
 * For example:
 *   input: "Call me at 123-456-7890."
 *   output: "Call me at [PHONE_NUM]."
 *
 * @param {string} text - The input string that may contain phone numbers.
 * @returns {string} The modified string with phone numbers replaced by '[PHONE_NUM]'.
 */
function replacePhoneNumbers(text) {
    // Define a regex pattern to match phone numbers
    // This pattern matches optional country codes, spaces, dashes, and brackets commonly found in phone numbers
    const phonePattern = /\b(?:\+\d{1,2}\s?)?(\d{1,4}[-.\s]?)?\(?\d{1,4}\)?[-.\s]?\d{1,9}[-.\s]?\d{1,9}\b/g;

    // Replace all matches in the text with [PHONE_NUM]
    const replacedText = text.replace(phonePattern, '[PHONE_NUM]');

    return replacedText;
}
```

### Explanation:
1. **JSDoc Comments**:
   - The JSDoc comment block provides a clear description of the function's purpose and usage.
   - It includes an example to illustrate how the function works.
   - The `@param` tag specifies the parameter type and description.
   - The `@returns` tag specifies the return type and description.

2. **Function Definition**:
   - The function `replacePhoneNumbers` is defined with a single parameter `text`.
   - The regex pattern `phonePattern` is defined using JavaScript's regex syntax with the `g` flag for global matching.
   - The `replace` method is used to substitute all matches with `[PHONE_NUM]`.

This JavaScript function should behave identically to the provided Python function, including the detailed documentation.