To convert your Python unittest test class into a Java JUnit test case, you need to follow these steps:

1. Import necessary Java libraries.
2. Create a new Java class in the specified package.
3. Write equivalent methods for your Python functions in Java.
4. Use JUnit annotations to mark methods as tests.

Here's how you can do it:

### Java Code

```java
package org.real.temp;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.util.Arrays;
import java.util.List;

import org.junit.Before;
import org.junit.Test;

public class Tester {

    private InputStream originalIn;

    @Before
    public void setUp() {
        // Store the original System.in
        originalIn = System.in;
    }

    @Test
    public void testReadTsvFromStdin() {
        // Test data
        String tsvData = "name\tage\ncat\t5\nbird\t7";
        
        // Redirect System.in to a ByteArrayInputStream containing the TSV data
        try (ByteArrayInputStream bais = new ByteArrayInputStream(tsvData.getBytes())) {
            System.setIn(bais);

            List<List<String>> result = readTsvFromStdin();

            // Expected output
            List<List<String>> expected = Arrays.asList(
                Arrays.asList("name", "age"),
                Arrays.asList("cat", "5"),
                Arrays.asList("bird", "7")
            );

            assertEquals(expected, result);
        } finally {
            // Restore the original System.in
            System.setIn(originalIn);
        }
    }

    private List<List<String>> readTsvFromStdin() {
        List<List<String>> rows = new ArrayList<>();
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        String line;
        try {
            while ((line = reader.readLine()) != null) {
                String[] fields = line.split("\t");
                rows.add(Arrays.asList(fields));
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return rows;
    }
}
```

### Explanation

1. **Package Declaration**: The `package` declaration specifies that the class belongs to the `org.real.temp` package.
2. **Imports**: Necessary imports include `static org.junit.Assert.*` for assertions, `java.io.ByteArrayInputStream`, `java.io.InputStream`, `java.util.Arrays`, `java.util.List`, `org.junit.Before`, and `org.junit.Test`.
3. **Setup Method**: The `@Before` annotation marks the `setUp` method, which stores the original `System.in` before any tests run.
4. **Test Method**: The `testReadTsvFromStdin` method uses `@Test` to indicate that it is a test case. It redirects `System.in` to a `ByteArrayInputStream` containing the TSV data, reads the data using the `readTsvFromStdin` method, and then asserts that the result matches the expected output.
5. **Read TSV Method**: The `readTsvFromStdin` method reads lines from `System.in`, splits them on tabs, and adds them to a list of lists.

This Java JUnit test case should provide similar functionality to your Python unittest test class.