Here is how you can convert your Python function `safe_format` into TypeScript:

```typescript
function safeFormat(template: string, ...args: any[]): string {
    let result = template;
    for (let i = 0; i < args.length; i++) {
        const key = `{${i}}`;
        while (result.includes(key)) {
            result = result.replace(key, args[i].toString());
        }
    }
    return result;
}
```

This TypeScript function works similarly to your Python function. It takes a template string and an arbitrary number of arguments. It then iterates over these arguments and replaces all occurrences of placeholders (`{index}`) in the template string with the corresponding argument's value. 

Please note that this implementation assumes that the order of the placeholders in the template string corresponds to the order of the arguments passed to the function. If you want to support named placeholders like in your original Python function, you would need to use regular expressions or a more complex approach to match and replace them.