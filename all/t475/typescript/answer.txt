Here is the equivalent TypeScript code for the provided Python code:

```typescript
import * as regex from 'xregexp';

function safeFormat(template: string, ...kwargs: [string, any][]): string {
    /**
     * Safely formats a template string by replacing placeholders with corresponding values
     * from the provided keyword arguments. If a placeholder does not have a corresponding
     * value in kwargs, it remains unchanged.
     *
     * @param template - The string template containing placeholders in the form {key}.
     * @param kwargs - Keyword arguments that map keys to their replacement values.
     * @returns The formatted string with placeholders replaced by values.
     */

    // Compile a regex pattern to match placeholders in the form {key}
    const pattern = regex('\\{(?<key>\\w+)\\}', 'g');

    const replacer = (match: regex.ExecArray): string => {
        /**
         * Replacement function for the regex sub method.
         *
         * @param match - A regex match object containing the matched placeholder.
         * @returns The replacement value if the key exists in kwargs, otherwise the original placeholder.
         */
        const key = match.groups.key; // Extract the placeholder key
        // Return the corresponding value from kwargs, or the original placeholder if not found
        const value = kwargs.find(([k]) => k === key);
        return value ? String(value[1]) : match[0];
    };

    // Replace placeholders in the template using the replacer function
    return template.replace(pattern, replacer);
}

// Example usage
const formattedString = safeFormat("Hello, {name}! Today is {day}.", ["name", "Alice"], ["day", "Monday"]);
console.log(formattedString); // Output: Hello, Alice! Today is Monday.
```

### Explanation:
1. **Import Statement**: TypeScript does not have a built-in `re` module like Python, so we use `xregexp` which provides similar functionality.
2. **Function Definition**: The `safeFormat` function takes a template string and a spread of tuples representing keyword arguments.
3. **Regex Pattern**: We compile a regex pattern using `xregexp` to match placeholders in the form `{key}`.
4. **Replacer Function**: This function checks if the key exists in the provided keyword arguments and replaces the placeholder accordingly.
5. **Replacement**: The `replace` method is used with the compiled pattern and the replacer function to perform the substitution.

This TypeScript code maintains the same functionality and logic as the Python code while adapting to TypeScript's syntax and type system.