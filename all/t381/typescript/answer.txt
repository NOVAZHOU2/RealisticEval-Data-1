Sure! Here is the equivalent TypeScript code for the provided Python function:

```typescript
function extractEmailDetails(email: string): [string, string] {
    /**
     * Extracts the username and mailbox suffix from an email address.
     *
     * @param email - the email address to extract details from
     * @returns A tuple [username, domain] where:
     *     username is the part before '@'
     *     domain is the part after '@'
     *
     * Example:
     *     extractEmailDetails("xxx@gmail.com") returns ['xxx', 'gmail.com']
     */

    // Check if '@' is in the email
    if (!email.includes('@')) {
        throw new Error("Invalid email address. Email must contain an '@' character.");
    }

    // Split the email at the '@' and assign parts to username and domain
    const [username, domain] = email.split('@', 1);

    return [username, domain];
}
```

### Explanation:
1. **Type Annotations**: The function `extractEmailDetails` has been annotated with the type `string` for the parameter `email` and the return type `[string, string]` for the tuple.
2. **Error Handling**: Instead of using `ValueError`, which is specific to Python, we use `Error` in TypeScript.
3. **String Methods**: The `includes` method is used to check if the email contains `'@'`. The `split` method is used to split the email address, which behaves similarly to Python's `split`.
4. **Tuple Return Type**: The return type is explicitly defined as a tuple `[string, string]`.

This TypeScript code maintains the same functionality and logic as the Python code, while adapting to TypeScript's static type system and conventions.