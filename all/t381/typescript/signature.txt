Certainly! Here is the equivalent TypeScript code, including the conversion of the Python function signature, comments, and docstrings to TypeScript documentation using the JSDoc style:

```typescript
/**
 * Extracts the username and mailbox suffix from an email address.
 * Example: extractEmailDetails("xxx@gmail.com") returns ['xxx', 'gmail.com']
 * 
 * @param email - The email address to extract details from.
 * @returns A tuple [username, domain].
 */
function extractEmailDetails(email: string): [string, string] {
    // Check if '@' is in the email
    if (!email.includes('@')) {
        throw new Error("Invalid email address. Email must contain an '@' character.");
    }

    // Split the email at the '@' and assign parts to username and domain
    const [username, domain] = email.split('@', 1);

    return [username, domain];
}
```

### Explanation:
1. **Function Signature**:
   - The function `extractEmailDetails` is defined with a type signature `email: string` for the parameter.
   - The return type is specified as `[string, string]` to indicate a tuple with two string elements.

2. **Documentation Comments**:
   - The JSDoc-style comments are used to document the function, parameters, and return type.
   - The example usage is included within the documentation.

3. **Error Handling**:
   - If the email does not contain an '@' character, a `Error` is thrown with a descriptive message.

4. **Splitting the Email**:
   - The email is split using the `split` method, and the resulting parts are assigned to `username` and `domain`.

5. **Return Statement**:
   - The function returns a tuple `[username, domain]` as specified in the Python code.

This TypeScript code preserves the original functionality and structure of the Python code while adhering to TypeScript conventions and providing clear documentation.