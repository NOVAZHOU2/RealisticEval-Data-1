Sure! Here is the equivalent C++ code for your Python function:

```cpp
#include <iostream>
#include <string>
#include <utility> // For std::pair

// Function to extract username and domain from an email address
std::pair<std::string, std::string> extract_email_details(const std::string& email) {
    size_t at_pos = email.find('@');
    if (at_pos == std::string::npos) {
        throw std::invalid_argument("Invalid email format");
    }
    
    std::string username = email.substr(0, at_pos);
    std::string domain = email.substr(at_pos + 1);
    
    return {username, domain};
}

int main() {
    try {
        auto [username, domain] = extract_email_details("xxx@gmail.com");
        std::cout << "Username: " << username << ", Domain: " << domain << std::endl;
    } catch (const std::exception& e) {
        std::cerr << "Error: " << e.what() << std::endl;
    }
    
    return 0;
}
```

### Explanation:
- **`find` Method**: The `find` method in C++ strings is used to locate the '@' character.
- **`substr` Method**: The `substr` method extracts substrings based on the starting position and length.
- **`std::pair`**: This is used to return two values from the function.
- **Exception Handling**: The function throws an exception if the email format is invalid (i.e., no '@' character).

This C++ code should work similarly to your original Python function.