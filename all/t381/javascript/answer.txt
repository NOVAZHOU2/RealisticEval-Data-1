Sure, here's the equivalent JavaScript code for the provided Python function:

```javascript
function extractEmailDetails(email) {
    /**
     * Extracts the username and mailbox suffix from an email address.
     *
     * @param {string} email - The email address to extract details from.
     * @returns {Array} An array [username, domain] where:
     *      username is the part before '@'
     *      domain is the part after '@'
     *
     * Example:
     *      extractEmailDetails("xxx@gmail.com") returns ['xxx', 'gmail.com']
     */

    // Check if '@' is in the email
    if (!email.includes('@')) {
        throw new Error("Invalid email address. Email must contain an '@' character.");
    }

    // Split the email at the '@' and assign parts to username and domain
    const [username, domain] = email.split('@');

    return [username, domain];
}
```

### Explanation:
- **Function Definition**: The `extractEmailDetails` function is defined with a single parameter `email`.
- **Documentation**: A JSDoc comment is used to describe the function, parameters, and return value.
- **Validation**: The function checks if the email contains the '@' character using the `includes` method. If not, it throws an error.
- **Splitting the Email**: The `split` method is used to split the email string at the first occurrence of the '@' symbol. The result is assigned to an array destructuring pattern `[username, domain]`.
- **Return Value**: The function returns an array containing the `username` and `domain`.

This JavaScript function maintains the same functionality, logic, and structure as the original Python function.