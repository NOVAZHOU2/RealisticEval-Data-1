Certainly! Hereâ€™s the equivalent JavaScript code with the function signature and comments rewritten to conform to JavaScript documentation standards using JSDoc format:

```javascript
/**
 * Extracts the username and mailbox suffix from an email address.
 * Example: extractEmailDetails("xxx@gmail.com") returns ['xxx', 'gmail.com']
 * 
 * @param {string} email - The email address to extract details from.
 * @returns {Array} An array [username, domain] where:
 *      username is the part before '@'
 *      domain is the part after '@'
 */
function extractEmailDetails(email) {
    // Check if '@' is in the email
    if (!email.includes('@')) {
        throw new Error("Invalid email address. Email must contain an '@' character.");
    }

    // Split the email at the '@' and assign parts to username and domain
    const [username, domain] = email.split('@');

    return [username, domain];
}
```

### Explanation:
- **Function Signature**: The function `extractEmailDetails` is defined with a single parameter `email`.
- **JSDoc Comments**:
  - The JSDoc comment block provides a brief description of the function.
  - The `@param` tag specifies the parameter type and description.
  - The `@returns` tag describes the return value and its structure.
- **Validation**: The function checks if the email contains the '@' character using the `includes` method. If not, it throws an error.
- **Splitting the Email**: The `split` method is used to split the email string at the first occurrence of the '@' symbol. The result is assigned to an array destructuring pattern `[username, domain]`.
- **Return Value**: The function returns an array containing the `username` and `domain`.

This JavaScript function preserves the purpose and structure of the original Python function while adhering to JavaScript documentation standards.