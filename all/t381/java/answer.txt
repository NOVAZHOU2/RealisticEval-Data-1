Hereâ€™s the equivalent Java code for the provided Python function, organized within the `org.real.temp` package and the `Answer` class:

```java
package org.real.temp;

/**
 * Extracts the username and mailbox suffix from an email address.
 */
public class Answer {

    /**
     * Extracts the username and domain from an email address.
     *
     * @param email the email address to extract details from
     * @return a String array containing the username and domain
     * @throws IllegalArgumentException if the email does not contain an '@' character
     */
    public static String[] extractEmailDetails(String email) {
        // Check if '@' is in the email
        if (!email.contains("@")) {
            throw new IllegalArgumentException("Invalid email address. Email must contain an '@' character.");
        }

        // Split the email at the '@' and assign parts to username and domain
        String[] parts = email.split("@", 2);
        String username = parts[0];
        String domain = parts[1];

        return new String[]{username, domain};
    }

    // A simple check function to verify the correctness of the extractEmailDetails method
    public static void main(String[] args) {
        try {
            String[] result = extractEmailDetails("xxx@gmail.com");
            System.out.println("Username: " + result[0] + ", Domain: " + result[1]);
        } catch (IllegalArgumentException e) {
            System.err.println(e.getMessage());
        }
    }
}
```

### Explanation:
1. **Package Declaration**: The Java code starts with the package declaration `package org.real.temp;`, which sets the namespace for the classes defined within it.
2. **Class Definition**: The class `Answer` is defined to encapsulate the functionality.
3. **Method Signature**: The method `extractEmailDetails` is declared as `public static String[] extractEmailDetails(String email)`. It takes a string parameter `email` and returns an array of strings representing the username and domain.
4. **Exception Handling**: If the email does not contain an '@' character, an `IllegalArgumentException` is thrown.
5. **String Manipulation**: The email is split using the `split` method, and the parts are assigned to `username` and `domain`.
6. **Return Statement**: The method returns an array containing the `username` and `domain`.
7. **Main Method**: A simple `main` method is included to demonstrate the usage of the `extractEmailDetails` method and to verify its correctness.