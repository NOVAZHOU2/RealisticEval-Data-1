Hereâ€™s the Java equivalent of the provided Python code, organized within the `org.real.temp` package and the `Answer` class:

```java
package org.real.temp;

/**
 * Extracts the username and mailbox suffix from an email address.
 */
public class Answer {

    /**
     * Extracts the username and domain from an email address.
     *
     * @param email the email address to extract details from
     * @return a String array containing the username and domain where:
     *         [0] is the part before '@'
     *         [1] is the part after '@'
     *
     * Example:
     * extractEmailDetails("xxx@gmail.com") returns ["xxx", "gmail.com"]
     */
    public static String[] extractEmailDetails(String email) {
        // Check if '@' is in the email
        if (!email.contains("@")) {
            throw new IllegalArgumentException("Invalid email address. Email must contain an '@' character.");
        }

        // Split the email at the '@' and assign parts to username and domain
        String[] parts = email.split("@", 2);
        String username = parts[0];
        String domain = parts[1];

        return new String[]{username, domain};
    }

    // A simple check function to verify the correctness of the method
    public static void main(String[] args) {
        String[] result = extractEmailDetails("xxx@gmail.com");
        System.out.println("Username: " + result[0]);
        System.out.println("Domain: " + result[1]);
    }
}
```

This Java code follows the structure and functionality of the Python code, including error handling for invalid email addresses and splitting the email address into its components. The method signature and variable names have been adjusted to fit Java conventions.