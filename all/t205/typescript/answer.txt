Here's the equivalent TypeScript code for the provided C++ function. The logic and functionality are preserved, while adapting to TypeScript conventions:

```typescript
function getCurrentDate(): string {
    // Get the current time
    const now = new Date();

    // Format the date
    const year = now.getFullYear();
    const month = String(now.getMonth() + 1).padStart(2, '0'); // Months are 0-indexed
    const day = String(now.getDate()).padStart(2, '0');

    // Return the formatted date string
    return `${year}-${month}-${day}`;
}
```

### Explanation of the Changes:
1. **Date Handling**: In TypeScript, the `Date` object is used instead of `std::tm` from C++. The `Date` object provides methods to get the current year, month, and day.
2. **String Formatting**: The `padStart` method is used to ensure that the month and day are always two digits, similar to how `std::setw` and `std::setfill` were used in C++.
3. **Template Literals**: Used template literals (`` `${}` ``) for string interpolation, which is more idiomatic in TypeScript. 

This TypeScript function will return the current date in the format "YYYY-MM-DD", just like the original C++ code.