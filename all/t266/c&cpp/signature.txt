Here is how you might write the same function in C++:

```cpp
#include <map>
#include <string>
#include <variant>

// Define types for the input and output data
using Data = std::map<std::string, std::variant<Data, std::vector<Data>, std::string, int, double>>;

/**
 * Handle nested question structures (e.g., maps, vectors, strings, ints, doubles), decode bytes to UTF8-strings, and convert numbers to integers or floating point numbers
 * @param data: question object
 * @return: after converted question
 */
Data handleNestedData(Data data) {
    // Your implementation here
}
```

This C++ version uses `std::map` and `std::variant` instead of Python's `dict` and `typing.Any`. Note that C++ does not have built-in support for encoding/decoding between byte strings and UTF-8 strings like Python does with `str.encode()` and `bytes.decode()`, so you would need to implement these yourself if they're needed. Also note that C++ does not have an equivalent to Python's `int` and `float` types, but rather uses `int` and `double`.