Sure! Below is the TypeScript code signature with the same comments:

```typescript
interface QuestionObject {
  [key: string]: any;
}

/**
 * Handles nested question structures (e.g., dictionaries, lists, and enumerations),
 * decodes bytes to UTF8-strings, and converts numbers to integers or floating point numbers.
 *
 * @param data - The question object to be handled.
 * @returns The converted question object.
 */
function handleNestedData(data: QuestionObject): QuestionObject {
  // Function implementation goes here
}
```

### Explanation:
1. **Interface Definition**: `QuestionObject` is an interface that represents a dictionary where keys are strings and values can be of any type (`any`). This mirrors the Python `Dict` type.

2. **Function Signature**:
   - `handleNestedData`: The function name remains the same.
   - `data: QuestionObject`: The parameter `data` is typed as `QuestionObject`.
   - `: QuestionObject`: The return type of the function is also `QuestionObject`.

3. **Comments**: The docstring has been preserved with the same content.