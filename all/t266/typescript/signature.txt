Certainly! Here's the equivalent TypeScript code for the given Python function:

```typescript
/**
 * Handles nested question structures (e.g., dictionaries, lists, and enumerations),
 * decodes bytes to UTF-8 strings, and converts numbers to integers or floating-point numbers.
 * 
 * @param data - The question object.
 * @returns The question after conversion.
 */
function handleNestedData(data: Record<string, any>): Record<string, any> {
    // Implementation goes here.
}
```

### Explanation:

1. **Function Signature**:
   - The Python function `handle_nested_data` with type annotations is converted to a TypeScript function `handleNestedData`.
   - The argument `data` is typed as `Record<string, any>` to represent a dictionary-like structure where keys are strings and values can be of any type.

2. **Documentation Comments**:
   - The Python docstring is converted to JSDoc-style comments (`/** */`) in TypeScript.
   - The `Args` section is represented by `@param`, and the `Returns` section is represented by `@returns`.

3. **Type Annotations**:
   - `Dict` in Python is translated to `Record<string, any>` in TypeScript to maintain flexibility similar to a dictionary.

This should provide a clear and equivalent representation in TypeScript. If you have more specific details about the implementation inside the function, feel free to include them!