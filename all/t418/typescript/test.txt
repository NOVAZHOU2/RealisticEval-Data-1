Given the Python code snippet, here's how you can write equivalent TypeScript code with Jest for testing:

First, let's define the function `lengthOfLIS` in TypeScript:

```typescript
function lengthOfLIS(nums: number[]): number {
    const dp = new Array(nums.length).fill(1);

    for (let i = 1; i < nums.length; i++) {
        for (let j = 0; j < i; j++) {
            if (nums[i] > nums[j]) {
                dp[i] = Math.max(dp[i], dp[j] + 1);
            }
        }
    }

    return Math.max(...dp);
}
```

Now, let's write the Jest test suite:

```typescript
import { lengthOfLIS } from './path-to-your-function'; // Adjust the path as needed

describe('Length of Longest Increasing Subsequence', () => {
    test('should handle basic cases', () => {
        expect(lengthOfLIS([10, 9, 2, 5, 3, 7, 101, 18])).toBe(4);
        expect(lengthOfLIS([0, 1])).toBe(2);
        expect(lengthOfLIS([0])).toBe(1);
    });

    test('should handle empty arrays', () => {
        expect(lengthOfLIS([])).toBe(0);
    });

    test('should handle arrays with no increasing sequence', () => {
        expect(lengthOfLIS([10, 9, 2, 1])).toBe(1);
    });

    test('should handle arrays with all elements equal', () => {
        expect(lengthOfLIS([1, 1, 1, 1, 1])).toBe(1);
    });

    test('should handle large inputs', () => {
        const largeInput = Array.from({ length: 1000 }, (_, index) => 1000 - index);
        expect(lengthOfLIS(largeInput)).toBe(1);
    });
});
```

### Explanation:

1. **Function Definition**:
   - The `lengthOfLIS` function takes an array of numbers and returns the length of the longest strictly increasing subsequence.
   - It uses dynamic programming to solve the problem.

2. **Test Suite**:
   - The `describe` block groups all the related tests.
   - Each `test` block represents a specific scenario or test case.
   - Jest's assertion methods (`toBe`) are used to check the correctness of the function's output.

### Running the Tests:
To run the tests, you need to have Jest installed in your project. You can add Jest to your project using npm or yarn:

```sh
npm install --save-dev jest @types/jest ts-jest
```

Then, configure your `tsconfig.json` and `jest.config.js` files appropriately to support TypeScript with Jest.

Finally, run the tests:

```sh
npx jest
```

This will execute the test suite and provide feedback on whether the `lengthOfLIS` function is working correctly.