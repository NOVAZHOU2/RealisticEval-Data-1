Hereâ€™s the equivalent TypeScript code for the provided Python function:

```typescript
import { List } from "typescript";

/**
 * Finds the length of the longest strictly increasing subsequence in an array of integers.
 * 
 * Example:
 *   Input: [10, 9, 2, 5, 3, 7, 101, 18]
 *   Output: 4
 * 
 * @param {number[]} nums - The array of integers.
 * @returns {number} The length of the longest strictly increasing subsequence.
 */
function lengthOfLIS(nums: number[]): number {
    // Implementation goes here.
}

// Example usage
console.log(lengthOfLIS([10, 9, 2, 5, 3, 7, 101, 18])); // Should log 4
```

### Notes on Conversion:
1. **Function Naming**: `length_of_LIS` was converted to `lengthOfLIS` to follow camelCase naming convention commonly used in TypeScript.
2. **Type Annotations**: `List[int]` in Python translates directly to `number[]` in TypeScript for arrays of numbers.
3. **Docstring Conversion**: The Python docstring has been converted to JSDoc style comments, which are widely used in TypeScript for documentation and type checking.
4. **Implementation**: The actual implementation of the function is not provided here, as it depends on the specific algorithm used to find the length of the longest strictly increasing subsequence.