Here is your Python function translated into JavaScript:

```javascript
function lengthOfLIS(nums) {
    if (nums.length === 0) return 0;

    let dp = new Array(nums.length).fill(1);

    for(let i = 1; i < nums.length; i++) {
        for(let j = 0; j < i; j++) {
            if(nums[i] > nums[j]) {
                dp[i] = Math.max(dp[i], dp[j] + 1);
            }
        }
    }

    return Math.max(...dp);
}
```

This JavaScript function `lengthOfLIS` works similarly to the Python function. It uses dynamic programming to calculate the length of the longest strictly increasing subsequence in the given array. The `dp` array stores the length of the longest increasing subsequence that ends with the current element.

Please note that JavaScript does not have a built-in `max` function for arrays like Python's `max()`. Therefore, we use the spread operator (`...`) to pass all elements of the `dp` array to the `Math.max()` function.