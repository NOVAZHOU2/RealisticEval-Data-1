Certainly! Here is the equivalent Java code for the provided Python function, including appropriate Javadoc comments and type translations:

```java
import java.util.Arrays;

public class Answer {

    /**
     * Finds the length of the longest strictly increasing subsequence in an array of integers.
     * 
     * Example:
     *     Input: [10, 9, 2, 5, 3, 7, 101, 18]
     *     Output: 4
     * 
     * @param nums The input array of integers.
     * @return The length of the longest strictly increasing subsequence.
     */
    public static int lengthOfLIS(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        
        int[] dp = new int[nums.length];
        Arrays.fill(dp, 1);
        
        for (int i = 1; i < nums.length; i++) {
            for (int j = 0; j < i; j++) {
                if (nums[j] < nums[i]) {
                    dp[i] = Math.max(dp[i], dp[j] + 1);
                }
            }
        }
        
        int maxLength = 0;
        for (int length : dp) {
            maxLength = Math.max(maxLength, length);
        }
        
        return maxLength;
    }

    public static void main(String[] args) {
        int[] nums = {10, 9, 2, 5, 3, 7, 101, 18};
        System.out.println("Length of Longest Increasing Subsequence: " + lengthOfLIS(nums));
    }
}
```

### Explanation:
- **Import Statement**: The `Arrays` class is imported to use the `fill` method for initializing the `dp` array.
- **Class Definition**: The class `Answer` is defined.
- **Javadoc Comments**: The method `lengthOfLIS` includes detailed Javadoc comments that describe the purpose, parameters, and return value of the method.
- **Method Signature**: The method `lengthOfLIS` takes an array of integers `nums` and returns an integer.
- **Initialization**: The dynamic programming array `dp` is initialized with all elements set to 1 using `Arrays.fill`.
- **Dynamic Programming Loop**: Two nested loops iterate over the array to fill the `dp` array based on the condition `nums[j] < nums[i]`.
- **Finding Maximum Length**: After filling the `dp` array, the maximum value in `dp` is found and returned.

This Java code preserves the original functionality and structure of the Python code while adhering to Java conventions and best practices.