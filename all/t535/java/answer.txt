Here's how you can convert the JavaScript function `compressHtml` into Java:

```java
public class HtmlCompressor {

    /**
     * Compresses an HTML string by removing unnecessary whitespace,
     * including newlines, tabs, and extra spaces,
     * while preserving the structure of the HTML.
     *
     * @param html - The input HTML string to be compressed.
     * @return String - The compressed HTML string with reduced whitespace.
     */
    public static String compressHtml(String html) {
        if (html == null || html.isEmpty()) {
            return html;
        }

        // Remove all whitespaces except for single space between tags
        html = html.replaceAll("\\s+", " ");
        
        // Remove leading and trailing spaces
        html = html.trim();
        
        return html;
    }
}
```

This Java method works similarly to your original JavaScript function. It first checks if the input string is null or empty and returns it as is if true. Then, it replaces one or more whitespace characters with a single space using the regex `\\s+`. Finally, it trims any leading or trailing spaces from the resulting string.

To use this method in your Java application, simply call `HtmlCompressor.compressHtml("Your HTML string here")`.