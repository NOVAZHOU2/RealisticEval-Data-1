Certainly! Below is the equivalent C++ code for the provided JavaScript function `compressHtml`. This C++ code uses regular expressions to remove unnecessary whitespace from an HTML string while preserving its structure.

```cpp
#include <iostream>
#include <regex>
#include <string>

/**
 * Compresses an HTML string by removing unnecessary whitespace,
 * including newlines, tabs, and extra spaces,
 * while preserving the structure of the HTML.
 *
 * @param html - The input HTML string to be compressed.
 * @return The compressed HTML string with reduced whitespace.
 */
std::string compressHtml(const std::string& html) {
    // Remove all whitespace characters except for those within tags
    std::string result;
    std::regex tagRegex(R"(<[^>]*>)");
    std::smatch match;

    auto start = html.begin();
    while (std::regex_search(start, html.end(), match, tagRegex)) {
        // Append non-tag part before the current match
        result.append(start, match.first);
        // Append the matched tag without extra whitespace
        result.append(match.str());
        start = match.suffix().first;
    }
    // Append any remaining part after the last match
    result.append(start, html.end());

    // Remove extra spaces within tags
    std::regex spaceWithinTagRegex(R"(\s+)");
    result = std::regex_replace(result, spaceWithinTagRegex, " ");

    return result;
}

int main() {
    std::string html = "<html>\n  <head>\n    <title>Example</title>\n  </head>\n  <body>\n    <p>Hello World!</p>\n  </body>\n</html>";
    std::string compressedHtml = compressHtml(html);
    std::cout << compressedHtml << std::endl;
    return 0;
}
```

### Explanation:
1. **Regular Expressions**:
   - `tagRegex` matches HTML tags.
   - `spaceWithinTagRegex` matches one or more whitespace characters within tags.

2. **Processing the HTML String**:
   - The code iterates through the HTML string using `std::regex_search`, extracting tags and non-tag parts separately.
   - Non-tag parts are appended to the result as they are.
   - Tags are also appended to the result but without extra whitespace between them.

3. **Removing Extra Spaces Within Tags**:
   - After processing all tags, the code removes any extra spaces within tags using `std::regex_replace`.

4. **Main Function**:
   - The `main` function demonstrates how to use the `compressHtml` function with an example HTML string.

This C++ code should provide similar functionality to the original JavaScript `compressHtml` function.