Sure! Here's how you can convert the given JavaScript Jest test case into a TypeScript test case using `describe`:

```typescript
import { describe, it, expect } from '@jest/globals';

// Mocking the necessary functions for demonstration purposes
const document = {
  querySelectorAll: jest.fn(),
  removeChild: jest.fn()
};

const adClass = 'ad-class';

function removeAds() {
  const ads = document.querySelectorAll(`.${adClass}`);
  ads.forEach(ad => {
    ad.parentNode?.removeChild(ad);
  });
}

describe('removeAds function', () => {
  beforeEach(() => {
    // Reset mocks before each test
    document.querySelectorAll.mockClear();
    document.removeChild.mockClear();
  });

  it('should not remove any elements if no ads are found', () => {
    document.querySelectorAll.mockReturnValue([]);
    
    removeAds();

    expect(document.querySelectorAll).toHaveBeenCalledWith(`.${adClass}`);
    expect(document.removeChild).not.toHaveBeenCalled();
  });

  it('should remove all ads with the specified class name', () => {
    const mockElements = [
      { parentNode: { removeChild: jest.fn() } },
      { parentNode: { removeChild: jest.fn() } }
    ];

    document.querySelectorAll.mockReturnValue(mockElements);

    removeAds();

    expect(document.querySelectorAll).toHaveBeenCalledWith(`.${adClass}`);
    expect(document.removeChild).toHaveBeenCalledTimes(2);
    expect(mockElements[0].parentNode.removeChild).toHaveBeenCalledWith(mockElements[0]);
    expect(mockElements[1].parentNode.removeChild).toHaveBeenCalledWith(mockElements[1]);
  });
});
```

In this TypeScript test case:
- We import the necessary Jest globals (`describe`, `it`, `expect`) at the top.
- We mock the `document` object and its methods (`querySelectorAll` and `removeChild`) to simulate the behavior during testing.
- We define the `removeAds` function similarly to your original JavaScript code.
- We use `describe` to group related tests together.
- We use `beforeEach` to reset the mocks before each test run.
- We write two test cases: one to ensure that no elements are removed if no ads are found, and another to verify that all ads are removed correctly.

This should give you a good starting point for writing TypeScript Jest tests in a structured manner.