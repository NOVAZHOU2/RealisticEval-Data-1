Sure! Below is the equivalent Java JUnit test case for the given JavaScript Jest test case. The Java code will be in the `org.real.temp` package and the class will be named `Tester`.

```java
package org.real.temp;

import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class Tester {

    @Test
    public void testRemoveAds() {
        // Set up WebDriver (assuming you have ChromeDriver installed)
        System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");
        WebDriver driver = new ChromeDriver();

        try {
            // Navigate to the web page with ads
            driver.get("http://example.com");

            // Find all list items
            List<WebElement> listItems = driver.findElements(By.tagName("li"));

            // Remove ads containing a specific class name (e.g., "ad")
            for (WebElement listItem : listItems) {
                if (listItem.getAttribute("class").contains("ad")) {
                    listItem.click(); // Assuming clicking removes the ad
                }
            }

            // Verify that no ads remain
            List<WebElement> remainingListItems = driver.findElements(By.tagName("li"));
            for (WebElement remainingListItem : remainingListItems) {
                assertTrue(!remainingListItem.getAttribute("class").contains("ad"), "Ad found: " + remainingListItem.getAttribute("class"));
            }

        } finally {
            // Close the browser
            driver.quit();
        }
    }
}
```

### Explanation:
1. **WebDriver Setup**: We set up the ChromeDriver and navigate to the web page.
2. **Finding List Items**: We find all list items (`<li>` elements).
3. **Removing Ads**: We iterate through each list item and check if it contains the specified class name (e.g., "ad"). If it does, we simulate removing the ad by clicking on it.
4. **Verification**: After removing ads, we verify that no ads remain by checking if any list item still has the "ad" class.
5. **Cleanup**: Finally, we close the browser.

Make sure you have the necessary dependencies for Selenium in your project. If you're using Maven, add the following dependency to your `pom.xml`:

```xml
<dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-java</artifactId>
    <version>4.0.0</version>
</dependency>
```

Replace `"path/to/chromedriver"` with the actual path to your ChromeDriver executable.