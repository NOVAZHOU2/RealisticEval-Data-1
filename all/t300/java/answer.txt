To convert the provided JavaScript code into Java, you would typically need to use a framework that can interact with web pages, such as Selenium. Hereâ€™s a simple Java version of your script that uses Selenium to achieve a similar functionality:

```java
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import java.util.List;

public class InstacartAdRemover {
    public static void main(String[] args) {
        System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");
        WebDriver driver = new ChromeDriver();
        driver.get("https://www.instacart.com");

        removeAds(driver);
        driver.quit();
    }

    public static void removeAds(WebDriver driver) {
        List<WebElement> listItems = driver.findElements(By.tagName("li"));

        for (WebElement item : listItems) {
            if (item.findElements(By.className("css-16lshh0")).size() > 0) {
                item.remove(); // Note: This may not work as expected in Java; consider using JavaScript execution.
            }
        }
    }
}
```

Make sure to replace `"path/to/chromedriver"` with the actual path to your ChromeDriver executable. Note that direct removal of elements might not work as it does in JavaScript, so you may need to execute JavaScript directly in the browser context if that's necessary.