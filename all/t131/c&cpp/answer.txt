Here's the equivalent C++ code to mimic the functionality of the provided JavaScript. Since C++ is not designed for direct manipulation of HTML documents, this example assumes you're working in a context like a web server with a library that can handle HTML/CSS generation. 

```cpp
#include <iostream>
#include <string>

bool cssRuleExistsForHighlight = false;

void checkCSSHighlightAndAdd() {
    // Check if the CSS rule already exists
    if (!cssRuleExistsForHighlight) {
        std::cout << "CSS rule not found, adding it now" << std::endl;

        // Create a new style element
        std::string style = R"(
        <style>
            ::highlight(search-result-highlight) {
                background-color: yellow;
                color: black;
            }
        </style>)";

        // Simulate appending to the document head (this part depends on your HTML generation context)
        std::cout << style;  // Output the style for demonstration

        // Update the flag to indicate that the CSS rule now exists
        cssRuleExistsForHighlight = true;
    }
}

int main() {
    checkCSSHighlightAndAdd();
    return 0;
}
```

### Notes:
1. **HTML/CSS Context**: C++ does not have built-in capabilities for directly manipulating the DOM or rendering HTML/CSS. The output here is simulated, assuming you're handling HTML in a server environment.
2. **String Literals**: The CSS rule is included in a raw string literal (R"()") for readability.
3. **Output Simulation**: The style element is printed to the console. In a real application, you would integrate this output into your HTML response.