To convert your JavaScript code to TypeScript, you'll want to add type annotations where applicable. Hereâ€™s the updated TypeScript code:

```typescript
/**
 * Add a CSS rule to the HTML document to highlight search results
 */
let cssRuleExistsForHighlight: boolean = false; // Define the flag variable

function checkCSSHighlightAndAdd(): void {
    // Check if the CSS rule already exists
    if (!cssRuleExistsForHighlight) {
        console.log("CSS rule not found, adding it now");

        // Create a new style element
        const style: HTMLStyleElement = document.createElement('style');
        // Set the text content of the style element with the CSS rule
        style.textContent = `
        ::highlight(search-result-highlight) {
            background-color: yellow;
            color: black;
        }`;

        // Append the style element to the document head
        document.head.appendChild(style);

        // Update the flag to indicate that the CSS rule now exists
        cssRuleExistsForHighlight = true;
    }
}
```

### Changes Made:
1. Added a type annotation for `cssRuleExistsForHighlight` to specify it as a `boolean`.
2. Added a return type annotation of `void` to the `checkCSSHighlightAndAdd` function.
3. Specified the type of the `style` variable as `HTMLStyleElement`. 

This ensures that TypeScript can enforce type safety in your code.