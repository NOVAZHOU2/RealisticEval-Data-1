Sure, here is the JavaScript code with equivalent functionality and comments:

```javascript
/**
 * Rotate the point cloud around the Y axis by a given angle.
 *
 * @param {Array<Array<number>>} pointCloud - A N x 3 array representing the 3D point cloud.
 * @param {number} rotationAngle - The angle (in radians) to rotate the point cloud.
 * @returns {Array<Array<number>>} - A N x 3 array of the rotated point cloud.
 */
function rotatePointCloud(pointCloud, rotationAngle) {
    // Create an empty array to store the rotated points
    let rotatedPointCloud = [];

    // Iterate through each point in the point cloud
    for(let i = 0; i < pointCloud.length; i++) {
        const [x, y, z] = pointCloud[i];

        // Calculate the new coordinates after rotation around the Y-axis
        const newX = Math.cos(rotationAngle) * x + Math.sin(rotationAngle) * z;
        const newY = y;
        const newZ = -Math.sin(rotationAngle) * x + Math.cos(rotationAngle) * z;

        // Push the new point into the rotated point cloud array
        rotatedPointCloud.push([newX, newY, newZ]);
    }

    return rotatedPointCloud;
}
```

This JavaScript function `rotatePointCloud` takes a 2D array representing a point cloud and a rotation angle in radians, then returns a new 2D array with the point cloud rotated around the Y-axis by that angle.