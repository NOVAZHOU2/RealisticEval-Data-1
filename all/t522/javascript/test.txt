Sure! Below is the equivalent JavaScript test case using Jest for the provided Python function `rotate_point_cloud`. Note that in JavaScript, we'll need to use a library like `mathjs` to handle matrix operations similar to NumPy's functionality.

First, make sure you have Jest and mathjs installed:

```bash
npm install --save-dev jest mathjs
```

Then, create your JavaScript test file (e.g., `testRotatePointCloud.js`) with the following content:

```javascript
const { sin, cos, multiply } = require('mathjs');

// Define the function to be tested
function rotatePointCloud(pointCloud, rotationAngle) {
    // Create a rotation matrix around the Y-axis
    const rotationMatrix = [
        [cos(rotationAngle), 0, -sin(rotationAngle)],
        [0, 1, 0],
        [sin(rotationAngle), 0, cos(rotationAngle)]
    ];

    // Apply the rotation matrix to each point in the point cloud
    return pointCloud.map(point => multiply(rotationMatrix, point));
}

// Import Jest for testing
const { describe, it, expect } = require('@jest/globals');

describe('rotatePointCloud', () => {
    it('should rotate a point cloud around the Y-axis by a given angle', () => {
        const pointCloud = [
            [1, 2, 3],
            [4, 5, 6]
        ];
        const rotationAngle = Math.PI / 2; // 90 degrees in radians

        const expectedOutput = [
            [-3, 2, 1],
            [-6, 5, 4]
        ];

        const result = rotatePointCloud(pointCloud, rotationAngle);

        expect(result).toEqual(expectedOutput);
    });
});
```

### Explanation:

1. **Importing Required Functions**: We import `sin`, `cos`, and `multiply` from the `mathjs` library to perform matrix operations.
2. **Function Definition**: The `rotatePointCloud` function creates a rotation matrix around the Y-axis using the given angle and applies this matrix to each point in the input point cloud.
3. **Testing with Jest**:
   - We use `describe` to group related tests together.
   - Inside `describe`, we use `it` to define individual test cases.
   - We use `expect` to assert that the output of our function matches the expected result.

To run the tests, add the following script to your `package.json`:

```json
"scripts": {
    "test": "jest"
}
```

Then, run the tests using:

```bash
npm test
```

This will execute the test case and verify if the `rotatePointCloud` function works correctly.