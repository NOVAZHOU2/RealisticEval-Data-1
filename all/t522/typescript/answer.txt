Sure! Below is the equivalent TypeScript code for the provided Python function:

```typescript
import { Matrix4, Vector3 } from 'three';

function rotatePointCloud(pointCloud: number[][], rotationAngle: number): number[][] {
    /**
     * Rotate the point cloud around the Y axis by a given angle.
     *
     * @param pointCloud - A N x 3 array representing the 3D point cloud.
     * @param rotationAngle - The angle (in radians) to rotate the point cloud.
     * @returns A N x 3 array of the rotated point cloud.
     */
    
    const rotationMatrix = new Matrix4().makeRotationY(rotationAngle);

    return pointCloud.map(point => {
        const vector = new Vector3(point[0], point[1], point[2]);
        vector.applyMatrix4(rotationMatrix);
        return [vector.x, vector.y, vector.z];
    });
}
```

In this TypeScript version, I've used the `three.js` library to handle matrix and vector operations. Make sure you have `three.js` installed in your project. If not, you can install it using npm or yarn:

```sh
npm install three
# or
yarn add three
```

This code defines a function `rotatePointCloud` that takes a 3D point cloud (an array of arrays where each inner array represents a point with x, y, z coordinates) and a rotation angle (in radians). It returns the rotated point cloud as an array of arrays.