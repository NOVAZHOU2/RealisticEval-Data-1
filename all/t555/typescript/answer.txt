Sure! Here is the equivalent TypeScript code:

```typescript
function quaternionToAngle(quaternion: [number, number, number, number]): number {
    // Ensure the quaternion is a valid 4-element tuple
    if (quaternion.length !== 4) {
        throw new Error("Quaternion must have 4 components (w, x, y, z)");
    }

    const [w, x, y, z] = quaternion;

    // Calculate the angle in radians
    const angle = 2 * Math.acos(w);

    return angle;
}
```

### Explanation:
1. **Function Definition**: The function `quaternionToAngle` is defined with a type signature indicating that it takes a tuple of four numbers (`[number, number, number, number]`) as input and returns a number.
2. **Error Handling**: The function checks if the length of the quaternion tuple is exactly 4. If not, it throws an error.
3. **Tuple Destructuring**: The quaternion tuple is destructured into `w`, `x`, `y`, and `z`.
4. **Calculation**: The angle is calculated using the formula `2 * Math.acos(w)`.

This TypeScript code maintains the same functionality and logic as the original Python code, with appropriate type definitions and error handling.