Certainly! Here is the equivalent JavaScript code with the function signature and JSDoc comments:

```javascript
/**
 * Extracts the second-level domain (SLD) and top-level domain (TLD) from a fully qualified domain name (FQDN).
 * 
 * @param {string} fqdn - The fully qualified domain name.
 * @returns {Array<string>} An array containing the second-level domain and top-level domain.
 */
function extractSldTld(fqdn) {
    // Split the FQDN into parts
    const parts = fqdn.split('.');

    // Check if there are enough parts to extract SLD and TLD
    if (parts.length < 2) {
        throw new Error("The provided FQDN does not contain enough parts to extract SLD and TLD.");
    }

    // Extract the SLD and TLD
    const sld = parts[parts.length - 2];  // Second to last item is the SLD
    const tld = parts[parts.length - 1];  // Last item is the TLD

    return [sld, tld];
}
```

### Explanation:
1. **JSDoc Comments**:
   - The `@param` tag is used to document the parameter `fqdn`.
   - The `@returns` tag is used to document the return type, which is an array of strings.

2. **Function Signature**:
   - The function `extractSldTld` takes a single argument `fqdn` of type `string`.

3. **Implementation**:
   - The function splits the FQDN into parts using the `split` method.
   - It checks if there are at least two parts to extract the SLD and TLD.
   - If there are not enough parts, it throws an error.
   - Otherwise, it extracts the SLD and TLD and returns them as an array.

This JavaScript code preserves the functionality, logic, and structure of the original Python code while adhering to JavaScript documentation standards using JSDoc.