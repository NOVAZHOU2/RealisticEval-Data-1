Sure! Here is the equivalent TypeScript code for your Python function:

```typescript
function extractSldTld(fqdn: string): [string, string] {
    /**
     * Extracts the second-level and top-level domain names from the fully qualified domain name FQDN and returns them.
     * @param fqdn - The fully qualified domain name.
     * @returns A tuple containing the second-level domain and top-level domain.
     */
    
    const parts = fqdn.split('.');
    
    if (parts.length < 2) {
        throw new Error('Invalid FQDN');
    }
    
    const tld = parts[parts.length - 1];
    let sld = '';
    
    if (parts.length === 3) {
        sld = `${parts[0]}.${parts[1]}`;
    } else {
        sld = parts.slice(0, parts.length - 2).join('.');
    }

    return [sld, tld];
}
```

### Explanation:
- **Function Signature**: The function `extractSldTld` takes a single parameter `fqdn` of type `string` and returns a tuple `[string, string]`.
- **Splitting the FQDN**: The FQDN is split into parts using the dot (`.`) as a delimiter.
- **Error Handling**: If the number of parts is less than 2, an error is thrown because it's not a valid FQDN.
- **Extracting TLD**: The top-level domain (TLD) is the last part of the array.
- **Extracting SLD**: 
  - If there are exactly three parts, the SLD is the first two parts joined with a dot.
  - Otherwise, the SLD is all parts except the last two joined with dots.
  
This TypeScript function should behave similarly to your original Python function.