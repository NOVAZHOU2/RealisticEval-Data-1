Sure! Here is the equivalent TypeScript code for the provided Python function:

```typescript
function extractSldTld(fqdn: string): [string, string] {
    // Split the FQDN into parts
    const parts = fqdn.split('.');

    // Check if there are enough parts to extract SLD and TLD
    if (parts.length < 2) {
        throw new Error("The provided FQDN does not contain enough parts to extract SLD and TLD.");
    }

    // Extract the SLD and TLD
    const sld = parts[parts.length - 2];  // Second to last item is the SLD
    const tld = parts[parts.length - 1];  // Last item is the TLD

    return [sld, tld];
}
```

### Explanation:
1. **Function Signature**: The function `extractSldTld` is defined with a single argument `fqdn` of type `string` and returns a tuple `[string, string]`.
2. **Splitting the FQDN**: The FQDN is split using the `split` method, which returns an array of strings.
3. **Length Check**: A check is performed to ensure there are at least two parts in the FQDN. If not, an error is thrown.
4. **Extracting SLD and TLD**: The second-to-last and last elements of the array are extracted as the SLD and TLD, respectively.
5. **Return Value**: The function returns a tuple containing the SLD and TLD.

This TypeScript code maintains the same functionality and logic as the original Python code, while adhering to TypeScript's static type system and syntax.