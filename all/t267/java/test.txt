To convert your Python `unittest` test class into a Java `TestCase` using JUnit, you'll need to follow these steps:

1. Define the method `extract_sld_tld` in a Java class.
2. Create a corresponding test class that extends `junit.framework.TestCase`.
3. Write methods in the test class to test the functionality of `extract_sld_tld`.

Here's how you can do it:

### Step 1: Implement the Method in Java

First, create a Java class named `DomainNameExtractor.java`. This class will contain the method `extractSldTld` which mirrors your Python function.

```java
package org.real.temp;

public class DomainNameExtractor {

    public static String[] extractSldTld(String fqdn) {
        // Split the FQDN by '.'
        String[] parts = fqdn.split("\\.");
        
        if (parts.length < 2) {
            throw new IllegalArgumentException("Invalid FQDN");
        }
        
        // Second-level domain (SLD)
        String sld = parts[parts.length - 2];
        
        // Top-level domain (TLD)
        String tld = parts[parts.length - 1];
        
        return new String[]{sld, tld};
    }
}
```

### Step 2: Create the Test Class

Next, create a test class named `Tester.java` in the same package. This class will extend `junit.framework.TestCase` and include test methods for the `extractSldTld` method.

```java
package org.real.temp;

import junit.framework.TestCase;

public class Tester extends TestCase {

    public void testExtractSldTld() {
        String fqdn = "example.com";
        String[] result = DomainNameExtractor.extractSldTld(fqdn);
        assertEquals("example", result[0]);
        assertEquals("com", result[1]);

        fqdn = "sub.example.co.uk";
        result = DomainNameExtractor.extractSldTld(fqdn);
        assertEquals("example", result[0]);
        assertEquals("co.uk", result[1]);
    }

    public void testInvalidFQDN() {
        try {
            DomainNameExtractor.extractSldTld("invalid");
            fail("Expected IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // Expected exception
        }
    }
}
```

### Step 3: Run the Tests

Make sure you have JUnit added to your project dependencies. If you're using Maven, add the following dependency to your `pom.xml`:

```xml
<dependency>
    <groupId>junit</groupId>
    <artifactId>junit</artifactId>
    <version>4.13.2</version>
    <scope>test</scope>
</dependency>
```

Then, you can run the tests using your IDE or build tool (e.g., Maven).

This setup should provide a basic equivalent of your Python `unittest` test class in Java using JUnit. Adjustments may be needed based on your specific requirements and environment.