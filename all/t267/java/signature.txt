Sure! Below is the equivalent Java code with the same comments:

```java
import java.util.Arrays;
import java.util.List;

/**
 * Extracts the second-level and top-level domain names from the fully qualified domain name (FQDN).
 *
 * @param fqdn The fully qualified domain name.
 * @return A list containing the second-level domain and top-level domain.
 */
public List<String> extractSldTld(String fqdn) {
    // Split the FQDN by dots
    String[] parts = fqdn.split("\\.");

    // Initialize variables for SLD and TLD
    String sld = "";
    String tld = "";

    // Check if there are enough parts to extract SLD and TLD
    if (parts.length >= 2) {
        // The last part is typically the TLD
        tld = parts[parts.length - 1];

        // Combine all parts except the last one to form the SLD
        for (int i = 0; i < parts.length - 1; i++) {
            sld += parts[i];
            if (i != parts.length - 2) {
                sld += ".";
            }
        }
    }

    // Return the SLD and TLD as a list
    return Arrays.asList(sld, tld);
}
```

This Java method `extractSldTld` takes a fully qualified domain name (FQDN) as input and returns a list containing the second-level domain (SLD) and top-level domain (TLD). The method splits the FQDN by dots, extracts the SLD and TLD based on the split parts, and then returns them in a list.