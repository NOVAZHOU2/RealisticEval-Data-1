Certainly! Below is the equivalent C++ code for the given Python function. This code extracts the second-level domain (SLD) and top-level domain (TLD) from a fully qualified domain name (FQDN). It includes necessary error handling and uses standard C++ libraries for string manipulation.

```cpp
#include <iostream>
#include <string>
#include <vector>
#include <stdexcept>

// Function to extract the second-level domain (SLD) and top-level domain (TLD) from a fully qualified domain name (FQDN).
std::pair<std::string, std::string> extract_sld_tld(const std::string& fqdn) {
    // Split the FQDN into parts
    std::vector<std::string> parts;
    size_t start = 0;
    size_t end = fqdn.find('.');
    while (end != std::string::npos) {
        parts.push_back(fqdn.substr(start, end - start));
        start = end + 1;
        end = fqdn.find('.', start);
    }
    parts.push_back(fqdn.substr(start));

    // Check if there are enough parts to extract SLD and TLD
    if (parts.size() < 2) {
        throw std::invalid_argument("The provided FQDN does not contain enough parts to extract SLD and TLD.");
    }

    // Extract the SLD and TLD
    std::string sld = parts[parts.size() - 2];  // Second to last item is the SLD
    std::string tld = parts.back();  // Last item is the TLD

    return {sld, tld};
}

int main() {
    try {
        std::string fqdn = "example.com";
        auto result = extract_sld_tld(fqdn);
        std::cout << "SLD: " << result.first << ", TLD: " << result.second << std::endl;
    } catch (const std::exception& e) {
        std::cerr << "Error: " << e.what() << std::endl;
    }

    return 0;
}
```

### Explanation:
1. **Header Files**: Include necessary header files (`<iostream>`, `<string>`, `<vector>`, `<stdexcept>`).
2. **Function Definition**: Define the `extract_sld_tld` function that takes a string (FQDN) and returns a pair of strings (SLD and TLD).
3. **Splitting the FQDN**: Use a loop to split the FQDN into parts based on the dot ('.') delimiter.
4. **Error Handling**: Throw an exception if the number of parts is less than 2.
5. **Extracting SLD and TLD**: Retrieve the SLD and TLD from the vector of parts.
6. **Returning the Result**: Return a pair of strings containing the SLD and TLD.
7. **Main Function**: Test the function with a sample FQDN and handle any exceptions thrown by the function.