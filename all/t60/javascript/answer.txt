Sure! Below is the equivalent JavaScript code for the provided Python function:

```javascript
const fs = require('fs');
const path = require('path');

function findCommonColumns(directory) {
    /**
     * Find the common columns of all CSV files in a directory and return these column names as an array.
     * @param {string} directory - Directory path
     * @returns {Array} - Array of common column names
     */

    // Read all files in the directory
    const files = fs.readdirSync(directory);

    // Filter out non-CSV files
    const csvFiles = files.filter(file => path.extname(file).toLowerCase() === '.csv');

    if (csvFiles.length === 0) {
        throw new Error('No CSV files found in the directory.');
    }

    // Function to read and parse a CSV file
    function readAndParseCsv(filePath) {
        const content = fs.readFileSync(filePath, 'utf8');
        const rows = content.split('\n').map(row => row.trim().split(','));
        return rows[0]; // Return the header row
    }

    // Get headers from the first CSV file
    let commonHeaders = readAndParseCsv(path.join(directory, csvFiles[0]));

    // Compare with other CSV files
    for (let i = 1; i < csvFiles.length; i++) {
        const currentHeaders = readAndParseCsv(path.join(directory, csvFiles[i]));
        commonHeaders = commonHeaders.filter(header => currentHeaders.includes(header));
    }

    return commonHeaders;
}

// Example usage:
// const commonColumns = findCommonColumns('/path/to/directory');
// console.log(commonColumns);
```

### Explanation:
1. **Reading Files**: The `fs.readdirSync` function reads all files in the specified directory synchronously.
2. **Filtering CSV Files**: The `.filter` method is used to keep only the CSV files (files ending with `.csv`).
3. **Reading and Parsing CSV Files**: The `readAndParseCsv` function reads the content of a CSV file, splits it into rows, and returns the header row.
4. **Finding Common Headers**: The headers from the first CSV file are stored in `commonHeaders`. Then, for each subsequent CSV file, the headers are compared, and only those that appear in both sets are kept.

This JavaScript code should work similarly to the provided Python function. Make sure you have Node.js installed to run this script.