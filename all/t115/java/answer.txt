Sure! Hereâ€™s how you could convert that JavaScript function into Java code:

```java
import java.util.Arrays;
import java.util.Comparator;

public class ArraySorter {

    public static Object[] sortByKey(Object[] array, String key) {
        Arrays.sort(array, new Comparator<Object>() {
            @Override
            public int compare(Object a, Object b) {
                String valueA = String.valueOf(getValue(a, key)).toLowerCase();
                String valueB = String.valueOf(getValue(b, key)).toLowerCase();
                
                return valueA.compareTo(valueB);
            }
        });
        return array;
    }

    private static Object getValue(Object obj, String key) {
        // Use reflection or a mapping to get the value by key from the object
        // This is a placeholder; implementation will depend on the actual object structure
        return null; // Replace with actual logic
    }
}
```

Make sure to implement the `getValue` method based on how your objects are structured. Would you like to delve into any specific part of this code?