To convert the provided JavaScript function signature to a Python function signature, including a docstring, here is the equivalent Python code:
Python Code Signature
python
from typing import List

def filter_out_even_numbers(array: List[int]) -> List[int]:
    """
    Filters out all even numbers from an array.

    Args:
        array (List[int]): The array of numbers to filter.

    Returns:
        List[int]: A new array containing only the odd numbers.
    """
    pass  # The function implementation would go here
Explanation:
Importing List: The List type from the typing module is imported to specify that the function works with lists of integers.
Function Definition:
The function name is filter_out_even_numbers, which follows Python's naming convention of using snake_case.
array: List[int] indicates that the parameter array is expected to be a list of integers.
-> List[int] specifies that the function will return a list of integers.
Docstring: A docstring describes the function's purpose, parameters, and return value, similar to the JavaScript comment block.
pass Statement: The pass statement is included to indicate that the function does not currently implement any functionality but is defined.
This Python function signature now accurately reflects the intent and structure of the original JavaScript function signature while following Python conventions.