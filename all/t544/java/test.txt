Sure, here's how you can convert the given JavaScript Jest test case into a Java JUnit test case. Below is the equivalent Java code for your `filterOutEvenNumbers` function:

```java
package org.real.temp;

import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import org.junit.jupiter.api.Test;

public class Tester {

    /**
     * Filters out all even numbers from an array.
     *
     * @param array - The array of numbers to filter.
     * @return A new list containing only the odd numbers.
     */
    public List<Integer> filterOutEvenNumbers(List<Integer> array) {
        return array.stream()
                    .filter(n -> n % 2 != 0)
                    .collect(Collectors.toList());
    }

    @Test
    public void testFilterOutEvenNumbers() {
        // Test data
        List<Integer> input = Arrays.asList(1, 2, 3, 4, 5, 6);
        List<Integer> expectedOutput = Arrays.asList(1, 3, 5);

        // Call the method under test
        List<Integer> actualOutput = filterOutEvenNumbers(input);

        // Verify the result
        assertEquals(expectedOutput, actualOutput);
    }
}
```

### Explanation:
1. **Package Declaration**: The package declaration is set to `org.real.temp`.
2. **Class Declaration**: The class name is `Tester`.
3. **Method Implementation**:
   - The `filterOutEvenNumbers` method filters out even numbers from a list and returns a new list containing only the odd numbers.
   - It uses Java Streams to filter the numbers efficiently.
4. **JUnit Test Method**:
   - The `testFilterOutEvenNumbers` method contains a test case to verify the functionality of `filterOutEvenNumbers`.
   - Test data is provided in the form of an input list.
   - The expected output is also defined.
   - The method is called with the test data.
   - The result is verified using `assertEquals` to ensure it matches the expected output.

This should give you a good starting point for converting your JavaScript Jest test cases to Java JUnit tests.