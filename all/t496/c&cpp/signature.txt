Certainly! Let's convert the given Python code into its equivalent C++ version, ensuring that the function signature, comments, and documentation adhere to C++ standards.

Here is the equivalent C++ code:

```cpp
#include <iostream>
#include <vector>
#include <cmath>

// Function to calculate factorial
long long factorial(int n) {
    if (n == 0 || n == 1) return 1;
    return n * factorial(n - 1);
}

// Function to calculate binomial coefficient (n choose k)
long long binomialCoefficient(int n, int k) {
    return factorial(n) / (factorial(k) * factorial(n - k));
}

/**
 * Generates the ith row of Pascal's Triangle.
 *
 * @param i Row index (0-indexed)
 * @return A vector representing the ith row of Pascal's Triangle
 */
std::vector<long long> pascalTriangleRow(int i) {
    std::vector<long long> row(i + 1, 0); // Initialize vector with zeros
    for (int k = 0; k <= i; ++k) {
        row[k] = binomialCoefficient(i, k);
    }
    return row;
}

int main() {
    int rowIndex = 5; // Example row index
    std::vector<long long> row = pascalTriangleRow(rowIndex);

    // Print the row
    for (const auto& element : row) {
        std::cout << element << " ";
    }
    std::cout << std::endl;

    return 0;
}
```

### Explanation:
1. **Headers**:
   - `<iostream>`: For input/output operations.
   - `<vector>`: For using vectors.
   - `<cmath>`: For using mathematical functions.

2. **Factorial Function**:
   - `factorial`: Calculates the factorial of a number recursively.

3. **Binomial Coefficient Function**:
   - `binomialCoefficient`: Uses the factorial function to calculate the binomial coefficient (n choose k).

4. **Pascal's Triangle Row Function**:
   - `pascalTriangleRow`: Generates the ith row of Pascal's Triangle by calculating the binomial coefficients for each position in the row.

5. **Documentation Comments**:
   - Multi-line comments (`/* ... */`) are used for the function documentation.
   - Single-line comments (`//`) are used for inline comments.

6. **Main Function**:
   - Demonstrates how to use the `pascalTriangleRow` function and prints the resulting row.

This C++ code preserves the original functionality and structure of the Python code while adhering to C++ standards and practices.