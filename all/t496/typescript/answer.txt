Sure! Here is the equivalent TypeScript code for the provided Python function:

```typescript
import { comb } from 'mathjs';

function pascalTriangleRow(i: number): number[] {
    const row = Array.from({ length: i + 1 }, (_, k) => comb(i, k));
    return row;
}

// Example usage
console.log(pascalTriangleRow(5)); // Output: [1, 5, 10, 10, 5, 1]
```

### Explanation:
1. **Importing `comb`**:
   - In TypeScript, you need to import the `comb` function from a library like `mathjs`. This library provides a wide range of mathematical functions.
   
2. **Function Definition**:
   - The function `pascalTriangleRow` takes an integer `i` as input and returns an array of numbers representing the `i`th row of Pascal's Triangle.

3. **Generating the Row**:
   - The `Array.from` method is used to create an array with a length of `i + 1`.
   - The second argument of `Array.from` is a mapping function that computes each element using the `comb` function.

4. **Example Usage**:
   - An example call to `pascalTriangleRow(5)` demonstrates how to use the function and prints the output.

This TypeScript code maintains the same functionality and logic as the original Python code, while adapting to TypeScript's static type system and syntax.