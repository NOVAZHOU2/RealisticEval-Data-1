Here is how you can convert your Python unittest test class to TypeScript using Jest:

```typescript
import { describe, it, expect } from '@jest/globals';

describe('pascalTriangleRow', () => {
  it('should return the correct row for index 0', () => {
    const result = pascalTriangleRow(0);
    expect(result).toEqual([1]);
  });

  it('should return the correct row for index 1', () => {
    const result = pascalTriangleRow(1);
    expect(result).toEqual([1, 1]);
  });

  it('should return the correct row for index 2', () => {
    const result = pascalTriangleRow(2);
    expect(result).toEqual([1, 2, 1]);
  });
});

function pascalTriangleRow(i: number): number[] {
  if (i === 0) return [1];
  
  let prevRow = pascalTriangleRow(i - 1);
  let currentRow = [1];

  for(let j = 1; j < prevRow.length; j++) {
    currentRow.push(prevRow[j] + prevRow[j - 1]);
  }

  currentRow.push(1);

  return currentRow;
}
```

This TypeScript code uses Jest's `describe`, `it` and `expect` functions to define tests for the `pascalTriangleRow` function. The `pascalTriangleRow` function is implemented in TypeScript and behaves the same way as in your original Python code. It generates the nth row of Pascal's Triangle.