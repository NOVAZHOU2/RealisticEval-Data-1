Here's the equivalent TypeScript function signature for the provided C++ code, along with the adapted comments:

```typescript
/**
 * @brief Calculates the Gaussian weight based on the difference in intensity and a color standard deviation.
 *
 * The Gaussian weight is calculated using the formula:
 * weight = exp(- (intensityDiff^2) / (2 * sigmaColor^2))
 *
 * @param intensityDiff The difference in intensity, which is used to compute the weight.
 * @param sigmaColor The standard deviation for the color, affecting the spread of the weight.
 * @returns The Gaussian weight as a number.
 */
function gaussianWeight(intensityDiff: number, sigmaColor: number): number {
    // Function implementation goes here
}
```

### Key Changes:
1. **Function Declaration**: Converted from C++ `inline float` to TypeScript `function` with return type `number`.
2. **Parameter Naming**: Changed `intensity_diff` to `intensityDiff` and `sigma_color` to `sigmaColor` to follow camelCase conventions.
3. **Comment Style**: Retained the original comments, but adjusted parameter names in the comments to match the new names in TypeScript. 
4. **Removed Memory Management**: No need for memory management in TypeScript, as it uses garbage collection.

Feel free to implement the function logic within the body as needed!