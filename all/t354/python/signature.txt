Here's the converted code signature from C++ to Python, with the comments changed to Python style:
python
import math  # Include the math library for the exp function

def gaussian_weight(intensity_diff: float, sigma_color: float) -> float:
    """
    @brief Calculates the Gaussian weight based on the difference in intensity and a color standard deviation.

    The Gaussian weight is calculated using the formula:
    weight = exp(- (intensity_diff^2) / (2 * sigma_color^2))

    :param intensity_diff: The difference in intensity, which is used to compute the weight.
    :param sigma_color: The standard deviation for the color, affecting the spread of the weight.
    :return: The Gaussian weight as a float.
    """
    pass  # Function implementation will go here
Explanation:
Import Statement: The math module is imported to utilize mathematical functions like exp, even though the implementation is currently incomplete.
Function Definition: The function is named gaussian_weight, following Python's naming conventions (snake_case).
Type Hints: The parameters intensity_diff and sigma_color are annotated with their expected types (float), and the return type is specified as float.
Docstring: The docstring contains:
A brief description of the function (@brief).
The formula used to calculate the Gaussian weight.
Descriptions for the parameters and return value, utilizing Python's docstring format.
Function Body: The function body contains a pass statement, indicating that the actual implementation will be provided later.
This structure prepares the function for implementation while adhering to Python's coding style and conventions.