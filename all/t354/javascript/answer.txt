Hereâ€™s the equivalent JavaScript code that translates the provided C++ function into JavaScript while maintaining the same logic and functionality:

```javascript
/**
 * @brief Calculates the Gaussian weight based on the difference in intensity and a color standard deviation.
 *
 * The Gaussian weight is calculated using the formula:
 * weight = exp(- (intensity_diff^2) / (2 * sigma_color^2))
 *
 * @param {number} intensityDiff The difference in intensity, which is used to compute the weight.
 * @param {number} sigmaColor The standard deviation for the color, affecting the spread of the weight.
 * @return {number} The Gaussian weight.
 */
function gaussianWeight(intensityDiff, sigmaColor) {
    // Calculate the squared intensity difference
    const squaredDiff = intensityDiff * intensityDiff;

    // Calculate the denominator using sigmaColor squared
    const denominator = 2 * sigmaColor * sigmaColor;

    // Calculate and return the Gaussian weight
    return Math.exp(-squaredDiff / denominator);
}
```

### Changes Made:
1. **Function Declaration**: Used `function` keyword instead of `inline float` for the function declaration.
2. **Parameter Naming**: Used camelCase for parameter names to follow JavaScript conventions.
3. **Math Library**: Used `Math.exp()` instead of `exp()` since `exp` is a method of the `Math` object in JavaScript.
4. **Type Annotations**: Added JSDoc comments for parameter and return types to improve code readability and documentation.

This JavaScript function should work the same way as the original C++ function.