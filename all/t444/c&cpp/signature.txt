Certainly! Below is the equivalent C++ function signature for your Python function `format_comment`, keeping the comments intact:

```cpp
/**
 * Formats a string into a commented block with specified maximum line length.
 *
 * @param string The input string to format.
 * @param max_length Maximum length of each line in the output.
 * @return A formatted string with each line prefixed by '# ' and not exceeding the specified max_length.
 */
std::string format_comment(const std::string& string, int max_length = 60);
```

### Explanation:
- **Function Name:** `format_comment`
- **Parameters:**
  - `const std::string& string`: The input string to format.
  - `int max_length = 60`: Maximum length of each line in the output. Default value is 60.
- **Return Type:** `std::string`: A formatted string with each line prefixed by `# ` and not exceeding the specified `max_length`.

This C++ function signature follows the same logic and structure as your original Python function, ensuring that it can be used in a C++ context to achieve similar functionality.