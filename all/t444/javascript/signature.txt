Certainly! Here is the equivalent JavaScript function with JSDoc comments that preserve the purpose and structure of the Python code:

```javascript
/**
 * Formats a string into a commented block with a specified maximum line length.
 *
 * @param {string} string - The input string to format.
 * @param {number} [max_length=60] - Maximum length of each line in the output.
 * @returns {string} A formatted string with each line prefixed by '# ' and not exceeding the specified max_length.
 */
function formatComment(string, max_length = 60) {
    // Split the string into lines
    const lines = string.split('\n');

    // Initialize an array to store the formatted lines
    const formattedLines = [];

    // Iterate through the lines
    for (const line of lines) {
        // Split the line into words
        const words = line.split(' ');

        // Initialize a variable to keep track of the current line
        let currentLine = '';

        // Iterate through the words
        for (const word of words) {
            // If the current line plus the next word would be too long,
            // append the current line to the list of formatted lines and start a new line
            if (currentLine.length + word.length > max_length) {
                formattedLines.push(currentLine);
                currentLine = '';
            }

            // If the current line is empty, add the word to the line
            // Otherwise, add a space and the word to the line
            if (currentLine === '') {
                currentLine = word;
            } else {
                currentLine += ' ' + word;
            }
        }

        // Add the remaining line to the list of formatted lines
        formattedLines.push(currentLine);
    }

    // Return the formatted comment
    return formattedLines.map(line => '# ' + line).join('\n');
}
```

### Explanation:
1. **JSDoc Comments**:
   - The JSDoc comments provide detailed documentation for the function parameters and return value.
   - The `@param` tags describe the parameters `string` and `max_length`.
   - The `@returns` tag describes the return value of the function.

2. **Function Signature**:
   - The function `formatComment` takes two parameters: `string` and `max_length` with a default value of 60.

3. **Implementation**:
   - The function splits the input string into lines and processes each line to ensure it does not exceed the specified maximum length.
   - Each line is prefixed with `# ` before being joined and returned as the final formatted string.

This JavaScript function closely mirrors the functionality and structure of the original Python function.