Sure! Here's how you can convert the JavaScript function to TypeScript:

```typescript
/**
 * Calculates the discount percentage based on the given price and the actual price paid.
 *
 * @param {number} originalPrice - The original price of the item.
 * @param {number} actualPrice - The actual price paid for the item.
 * @returns {number} - The discount percentage, rounded to two decimal places.
 */
function calculateDiscount(originalPrice: number, actualPrice: number): number {
    const discount = ((originalPrice - actualPrice) / originalPrice) * 100;
    return parseFloat(discount.toFixed(2));
}
```

In this TypeScript version:
- I added type annotations for the parameters `originalPrice` and `actualPrice`.
- I also added a return type annotation for the function, which is `number`.
- The calculation of the discount remains the same.
- The `toFixed(2)` method is used to round the result to two decimal places, and `parseFloat` ensures that the result is treated as a floating-point number.