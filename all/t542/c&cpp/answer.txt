Sure! Here's how you can convert the JavaScript function `calculateDiscount` to C++:

```cpp
#include <iostream>
#include <iomanip> // For std::setprecision

/**
 * Calculates the discount percentage based on the given price and the actual price paid.
 *
 * @param originalPrice - The original price of the item.
 * @param actualPrice - The actual price paid for the item.
 * @return The discount percentage, rounded to two decimal places.
 */
double calculateDiscount(double originalPrice, double actualPrice) {
    if (originalPrice == 0 || actualPrice > originalPrice) {
        return 0; // Invalid input or no discount possible
    }

    double discount = ((originalPrice - actualPrice) / originalPrice) * 100;
    return std::round(discount * 100) / 100; // Round to two decimal places
}

int main() {
    // Example usage:
    double originalPrice = 100.0;
    double actualPrice = 80.0;

    double discount = calculateDiscount(originalPrice, actualPrice);
    std::cout << "Discount: " << std::fixed << std::setprecision(2) << discount << "%" << std::endl;

    return 0;
}
```

### Explanation:
1. **Include Headers**: We include `<iostream>` for input/output operations and `<iomanip>` for formatting output.
2. **Function Definition**: The function `calculateDiscount` takes two `double` parameters (`originalPrice` and `actualPrice`) and returns a `double`.
3. **Input Validation**: Check if `originalPrice` is zero or `actualPrice` is greater than `originalPrice`. If so, return `0` because it doesn't make sense to have a negative or invalid discount.
4. **Calculate Discount**: Compute the discount percentage using the formula `((originalPrice - actualPrice) / originalPrice) * 100`.
5. **Rounding**: Use `std::round` to round the result to two decimal places.
6. **Main Function**: Demonstrate how to use the `calculateDiscount` function with an example.

This C++ code should work similarly to your original JavaScript function.