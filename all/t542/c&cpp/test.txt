Hereâ€™s how you can translate the provided Jest test cases into Catch2 test cases in C++:

```cpp
#define CATCH_CONFIG_MAIN
#include <catch2/catch.hpp>

double calculateDiscount(double originalPrice, double actualPrice);

TEST_CASE("calculateDiscount", "[discount]") {
    SECTION("should return 25.00% discount for original price of 100 and actual price of 75") {
        REQUIRE(calculateDiscount(100, 75) == Approx(25.00).margin(0.01));
    }

    SECTION("should return 0.00% discount for original price of 50 and actual price of 50") {
        REQUIRE(calculateDiscount(50, 50) == Approx(0.00).margin(0.01));
    }

    SECTION("should return 100.00% discount for original price of 100 and actual price of 0") {
        REQUIRE(calculateDiscount(100, 0) == Approx(100.00).margin(0.01));
    }

    SECTION("should return 50.00% discount for original price of 200 and actual price of 100") {
        REQUIRE(calculateDiscount(200, 100) == Approx(50.00).margin(0.01));
    }
}
```

### Explanation:
- Each `SECTION` defines a separate test case.
- The `REQUIRE` statement checks that the output of `calculateDiscount` matches the expected value, allowing for a small margin of error.
- The `Approx` function is used for floating-point comparison.