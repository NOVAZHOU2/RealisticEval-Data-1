Certainly! Below is the equivalent TypeScript test class using Jest, ensuring that the functionality and logic of the tests are preserved. The provided Python unittest class will be converted to a Jest test suite with appropriate assertions.

### TypeScript Code

First, let's define the `intersectHorizontally` function in TypeScript:

```typescript
/**
 * Determine if two rectangles intersect horizontally.
 *
 * Each rectangle is defined by a tuple [x1, y1, x2, y2], where:
 * - [x1, y1] are the coordinates of the bottom-left corner.
 * - [x2, y2] are the coordinates of the top-right corner.
 *
 * @param rect1 - The first rectangle defined by [x1, y1, x2, y2].
 * @param rect2 - The second rectangle defined by [x1, y1, x2, y2].
 * @returns {boolean} True if the rectangles intersect horizontally, False otherwise.
 */
function intersectHorizontally(rect1: [number, number, number, number], rect2: [number, number, number, number]): boolean {
    return !(rect1[2] < rect2[0] || rect2[2] < rect1[0]);
}

export default intersectHorizontally;
```

### Jest Test Suite

Now, let's write the Jest test suite:

```typescript
import intersectHorizontally from './path/to/intersectHorizontally'; // Adjust the import path as needed

describe('intersectHorizontally', () => {
    it('test with overlapping rectangles', () => {
        const rect1 = [0, 0, 2, 2];
        const rect2 = [1, 1, 3, 3];
        expect(intersectHorizontally(rect1, rect2)).toBe(true);
    });

    it('test with rectangles touching at a point (not overlapping)', () => {
        const rect1 = [0, 0, 1, 1];
        const rect2 = [1, 1, 2, 2];
        expect(intersectHorizontally(rect1, rect2)).toBe(true);
    });

    it('test with adjacent rectangles (no overlap)', () => {
        const rect1 = [0, 0, 2, 2];
        const rect2 = [2, 0, 3, 3];
        expect(intersectHorizontally(rect1, rect2)).toBe(true);
    });

    it('test with one rectangle fully inside another', () => {
        const rect1 = [1, 1, 4, 4];
        const rect2 = [2, 2, 3, 3];
        expect(intersectHorizontally(rect1, rect2)).toBe(true);
    });

    it('test with overlapping rectangles', () => {
        const rect1 = [-1, -1, 1, 1];
        const rect2 = [0, 0, 2, 2];
        expect(intersectHorizontally(rect1, rect2)).toBe(true);
    });
});
```

### Explanation:
1. **Import Statement**: The `intersectHorizontally` function is imported from its module.
2. **Test Suite**: The `describe` block defines the test suite named `intersectHorizontally`.
3. **Test Cases**: Each `it` block represents a specific test case.
   - The test descriptions are provided as strings within the `it` blocks.
   - The `expect` function is used to assert the expected behavior of the `intersectHorizontally` function.
   - The `toBe` matcher is used to check if the function returns the expected boolean value (`true`).

This setup ensures that the tests are structured and documented clearly, and the assertions are appropriately mapped from Python's `unittest` to Jest's assertion library.