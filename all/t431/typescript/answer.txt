Certainly! Below is the equivalent TypeScript code for the provided Python function `intersect_horizontally`. This includes proper type definitions and follows TypeScript's static type system:

```typescript
/**
 * Determine if two rectangles intersect horizontally.
 *
 * Each rectangle is defined by a tuple [x1, y1, x2, y2], where:
 * - [x1, y1] are the coordinates of the bottom-left corner.
 * - [x2, y2] are the coordinates of the top-right corner.
 *
 * @param rect1 - The first rectangle defined by [x1, y1, x2, y2].
 * @param rect2 - The second rectangle defined by [x1, y1, x2, y2].
 * @returns True if the rectangles intersect horizontally, False otherwise.
 */
function intersectHorizontally(rect1: [number, number, number, number], rect2: [number, number, number, number]): boolean {
    return !(rect1[2] < rect2[0] || rect2[2] < rect1[0]);
}
```

### Explanation:
- **Type Definitions**: The function parameters `rect1` and `rect2` are typed as tuples `[number, number, number, number]` to represent the coordinates of the rectangles.
- **Return Type**: The function returns a boolean value (`true` or `false`).
- **Function Name**: The function name has been changed from `intersect_horizontally` to `intersectHorizontally` to follow the camelCase naming convention commonly used in TypeScript.
- **Logic**: The logic remains the same, checking if the rectangles intersect horizontally by comparing their x-coordinates.