Here's how you can convert your Python function into TypeScript:

```typescript
function intersectHorizontally(rect1: [number, number, number, number], rect2: [number, number, number, number]): boolean {
    /*
    Determine if two rectangles intersect horizontally.

    Each rectangle is defined by an array [x1, y1, x2, y2], where:
    - [x1, y1] are the coordinates of the bottom-left corner.
    - [x2, y2] are the coordinates of the top-right corner.

    Args:
        rect1 (Array<number>): The first rectangle defined by [x1, y1, x2, y2].
        rect2 (Array<number>): The second rectangle defined by [x1, y1, x2, y2].

    Returns:
        boolean: True if the rectangles intersect horizontally, false otherwise.
    */
    
    // Calculate the horizontal overlap between the rectangles
    const leftmost = Math.max(rect1[0], rect2[0]);
    const rightmost = Math.min(rect1[2], rect2[2]);

    return leftmost < rightmost;
}
```

In this TypeScript version, we use arrays instead of tuples for defining the rectangles because TypeScript does not have built-in support for tuples like Python does. Also, note that in JavaScript/TypeScript, the `max` and `min` functions work with numbers, so there's no need to import any additional libraries.