Certainly! Here is the equivalent TypeScript code for the provided Python function, including appropriate JSDoc-style documentation comments:

```typescript
/**
 * Determine if two rectangles intersect horizontally.
 *
 * Each rectangle is defined by a tuple [x1, y1, x2, y2], where:
 * - [x1, y1] are the coordinates of the bottom-left corner.
 * - [x2, y2] are the coordinates of the top-right corner.
 *
 * @param rect1 - The first rectangle defined by [x1, y1, x2, y2].
 * @param rect2 - The second rectangle defined by [x1, y1, x2, y2].
 * @returns {boolean} True if the rectangles intersect horizontally, False otherwise.
 */
function intersectHorizontally(rect1: [number, number, number, number], rect2: [number, number, number, number]): boolean {
    return !(rect1[2] < rect2[0] || rect2[2] < rect1[0]);
}
```

### Explanation:
- **Function Signature**: The function `intersect_horizontally` is renamed to `intersectHorizontally` to follow the camelCase naming convention in TypeScript.
- **Type Annotations**: The parameters `rect1` and `rect2` are typed as tuples `[number, number, number, number]` to represent the coordinates of the rectangles.
- **Return Type**: The function returns a boolean value (`boolean`).
- **JSDoc Comments**: The Python docstring is converted to JSDoc-style comments, providing detailed documentation for the function, parameters, and return type.

This conversion ensures that the functionality, structure, and documentation are preserved while adapting to TypeScript's syntax and conventions.