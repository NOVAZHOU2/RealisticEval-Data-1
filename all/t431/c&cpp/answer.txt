Here's how you can implement the same functionality in C and C++:

**C Code**

```c
#include <stdbool.h>

bool intersectHorizontally(int rect1[4], int rect2[4]) {
    return !(rect1[2] <= rect2[0] || // rect1 is to the left of rect2
             rect2[2] <= rect1[0]);   // rect2 is to the left of rect1
}
```

**C++ Code**

```cpp
#include <array>
#include <algorithm>

bool intersectHorizontally(const std::array<int, 4>& rect1, const std::array<int, 4>& rect2) {
    return !((rect1[2] <= rect2[0]) || // rect1 is to the left of rect2
             (rect2[2] <= rect1[0]));   // rect2 is to the left of rect1
}
```

In both versions, `rect1` and `rect2` are arrays representing the rectangles with their corners' coordinates `(x1, y1, x2, y2)`. The function returns `true` if the rectangles intersect horizontally and `false` otherwise. This works by checking whether one rectangle is entirely to the left of the other. If neither condition is true, the rectangles must overlap horizontally at some point.