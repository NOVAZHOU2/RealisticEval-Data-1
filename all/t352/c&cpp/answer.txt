Sure! Hereâ€™s the equivalent C++ code for your Python function:

```cpp
#include <string>
#include <vector>

std::vector<uint8_t> hex_string_to_byte_array(const std::string& hex_str) {
    std::string hex = hex_str;
    
    // If the length of the hex string is odd, prepend a '0'
    if (hex.length() % 2 == 1) {
        hex = "0" + hex;
    }

    size_t length = hex.length();
    std::vector<uint8_t> data(length / 2);

    for (size_t i = 0; i < length; i += 2) {
        // Calculate the byte value from two hex characters
        data[i / 2] = (static_cast<uint8_t>(std::stoi(hex.substr(i, 1), nullptr, 16)) << 4) +
                      static_cast<uint8_t>(std::stoi(hex.substr(i + 1, 1), nullptr, 16));
    }

    return data;  // Return the vector of bytes
}
```

This C++ function maintains the same logic and structure as the Python code.