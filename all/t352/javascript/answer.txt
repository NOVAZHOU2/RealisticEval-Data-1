Hereâ€™s the equivalent JavaScript code for the provided Python function:

```javascript
function hexStringToByteArray(hexStr) {
    // If the length of the hex string is odd, prepend a '0'
    if (hexStr.length % 2 === 1) {
        hexStr = "0" + hexStr;
    }

    // Convert hex string to bytes
    const length = hexStr.length;
    const data = new Uint8Array(length / 2);

    for (let i = 0; i < length; i += 2) {
        // Calculate the byte value from two hex characters
        data[i / 2] = (parseInt(hexStr[i], 16) << 4) + parseInt(hexStr[i + 1], 16);
    }

    return data; // Return Uint8Array
}
```

### Key Differences:
- **Data Type**: In JavaScript, we use `Uint8Array` to store byte values, which is similar to Python's `bytearray`.
- **Function Syntax**: JavaScript uses `function` keyword, while Python uses `def`.
- **String Length**: Accessing the length of a string is done with `.length` in both languages.
- **Integer Parsing**: `parseInt(hexStr[i], 16)` is used in JavaScript to convert a hex character to an integer.
- **Return Type**: The function returns a `Uint8Array`, which is the closest equivalent to Python's `bytes` in terms of representing binary data.