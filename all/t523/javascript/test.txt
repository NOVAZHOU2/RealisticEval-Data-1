Sure, here is how you can convert your Python unittest test class into a Jest test case using JavaScript:

```javascript
const { translatePointCloud } = require('./translatePointCloud'); // Adjust the path accordingly

describe('translatePointCloud', () => {
  it('should translate a point cloud correctly', () => {
    const pointCloud = [
      [1, 2, 3],
      [4, 5, 6],
      [7, 8, 9]
    ];

    const translationVector = [10, 20, 30];

    const expectedResult = [
      [11, 22, 33],
      [14, 25, 36],
      [17, 28, 39]
    ];

    const result = translatePointCloud(pointCloud, translationVector);

    expect(result).toEqual(expectedResult);
  });
});
```

In this example, we're assuming that `translatePointCloud` function is exported from a file named `translatePointCloud.js`. Adjust the path accordingly if it's in a different location. The `it` function is used for defining individual test cases within the `describe` block. The `expect` function is used to assert the expected outcome against the actual result.