Here is how you can write the same Python code in JavaScript:

```javascript
/**
 * 
 * @param {number} n - The number of orthogonal polynomials to generate
 * @param {Object} quadratureRule - An object containing x (nodes) and w (weights) for the quadrature.
 * @returns {Array}
 */
function lanczos(n, quadratureRule) {
  // implementation goes here
}
```

Please note that unlike Python, JavaScript does not support type annotations like `np.ndarray` or `Tuple`. Therefore, it's impossible to maintain exact type information in JavaScript. However, you can use JSDoc style comments (`/** ... */`) to document your functions' parameters and return types. 

Also, keep in mind that JavaScript uses `===` instead of `==` for strict equality comparison, and curly braces `{}` to define objects, arrays, and control structures. Also, JavaScript does not have classes, so we do not need to declare a class like `QuadratureRule` in Python. Instead, we pass an object to the `lanczos` function.

For more advanced features such as array manipulation similar to NumPy, you might want to consider using libraries like Lodash or Underscore.js, which provide utilities for working with JavaScript data structures.