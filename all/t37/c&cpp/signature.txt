Sure, here is the equivalent C++ code signature with the same comments:

```cpp
#include <vector>
#include <array>

struct QuadratureRule {
    std::vector<double> x;
    std::vector<double> w;
};

std::tuple<std::vector<double>, std::vector<double>, std::vector<double>, QuadratureRule> lanczos(int n, const QuadratureRule& quadrature_rule);
```

Explanation:
- The `QuadratureRule` struct in C++ uses `std::vector<double>` instead of `np.ndarray` to store nodes (`x`) and weights (`w`).
- The `lanczos` function returns a `std::tuple` containing four elements, similar to the Python `Tuple[np.ndarray, np.ndarray, np.ndarray, QuadratureRule]`.
- The function parameters remain the same: an integer `n` and a constant reference to a `QuadratureRule`.