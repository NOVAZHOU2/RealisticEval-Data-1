Sure! Hereâ€™s how you can convert the given Python unittest test case to a JavaScript test case using Jest:

```javascript
const { Logger } = require('./path/to/logger'); // Adjust the path as necessary

describe('Logger', () => {
    let logger;

    beforeEach(() => {
        logger = new Logger('testLogger', 'debug');
    });

    test('should initialize with correct name and level', () => {
        expect(logger.name).toBe('testLogger');
        expect(logger.level).toBe('debug');
    });

    test('should log a message with the given level', () => {
        const message = 'This is a test message';
        logger.log('info', message);
        // Assuming you have a way to verify the log output
        // For example, you could use a mock function to check if it was called
        expect(logger.log).toHaveBeenCalledWith('info', message);
    });
});
```

Make sure to adjust the imports and any internal implementations to match your actual `Logger` class definition and its methods.