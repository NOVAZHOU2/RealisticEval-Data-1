Here's how you can translate the Python code into TypeScript:

```typescript
import * as winston from 'winston';

interface ILogger {
    log(level: string, message: string): void;
}

class Logger implements ILogger {
    private logger: winston.Logger;

    constructor(name: string, level: string = 'debug') {
        this.logger = winston.createLogger({
            level,
            format: winston.format.json(),
            transports: [
                new winston.transports.Console()
            ]
        });
    }

    public log(level: string, message: string) {
        this.logger.log(level, message);
    }
}
```

This code uses Winston, a popular logging library in Node.js/TypeScript. It defines an interface `ILogger` that specifies the `log` method. The `Logger` class implements this interface and provides functionality to create a logger instance with a specified name and level, and to log messages at different levels.