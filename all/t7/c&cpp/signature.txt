Here's the equivalent C++ code signature with comments converted to C++ style documentation:

```cpp
#include <string>
#include <iostream>
#include <stdexcept>

class Logger {
public:
    /**
     * Initializes a new logger instance.
     *
     * @param name Name of the logger, typically __name__ to reference the module name.
     * @param level Logging level, default is DEBUG.
     */
    Logger(const std::string& name, int level = DEBUG);

    /**
     * Logs a message with the given level.
     *
     * @param level Logging level for the message (e.g., INFO).
     * @param message Log message.
     */
    void log(int level, const std::string& message);

private:
    std::string name_;
    int level_;
    static const int DEBUG = 0; // Example level for DEBUG
    static const int INFO = 1;   // Example level for INFO
    // Add more logging levels as needed
};
```

This C++ version preserves the intent and structure of the original Python code while adapting to C++ conventions and syntax.