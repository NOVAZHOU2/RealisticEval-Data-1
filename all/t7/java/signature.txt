Certainly! Below is the equivalent Java code for the provided Python class, including appropriate Javadoc comments and Java conventions:

```java
package org.real.temp;

import java.util.logging.Logger;
import java.util.logging.Level;
import java.util.logging.ConsoleHandler;
import java.util.logging.SimpleFormatter;

/**
 * A class that provides logging functionality.
 */
public class Logger {

    private final Logger javaLogger;

    /**
     * Initializes a new logger instance.
     *
     * @param name  the name of the logger, typically the module name
     * @param level the logging level, default is DEBUG
     */
    public Logger(String name, Level level) {
        // Initialize the logger
        this.javaLogger = Logger.getLogger(name);
        this.javaLogger.setLevel(level);

        // Create a console handler and set its level
        ConsoleHandler consoleHandler = new ConsoleHandler();
        consoleHandler.setLevel(level);

        // Create a formatter and set it to the handler
        SimpleFormatter formatter = new SimpleFormatter();
        consoleHandler.setFormatter(formatter);

        // Add the handler to the logger
        this.javaLogger.addHandler(consoleHandler);
    }

    /**
     * Logs a message with the given level.
     *
     * @param level   the logging level for the message (e.g., Level.INFO)
     * @param message the log message
     */
    public void log(Level level, String message) {
        switch (level) {
            case SEVERE:
                this.javaLogger.severe(message);
                break;
            case WARNING:
                this.javaLogger.warning(message);
                break;
            case INFO:
                this.javaLogger.info(message);
                break;
            case CONFIG:
                this.javaLogger.config(message);
                break;
            case FINE:
            case FINER:
            case FINEST:
                this.javaLogger.fine(message);
                break;
            default:
                this.javaLogger.info(message); // Default to info if level is not recognized
        }
    }

    public static void main(String[] args) {
        // Example usage
        Logger logger = new Logger("ExampleLogger", Level.ALL);
        logger.log(Level.INFO, "This is an info message.");
        logger.log(Level.SEVERE, "This is a severe message.");
    }
}
```

### Explanation:
1. **Class Definition**:
   - The `Logger` class is defined with appropriate Javadoc comments.

2. **Constructor**:
   - The constructor initializes a `java.util.logging.Logger` object with the provided name and level.
   - It sets up a `ConsoleHandler` and a `SimpleFormatter` to format the log messages.

3. **Log Method**:
   - The `log` method logs a message with the given level using a switch statement to determine the appropriate logging method.

4. **Javadoc Comments**:
   - Javadoc comments are used to document the constructor and the `log` method, providing clear descriptions of parameters and functionality.

5. **Main Method**:
   - An example usage is provided in the `main` method to demonstrate how to create an instance of `Logger` and log messages at different levels.

This Java code preserves the functionality and structure of the original Python code while adhering to Java's syntax and conventions.