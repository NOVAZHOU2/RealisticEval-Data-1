Here's how you can write the same function in TypeScript:

```typescript
function isStrongPassword(password: string): boolean {
    /**
     * Check if the provided password is strong.
     *
     * A strong password must satisfy the following criteria:
     * - At least one lowercase letter
     * - At least one uppercase letter
     * - At least one number
     * - At least 8 characters long
     *
     * @param {string} password - The password to check.
     * @returns {boolean} True if the password is strong, False otherwise.
     */

    const hasLowercase = /[a-z]/.test(password);
    const hasUppercase = /[A-Z]/.test(password);
    const hasNumber = /\d/.test(password);
    const lengthCheck = password.length >= 8;

    return hasLowercase && hasUppercase && hasNumber && lengthCheck;
}
```

In this TypeScript version of your Python code, we use regular expressions (`RegExp`) to check for the presence of at least one lowercase letter, one uppercase letter, and one digit. We also check if the password is at least 8 characters long using the `length` property of strings. The function returns `true` if all these conditions are met, and `false` otherwise.