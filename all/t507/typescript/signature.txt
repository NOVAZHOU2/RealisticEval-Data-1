Certainly! Below is the equivalent TypeScript code for the provided Python function, including appropriate JSDoc-style documentation comments:

```typescript
/**
 * Check if the provided password is strong.
 *
 * A strong password must satisfy the following criteria:
 * - At least one lowercase letter
 * - At least one uppercase letter
 * - At least one number
 * - At least 8 characters long
 *
 * @param password - The password to check.
 * @returns true if the password is strong, false otherwise.
 */
function isStrongPassword(password: string): boolean {
    // Check password length
    if (password.length < 8) {
        return false;
    }

    // Check for at least one lowercase letter
    if (!/[a-z]/.test(password)) {
        return false;
    }

    // Check for at least one uppercase letter
    if (!/[A-Z]/.test(password)) {
        return false;
    }

    // Check for at least one number
    if (!/\d/.test(password)) {
        return false;
    }

    // If all checks passed, return true
    return true;
}

// Example usage
console.log(isStrongPassword("StrongPass1")); // true
console.log(isStrongPassword("weak")); // false
```

### Explanation:
- **JSDoc Documentation**: The Python docstring is converted to JSDoc-style comments using `/** */`.
- **Function Signature**: The function signature `is_strong_password(password: str) -> bool` is translated to `isStrongPassword(password: string): boolean`.
- **Regular Expressions**: JavaScript's regular expression methods (`test`) are used to perform the checks for lowercase letters, uppercase letters, and numbers.
- **Type Annotations**: The parameter `password` is explicitly typed as `string`, and the return type is `boolean`.

This TypeScript code preserves the original functionality and structure of the Python code while adhering to TypeScript's static type system and documentation conventions.