Here's how you can convert your Python unittest test class into a TypeScript Jest test case:

```typescript
import { describe, it, expect } from '@jest/globals';

function isStrongPassword(password: string): boolean {
    // Function implementation remains the same
}

describe('isStrongPassword function', () => {
    it('should return true for a strong password', () => {
        expect(isStrongPassword('Abc12345')).toBe(true);
    });

    it('should return false for a password with no lowercase letters', () => {
        expect(isStrongPassword('ABC12345')).toBe(false);
    });

    it('should return false for a password with no uppercase letters', () => {
        expect(isStrongPassword('abc12345')).toBe(false);
    });

    it('should return false for a password with no numbers', () => {
        expect(isStrongPassword('Abcabcabc')).toBe(false);
    });

    it('should return false for a password shorter than 8 characters', () => {
        expect(isStrongPassword('Abc123')).toBe(false);
    });
});
```

This TypeScript Jest test case checks the `isStrongPassword` function against various scenarios to ensure that it behaves as expected according to the defined criteria.