Sure! Below is the equivalent Java JUnit test case for your Python `unittest` test class. The package name is `org.real.temp`, and the class name is `Tester`. Since you didn't provide specific test methods in the Python code, I'll assume some common checks based on the password criteria you mentioned.

```java
package org.real.temp;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class Tester {

    @BeforeEach
    public void setUp() {
        // Setup code if needed
    }

    @Test
    public void testStrongPassword() {
        assertTrue(isStrongPassword("Abc12345"));
    }

    @Test
    public void testWeakPasswordShort() {
        assertFalse(isStrongPassword("abc123"));
    }

    @Test
    public void testWeakPasswordNoUpperCase() {
        assertFalse(isStrongPassword("abc12345"));
    }

    @Test
    public void testWeakPasswordNoLowerCase() {
        assertFalse(isStrongPassword("ABC12345"));
    }

    @Test
    public void testWeakPasswordNoNumber() {
        assertFalse(isStrongPassword("Abcdefgh"));
    }

    private boolean isStrongPassword(String password) {
        return password.matches("(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}");
    }
}
```

### Explanation:
- **Package Declaration**: The package declaration at the top specifies the package name `org.real.temp`.
- **Class Declaration**: The class `Tester` contains several test methods to verify different scenarios of password strength.
- **Setup Method**: The `setUp` method is annotated with `@BeforeEach` and can be used to set up any necessary resources before each test method runs.
- **Test Methods**: Each test method is annotated with `@Test` and contains assertions to validate the behavior of the `isStrongPassword` method.
- **Private Helper Method**: The `isStrongPassword` method is a private helper method that uses regular expressions to check if the password meets the specified criteria.

This should give you a good starting point for testing your password validation logic in Java using JUnit.