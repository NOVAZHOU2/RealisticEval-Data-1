To convert the given Python unittest test class to a C++ Catch2 test case, we need to define a function that checks if a password is strong and then write test cases using Catch2's syntax. Below is an example of how you can achieve this:

1. Define the `is_strong_password` function in C++.
2. Write test cases using Catch2.

Here's the complete C++ code:

```cpp
#include <iostream>
#include <string>
#include <cctype>
#include "catch.hpp"

// Function to check if the provided password is strong
bool is_strong_password(const std::string& password) {
    bool hasLower = false;
    bool hasUpper = false;
    bool hasDigit = false;

    // Check for minimum length
    if (password.length() < 8) return false;

    // Check for at least one lowercase letter
    for (char c : password) {
        if (std::islower(c)) {
            hasLower = true;
            break;
        }
    }

    // Check for at least one uppercase letter
    for (char c : password) {
        if (std::isupper(c)) {
            hasUpper = true;
            break;
        }
    }

    // Check for at least one digit
    for (char c : password) {
        if (std::isdigit(c)) {
            hasDigit = true;
            break;
        }
    }

    return hasLower && hasUpper && hasDigit;
}

// Test cases using Catch2
TEST_CASE("Strong Password", "[Password]") {
    REQUIRE(is_strong_password("Abc12345") == true);
    REQUIRE(is_strong_password("abc12345") == false); // No uppercase letter
    REQUIRE(is_strong_password("ABC12345") == false); // No lowercase letter
    REQUIRE(is_strong_password("Abc") == false);       // Less than 8 characters
    REQUIRE(is_strong_password("Abc123") == false);      // Less than 8 characters
    REQUIRE(is_strong_password("Abc1234") == false);     // Less than 8 characters
    REQUIRE(is_strong_password("Abc1234567") == true);
    REQUIRE(is_strong_password("Abc!@#$$%^&*") == false); // Special characters not allowed
}
```

### Explanation:
1. **Function Definition**:
   - The `is_strong_password` function checks if the password meets the specified criteria: at least one lowercase letter, one uppercase letter, one digit, and a minimum length of 8 characters.

2. **Catch2 Test Cases**:
   - The `TEST_CASE` macro is used to define a test case named "Strong Password".
   - Each `REQUIRE` statement tests whether the `is_strong_password` function returns the expected result for different input scenarios.

Make sure you have Catch2 installed and properly configured in your project to compile and run these test cases.