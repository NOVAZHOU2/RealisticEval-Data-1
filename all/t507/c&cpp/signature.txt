```cpp
#include <regex>
#include <string>

/**
 * Check if the provided password is strong.
 *
 * A strong password must satisfy the following criteria:
 * - At least one lowercase letter
 * - At least one uppercase letter
 * - At least one number
 * - At least 8 characters long
 *
 * @param password The password to check.
 * @return True if the password is strong, False otherwise.
 */
bool isStrongPassword(const std::string& password) {
    // Regular expression to match the password criteria
    const std::regex pattern(R"(^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[A-Za-z\d]{8,}$)");

    // Use regex_match to check if the entire string matches the pattern
    return std::regex_match(password, pattern);
}
```

### Explanation:
- **Regex Pattern**: `R"(^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[A-Za-z\d]{8,}$)"`:
  - `^`: Start of the string.
  - `(?=.*[a-z])`: Positive lookahead for at least one lowercase letter.
  - `(?=.*[A-Z])`: Positive lookahead for at least one uppercase letter.
  - `(?=.*\d)`: Positive lookahead for at least one digit.
  - `[A-Za-z\d]{8,}`: Matches any character from A-Z, a-z, and 0-9, at least 8 times.
  - `$`: End of the string.

- **std::regex_match**: This function checks if the entire string matches the given regular expression pattern.

This C++ function will behave similarly to the Python function you provided, checking if the password meets the specified criteria.