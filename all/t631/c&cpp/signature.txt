Hereâ€™s the equivalent C++ function signature, including comments and type annotations translated appropriately:

```cpp
#include <vector>
#include <string>

/* 
 * Formats a list of strings into a single-line CSV string and writes it to a specified file.
 *
 * Args:
 *     strings (const std::vector<std::string>&): Vector of strings to be formatted into CSV.
 *     file_path (const std::string&): The file path where the CSV string should be written.
 *
 * Returns:
 *
 */
void write_csv_to_file(const std::vector<std::string>& strings, const std::string& file_path);
```

### Explanation:
1. **Include Directives**: Added necessary includes for `std::vector` and `std::string`.

2. **Comment Formatting**: The Python docstring has been converted to a C++ comment block using `/* */`, with the arguments clearly defined.

3. **Type Annotations**: The type annotations from Python (`List[str]` and `str`) are translated into their C++ equivalents (`const std::vector<std::string>&` and `const std::string&`), ensuring const correctness and passing by reference. 

This C++ signature maintains the original purpose and structure of the Python function.