Hereâ€™s how you can convert the provided Python function signature into an equivalent TypeScript function signature, while preserving its functionality and structure:

```typescript
/**
 * Formats a list of strings into a single-line CSV string and writes it to a specified file.
 *
 * @param strings - Array of strings to be formatted into CSV.
 * @param filePath - The file path where the CSV string should be written.
 */
function writeCsvToFile(strings: string[], filePath: string): void {
    // Function implementation goes here
}
```

### Key Changes Explained:
1. **Imports**: TypeScript does not require an import statement for basic types like arrays; `string[]` is used directly.
2. **JSDoc Style**: The Python docstring is converted into a JSDoc comment block, which uses `@param` to describe the function parameters.
3. **Return Type**: Since the Python function does not specify a return value, we indicate the return type as `void` in TypeScript.

This structure captures the intended functionality and maintains clarity in both the parameter types and documentation.