Certainly! Below is the equivalent TypeScript code for the given Python function, including proper type annotations and JSDoc-style documentation comments:

```typescript
/**
 * Check whether a point C is on a line formed by points A and B.
 * 
 * @param A - Point A coordinates [x, y]
 * @param B - Point B coordinates [x, y]
 * @param C - Point C coordinates [x, y]
 * @returns true if point C is on the line formed by points A and B, false otherwise.
 */
function isPointOnLine(A: [number, number], B: [number, number], C: [number, number]): boolean {
    const [x_a, y_a] = A;
    const [x_b, y_b] = B;
    const [x_c, y_c] = C;

    // Handle the vertical line case where the x-coordinates of points A and B are the same
    if (x_a === x_b) {
        return x_c === x_a;  // C must also have the same x-coordinate
    }

    // Calculate slopes using the formula (y2 - y1) / (x2 - x1)
    // Check if slopes of AC and BC are equal
    return (y_c - y_a) * (x_b - x_a) === (y_b - y_a) * (x_c - x_a);
}
```

### Explanation:
1. **Type Annotations**: The function parameters are annotated with tuples `[number, number]` to represent the coordinates of points.
2. **JSDoc Comments**: The Python docstring is converted to JSDoc-style comments using `/** */`.
3. **Destructuring**: The tuples are destructured to get individual coordinates.
4. **Vertical Line Case**: The condition for handling the vertical line case remains the same.
5. **Slope Calculation**: The slope calculation and equality check are preserved.

This TypeScript code maintains the same functionality and structure as the original Python code, with appropriate type annotations and documentation.