Here's the equivalent TypeScript code for the provided Python function:

```typescript
function isPointOnLine(A: [number, number], B: [number, number], C: [number, number]): boolean {
    /**
     * Check whether A point is on a line formed by two points, such as point C is on a line formed by points A and B
     * @param {Array<number>} A - point A xy
     * @param {Array<number>} B - point B xy
     * @param {Array<number>} C - point C xy
     * 
     * @returns {boolean} - is C in line of A B
     */

    const crossProduct = (A: [number, number], B: [number, number], C: [number, number]): number => {
        return (B[0] - A[0]) * (C[1] - A[1]) - (B[1] - A[1]) * (C[0] - A[0]);
    };

    // If the cross product is zero, then the three points are collinear
    return Math.abs(crossProduct(A, B, C)) < Number.EPSILON;
}
```

This TypeScript function `isPointOnLine` takes three parameters, each representing a point with x and y coordinates. It uses a helper function `crossProduct` to calculate the cross product of vectors AB and AC. If the absolute value of the cross product is less than a very small threshold (`Number.EPSILON`), it means that the three points are collinear, i.e., point C lies on the line formed by points A and B.