void testInvalidateIterator() { /*NOTE: always beware of the possibility of invalidation of Iterator in your codebase*/
	//example generated by chatgpt
	std::vector<int> numbers = { 1, 2, 3, 4, 5 };

	// Obtain an iterator to the third element
	std::vector<int>::iterator it = numbers.begin() + 2;

	// Print the element using the iterator
	std::cout << "Element at iterator position: " << *it << std::endl;

	// Now let's invalidate the iterator by adding an element before it
	numbers.insert(numbers.begin() + 1, 10);

	// The iterator 'it' is now invalidated

	// Attempt to access the element using the invalidated iterator (undefined behavior)
	// This might crash the program or produce incorrect results
	std::cout << "Invalidated iterator value: " << *it << std::endl; // Undefined behavior

}