Here is how you can translate your Python function into JavaScript:

```javascript
function sizeInBytes(obj) {
    /*
     * Computes and returns the size of an object in bytes in memory.
     *
     * @param {Object} obj - The object whose size in bytes in memory is to be computed.
     * @return {Number} The size of this object in bytes in memory.
     */
}
```

Note that it's difficult to accurately measure the memory usage of an object in JavaScript because JavaScript does not provide a built-in method for doing so. Also, JavaScript engines like V8 (used in Node.js) use various optimizations which make it hard to predict the actual memory usage.

However, you can get an approximate size using `JSON.stringify` to convert the object to a string and then get the length of the string multiplied by 2 (since each character in UTF-16 encoding takes up two bytes). This won't be exact, but it will give you a rough idea.

Here's how you could do that:

```javascript
function sizeInBytes(obj) {
    return JSON.stringify(obj).length * 2;
}
```

Please note that this is just a simple approximation and may not work correctly with complex objects or circular references. For more accurate measurements, you would need to write a custom function that traverses the object and calculates its size byte by byte.