Certainly! Below is the equivalent TypeScript code for the provided Python function. Since TypeScript is primarily a superset of JavaScript and does not have a built-in method like `sys.getsizeof` from Python, we will use a similar approach using JavaScript's `JSON.stringify` to approximate the size of an object in bytes.

Here's the TypeScript code:

```typescript
function sizeInBytes(obj: any): number {
    /**
     * Computes and returns the size of an object in bytes.
     *
     * @param obj - The object to measure the memory size of.
     * @returns The size of the object in bytes.
     */
    const jsonString = JSON.stringify(obj);
    return new Blob([jsonString]).size;
}

// Example usage
console.log(sizeInBytes({ key: 'value' })); // Example object
```

### Explanation:
1. **Function Definition**: The function `sizeInBytes` is defined with a single parameter `obj` of type `any`.
2. **JSON Stringification**: The object is converted to a JSON string using `JSON.stringify`.
3. **Blob Size Calculation**: A `Blob` is created with the JSON string, and its size is returned using the `size` property of the `Blob`.

This approach provides a reasonable approximation of the size of the object in bytes. Note that this method may not be as precise as `sys.getsizeof` in Python, but it gives a good estimate for most cases.