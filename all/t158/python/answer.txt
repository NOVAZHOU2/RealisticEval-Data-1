Hereâ€™s how to convert the given TypeScript code into Python while keeping the original function's functionality and comments intact.
TypeScript Code
typescript
/**
 * Extract the file extension and return it if it exists. If not, an empty string is returned
 *
 * @param {string} file_name - The full name of the file from which to extract the extension.
 * @returns {string} The file extension without the dot, or an empty string if no extension is found.
 */
function getFileExtension(file_name: string): string {
    // Regex to match the portion after the last dot in the filename
    const regex = /(?:\.([^.]+))?$/;
    const match = regex.exec(file_name);
    // Return the captured group (extension) if it exists
    if (match && match[1]) {
        return match[1];
    }
    // Return an empty string if no extension is found
    return '';
}
Converted Python Code
python
import re

def get_file_extension(file_name: str) -> str:
    """
    Extract the file extension and return it if it exists. If not, an empty string is returned.

    Args:
        file_name (str): The full name of the file from which to extract the extension.

    Returns:
        str: The file extension without the dot, or an empty string if no extension is found.
    """
    # Regex to match the portion after the last dot in the filename
    regex = r'(?:\.([^.]+))?$'
    match = re.search(regex, file_name)
    
    # Return the captured group (extension) if it exists
    if match and match.group(1):
        return match.group(1)
    
    # Return an empty string if no extension is found
    return ''
Breakdown of the Python Code:
Importing the Module:
The re module is imported to utilize regular expressions in Python.
Function Definition:
The function get_file_extension is defined, using Python's naming convention (snake_case).
The parameter type is specified as str, and the return type is annotated as str.
Docstring:
The comments from the TypeScript code are adapted into a Python docstring, detailing the function's purpose, arguments, and return values.
Regex Pattern:
The regex pattern is defined in a Python-compatible string format.
The re.search function is used to find the match in the filename.
Match Checking:
The match object is checked, and if it exists, match.group(1) retrieves the file extension.
If no match is found, the function returns an empty string.
Usage Example
You can use the function as follows:
python
print(get_file_extension("example.txt"))       # Output: 'txt'
print(get_file_extension("archive.tar.gz"))    # Output: 'gz'
print(get_file_extension("no_extension_file"))  # Output: ''
This Python code mirrors the functionality of the original TypeScript code, extracting the file extension from the given filename or returning an empty string if no extension exists.