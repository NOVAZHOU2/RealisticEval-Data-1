Here's the equivalent Java code for your JavaScript `compressHTML` function:

```java
public class HTMLCompressor {

    public static String compressHTML(String html) {
        // Remove leading/trailing whitespace around tags
        html = html.replaceAll("\\s*(<[^>]+>)\\s*", "$1");
        // Remove multiple newlines and replace with a single space
        html = html.replaceAll("\\n+", " ");
        // Remove multiple spaces and replace them with a single space
        html = html.replaceAll("[ \\t]+", " ");
        return html.trim();
    }

    public static void main(String[] args) {
        String html = "   <div>   \n\n   Hello,   World!   \n\n   </div>   ";
        String compressedHTML = compressHTML(html);
        System.out.println(compressedHTML);
    }
}
```

### Explanation:

1. **Regex Patterns**: The regex patterns from the JavaScript code are used in Java as well. The `replaceAll` method is used for regex replacement.
2. **String Handling**: Java strings are immutable, so each transformation creates a new string.
3. **Main Method**: A `main` method is included for testing the `compressHTML` function.

You can run this code in a Java environment to test its functionality.