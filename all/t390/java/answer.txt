Sure! Below is the equivalent Java code for the provided Python script, organized within the package `org.real.temp` and the class `Answer`. The Java code will include proper handling of types, method signatures, and object-oriented principles:

```java
package org.real.temp;

import java.util.ArrayList;
import java.util.List;
import java.util.regex.Pattern;

public class Answer {

    /**
     * Split the input text string into sentences.
     *
     * @param text The input text to be split into sentences.
     * @return A list of sentences extracted from the input text, cleaned and stripped of leading/trailing whitespace.
     */
    public static List<String> splitIntoSentences(String text) {
        // Check if the input is a string
        if (text == null) {
            throw new IllegalArgumentException("Input must be a string.");
        }

        // Regular expression to split the text where there is a punctuation followed by space or end of string
        // This handles situations where punctuation might be followed by a quotation mark or other punctuation
        Pattern sentenceDelimiters = Pattern.compile("(?<=[.!?])\\s+(?=[A-Z])|(?<=[.!?][\"”’])\\s+(?=[A-Z])");

        // Split the text using the defined regular expression
        String[] sentencesArray = sentenceDelimiters.split(text);

        // Create a list to store the cleaned sentences
        List<String> sentences = new ArrayList<>();

        // Remove any leading or trailing whitespace from each sentence and add it to the list
        for (String sentence : sentencesArray) {
            String trimmedSentence = sentence.trim();
            if (!trimmedSentence.isEmpty()) {
                sentences.add(trimmedSentence);
            }
        }

        // Return the cleaned list of sentences
        return sentences;
    }

    public static void main(String[] args) {
        // Example usage
        String text = "Hello world! This is a test. Isn't it great? Yes, it is.";
        List<String> sentences = splitIntoSentences(text);
        for (String sentence : sentences) {
            System.out.println(sentence);
        }
    }
}
```

### Explanation:
1. **Package and Class Declaration**: The Java code starts with the package declaration `package org.real.temp;` and the class declaration `public class Answer {`.
2. **Method Signature**: The method `splitIntoSentences` is declared as `public static List<String> splitIntoSentences(String text)` to match the Python function's behavior.
3. **Input Validation**: The method checks if the input `text` is `null` and throws an `IllegalArgumentException` if so.
4. **Regular Expression**: The regular expression pattern is compiled using `Pattern.compile` to match sentence delimiters.
5. **Splitting Text**: The text is split using the compiled pattern, resulting in an array of strings.
6. **Cleaning Sentences**: Each sentence is trimmed to remove leading and trailing whitespace, and non-empty sentences are added to a list.
7. **Return Value**: The method returns the list of cleaned sentences.
8. **Example Usage**: The `main` method demonstrates how to use the `splitIntoSentences` method with an example text.