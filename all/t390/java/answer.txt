Sure, here's how you can translate your Python code to Java. Note that Java does not have built-in support for type hints like Python, so we will omit those in the Java version:

```java
package org.real.temp;

import java.util.ArrayList;
import java.util.List;

public class Answer {

    /**
     * Split the input text string into sentences.
     *
     * @param text The input text to be split into sentences.
     * @return A list of sentences extracted from the input text, cleaned and stripped of leading/trailing whitespace.
     */
    public static List<String> splitIntoSentences(String text) {
        // Assuming sentence delimiters are periods followed by spaces or end of string
        String[] sentences = text.split("\\.(\\s+|$)");
        
        List<String> result = new ArrayList<>();
        for (String sentence : sentences) {
            // Trim each sentence to remove leading/trailing whitespace
            String trimmedSentence = sentence.trim();
            if (!trimmedSentence.isEmpty()) {
                result.add(trimmedSentence);
            }
        }
        
        return result;
    }

    // Main method for testing purposes
    public static void main(String[] args) {
        String text = "Hello world. This is a test. Another sentence.";
        List<String> sentences = splitIntoSentences(text);
        for (String sentence : sentences) {
            System.out.println(sentence);
        }
    }
}
```

### Explanation:
1. **Package Declaration**: We declare the package `org.real.temp` at the top of the file.
2. **Class Declaration**: We define a public class named `Answer`.
3. **Method Declaration**: We create a static method `splitIntoSentences` that takes a `String` parameter and returns a `List<String>`.
4. **Splitting Text**: We use the `split` method with a regular expression to split the text into sentences based on periods followed by optional whitespace or end of string.
5. **Trimming Sentences**: We iterate over the array of sentences, trim each one, and add it to a `List<String>` if it's not empty.
6. **Main Method**: We include a `main` method for testing purposes.

This Java code should achieve the same functionality as your original Python function.