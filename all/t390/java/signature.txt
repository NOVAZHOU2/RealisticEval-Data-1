Certainly! Below is the equivalent Java code for the provided Python function, including appropriate Javadoc comments and type conversions:

```java
package org.real.temp;

import java.util.List;
import java.util.ArrayList;
import java.util.regex.Pattern;

/**
 * Class containing methods to split text into sentences.
 */
public class Answer {

    /**
     * Splits the input text string into sentences.
     *
     * @param text The input text to be split into sentences.
     * @return A list of sentences extracted from the input text, cleaned and stripped of leading/trailing whitespace.
     */
    public static List<String> splitIntoSentences(String text) {
        // Check if the input is a string
        if (text == null) {
            throw new IllegalArgumentException("Input must be a string.");
        }

        // Regular expression to split the text where there is a punctuation followed by space or end of string
        // This handles situations where punctuation might be followed by a quotation mark or other punctuation
        Pattern sentenceDelimiters = Pattern.compile("(?<=[.!?])\\s+(?=[A-Z])|(?<=[.!?][\"”’])\\s+(?=[A-Z])");

        // Split the text using the defined regular expression
        String[] sentencesArray = sentenceDelimiters.split(text);

        // Create a list to store the cleaned sentences
        List<String> sentences = new ArrayList<>();

        // Remove any leading or trailing whitespace from each sentence and add it to the list
        for (String sentence : sentencesArray) {
            String trimmedSentence = sentence.trim();
            if (!trimmedSentence.isEmpty()) {
                sentences.add(trimmedSentence);
            }
        }

        // Return the cleaned list of sentences
        return sentences;
    }

    public static void main(String[] args) {
        // Example usage
        String text = "Hello world! This is a test. Isn't it great? Yes, it is.";
        List<String> sentences = splitIntoSentences(text);
        for (String sentence : sentences) {
            System.out.println(sentence);
        }
    }
}
```

### Explanation:
1. **Package and Class Declaration**:
   - The Java code starts with the package declaration `package org.real.temp;`.
   - The class declaration is `public class Answer {`.

2. **Javadoc Comments**:
   - The method `splitIntoSentences` includes a Javadoc comment block that describes the method, its parameters, and its return value.

3. **Method Signature**:
   - The method signature is `public static List<String> splitIntoSentences(String text)`.

4. **Input Validation**:
   - The method checks if the input `text` is `null` and throws an `IllegalArgumentException` if so.

5. **Regular Expression**:
   - The regular expression pattern is compiled using `Pattern.compile` to match sentence delimiters.

6. **Splitting Text**:
   - The text is split using the compiled pattern, resulting in an array of strings.

7. **Cleaning Sentences**:
   - Each sentence is trimmed to remove leading and trailing whitespace, and non-empty sentences are added to a list.

8. **Return Value**:
   - The method returns the list of cleaned sentences.

9. **Example Usage**:
   - The `main` method demonstrates how to use the `splitIntoSentences` method with an example text.

This Java code preserves the original functionality and structure of the Python code while adhering to Java conventions and best practices.