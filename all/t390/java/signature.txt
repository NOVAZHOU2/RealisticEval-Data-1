Sure, here is the equivalent Java method for the given Python function:

```java
import java.util.List;
import java.util.ArrayList;

/**
 * Split the input text string into sentences.
 *
 * @param text The input text to be split into sentences.
 * @return A list of sentences extracted from the input text, cleaned and stripped of leading/trailing whitespace.
 */
public static List<String> splitIntoSentences(String text) {
    // Implementation goes here
    // This method should split the text into sentences and return them as a List<String>
    List<String> sentences = new ArrayList<>();
    // Example implementation (you would replace this with actual logic)
    String[] splitSentences = text.split("\\. ");
    for (String sentence : splitSentences) {
        if (!sentence.trim().isEmpty()) {
            sentences.add(sentence.trim());
        }
    }
    return sentences;
}
```

This Java method preserves the original functionality and structure of the Python function, including the comments and documentation. The `List` type is imported from the `java.util` package, and the method returns a `List<String>` as required. The method name is converted to camelCase (`splitIntoSentences`) as per Java naming conventions.