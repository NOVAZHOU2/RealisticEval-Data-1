Certainly! Below is the TypeScript code that replicates the functionality of the provided Python code:

```typescript
import * as re from 'xregexp';

/**
 * Split the input text string into sentences.
 * 
 * @param text The input text to be split into sentences.
 * @returns An array of sentences extracted from the input text, cleaned and stripped of leading/trailing whitespace.
 */
function splitIntoSentences(text: string): string[] {
    // Check if the input is a string
    if (typeof text !== 'string') {
        throw new Error('Input must be a string.');
    }

    // Regular expression to split the text where there is a punctuation followed by space or end of string
    // This handles situations where punctuation might be followed by a quotation mark or other punctuation
    const sentenceDelimiters = re('(?<=[.!?])\\s+(?=[A-Z])|(?<=[.!?]["”’])\\s+(?=[A-Z])', 'g');

    // Split the text using the defined regular expression
    let sentences = text.split(sentenceDelimiters);

    // Remove any leading or trailing whitespace from each sentence and filter out empty strings
    sentences = sentences.map(sentence => sentence.trim()).filter(sentence => sentence.length > 0);

    // Return the cleaned list of sentences
    return sentences;
}

// Example usage
const text = "Hello, world! This is a test. Isn't it great? Yes, it is!";
console.log(splitIntoSentences(text));
```

### Notes:
1. **Regular Expression Library**: TypeScript does not have built-in support for extended regular expressions like Python. Therefore, I've used `xregexp` which provides more advanced regular expression capabilities similar to Python's `re` module.
2. **Type Annotations**: TypeScript requires explicit type annotations for function parameters and return types, ensuring type safety.
3. **Error Handling**: The error handling remains consistent with the Python version, throwing an error if the input is not a string.
4. **Array Manipulation**: The `map` and `filter` methods are used to clean up the array of sentences, removing any empty strings and trimming whitespace.

Make sure to install `xregexp` in your project by running:
```sh
npm install xregexp
```