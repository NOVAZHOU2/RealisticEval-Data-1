Hereâ€™s the equivalent C++ function signature with comments:

```cpp
#include <string>
#include <vector>

// Split the input text string into sentences.
// 
// Args:
//     text (std::string): The input text to be split into sentences.
// 
// Returns:
//     std::vector<std::string>: A vector of sentences extracted from the input text, cleaned and stripped of leading/trailing whitespace.
std::vector<std::string> split_into_sentences(const std::string& text) {
    // Implementation goes here.
}
```

In this translation:

- The Python `def` keyword becomes `std::vector<std::string> split_into_sentences(const std::string& text)` in C++.
- The Python `str` type annotation is translated to `std::string` in C++.
- The return type `List[str]` is translated to `std::vector<std::string>` in C++.
- The docstring is converted into a multi-line comment using `/* */` before the function definition.
- Single-line comments within the docstring are converted to use `//` in C++.