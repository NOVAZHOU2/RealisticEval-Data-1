Sure, let's start by converting the provided Python function `split_into_sentences` into JavaScript. Then we'll create a Jest test suite for it.

### JavaScript Function

First, let's define the JavaScript function:

```javascript
/**
 * Split the input text string into sentences.
 *
 * @param {string} text - The input text to be split into sentences.
 * @returns {Array<string>} An array of sentences extracted from the input text, cleaned and stripped of leading/trailing whitespace.
 */
function splitIntoSentences(text) {
    // Define sentence delimiters (e.g., '.', '?', '!')
    const delimiters = /[\.\?\!]+/;
    
    // Split the text by delimiters and trim each sentence
    return text.split(delimiters).map(sentence => sentence.trim());
}
```

### Jest Test Suite

Now, let's write the Jest test suite for this function. We'll use Jest's `describe` and `it` blocks to organize the tests and use Jest's assertion methods to verify the behavior of the function.

```javascript
const splitIntoSentences = require('./path/to/your/function');  // Adjust the path as needed

describe('splitIntoSentences', () => {
    it('should correctly split a simple sentence', () => {
        const text = "Hello world. How are you?";
        const expected = ["Hello world", "How are you"];
        expect(splitIntoSentences(text)).toEqual(expected);
    });

    it('should handle multiple delimiters', () => {
        const text = "Hello world. How are you? I am fine!";
        const expected = ["Hello world", "How are you", "I am fine"];
        expect(splitIntoSentences(text)).toEqual(expected);
    });

    it('should handle leading and trailing spaces', () => {
        const text = "   Hello world. How are you?  ";
        const expected = ["Hello world", "How are you"];
        expect(splitIntoSentences(text)).toEqual(expected);
    });

    it('should handle empty strings', () => {
        const text = "";
        const expected = [];
        expect(splitIntoSentences(text)).toEqual(expected);
    });

    it('should handle strings without delimiters', () => {
        const text = "Hello world";
        const expected = ["Hello world"];
        expect(splitIntoSentences(text)).toEqual(expected);
    });
});
```

### Explanation

1. **Function Definition**: 
   - The JavaScript function `splitIntoSentences` uses a regular expression to split the input text by sentence delimiters (periods, question marks, exclamation points).
   - It trims each sentence to remove any leading or trailing whitespace.

2. **Test Suite**:
   - The `describe` block groups related tests together.
   - Each `it` block defines a specific test case with a description and an assertion.
   - We use `expect` and `toEqual` to compare the actual output with the expected output.

3. **Assertions**:
   - `toEqual`: This is used to check if the arrays are equal, including the order and contents of the elements.

4. **Path to Function**:
   - Make sure to adjust the path in the `require` statement based on where your `splitIntoSentences` function is defined.

This setup ensures that the functionality and logic of the original Python tests are preserved in Jest.