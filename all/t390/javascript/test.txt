Sure! Below is the equivalent JavaScript test case using Jest for the given Python unittest test class. Note that I'll assume you have a function `splitIntoSentences` in your JavaScript code that performs similar functionality to the Python function.

```javascript
// Assuming splitIntoSentences is defined somewhere in your codebase
const { splitIntoSentences } = require('./path-to-your-function');

describe('splitIntoSentences', () => {
  it('should split the input text into sentences', () => {
    const text = "Hello world! This is a test. Another sentence here.";
    const expected = ["Hello world!", "This is a test.", "Another sentence here."];
    expect(splitIntoSentences(text)).toEqual(expected);
  });

  it('should handle empty input correctly', () => {
    const text = "";
    const expected = [];
    expect(splitIntoSentences(text)).toEqual(expected);
  });

  it('should handle input with no sentences correctly', () => {
    const text = "No sentences here";
    const expected = ["No sentences here"];
    expect(splitIntoSentences(text)).toEqual(expected);
  });

  it('should clean up leading/trailing whitespace', () => {
    const text = "   Leading and trailing spaces.   ";
    const expected = ["Leading and trailing spaces."];
    expect(splitIntoSentences(text)).toEqual(expected);
  });
});
```

### Explanation:
1. **Importing the Function**: Ensure that `splitIntoSentences` is imported or required at the top of your test file.
2. **Describe Block**: The `describe` block groups related tests together.
3. **It Blocks**: Each `it` block contains an individual test case.
4. **Expectations**: The `expect` function along with matchers like `.toEqual` are used to assert the expected behavior of the `splitIntoSentences` function.

Make sure you have Jest installed in your project and properly configured to run these tests. You can install Jest using npm:

```sh
npm install --save-dev jest
```

Then, add a script in your `package.json` to run the tests:

```json
"scripts": {
  "test": "jest"
}
```

Finally, run the tests using:

```sh
npm test
```