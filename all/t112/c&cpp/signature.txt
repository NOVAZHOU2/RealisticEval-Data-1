Certainly! Here is the equivalent C++ function signature with the same comments and documentation:

```cpp
#include <string>

/**
 * Converts HTML heading tags (h1-h6) to corresponding Markdown headings.
 *
 * @param std::string html The HTML string containing headings.
 * @return std::string The converted Markdown string.
 */
std::string convertHtmlHeadingsToMarkdown(const std::string& html);
```

This C++ function signature matches the JavaScript function signature in terms of documentation and parameter types. Hereâ€™s the full code with the function definition included:

```cpp
#include <iostream>
#include <regex>
#include <string>

/**
 * Converts HTML heading tags (h1-h6) to corresponding Markdown headings.
 *
 * @param std::string html The HTML string containing headings.
 * @return std::string The converted Markdown string.
 */
std::string convertHtmlHeadingsToMarkdown(const std::string& html);

int main() {
    std::string html = "<h1>Heading 1</h1><h2>Heading 2</h2><h3>Heading 3</h3>";
    std::string markdown = convertHtmlHeadingsToMarkdown(html);
    std::cout << markdown << std::endl;
    return 0;
}

std::string convertHtmlHeadingsToMarkdown(const std::string& html) {
    // Regular expressions and replacements for each heading tag
    std::regex h1_pattern("<h1>(.*?)</h1>");
    std::regex h2_pattern("<h2>(.*?)</h2>");
    std::regex h3_pattern("<h3>(.*?)</h3>");
    std::regex h4_pattern("<h4>(.*?)</h4>");
    std::regex h5_pattern("<h5>(.*?)</h5>");
    std::regex h6_pattern("<h6>(.*?)</h6>");

    std::string markdown = html;

    // Replace h1 to h6 tags with corresponding Markdown headings
    markdown = std::regex_replace(markdown, h1_pattern, "# $1");
    markdown = std::regex_replace(markdown, h2_pattern, "## $1");
    markdown = std::regex_replace(markdown, h3_pattern, "### $1");
    markdown = std::regex_replace(markdown, h4_pattern, "#### $1");
    markdown = std::regex_replace(markdown, h5_pattern, "##### $1");
    markdown = std::regex_replace(markdown, h6_pattern, "###### $1");

    return markdown;
}
```

This code includes the function signature, the main function, and the implementation of `convertHtmlHeadingsToMarkdown`. The comments and documentation are preserved as requested.