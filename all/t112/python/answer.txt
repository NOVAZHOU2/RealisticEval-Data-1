Hereâ€™s how you can convert the provided JavaScript function convertHtmlHeadingsToMarkdown to Python. We'll use the re module in Python for regular expression replacement, similar to how it's done in JavaScript.
Converted Python Code
python
import re

def convert_html_headings_to_markdown(html: str) -> str:
    """
    Converts HTML heading tags (h1-h6) to corresponding Markdown headings.

    Args:
        html (str): The HTML string containing headings.

    Returns:
        str: The converted Markdown string.
    """
    # Replace h1 to h6 tags with corresponding Markdown headings
    html = re.sub(r'<h1>(.*?)<\/h1>', r'# \1', html)   # Converts <h1> to #
    html = re.sub(r'<h2>(.*?)<\/h2>', r'## \1', html)  # Converts <h2> to ##
    html = re.sub(r'<h3>(.*?)<\/h3>', r'### \1', html)  # Converts <h3> to ###
    html = re.sub(r'<h4>(.*?)<\/h4>', r'#### \1', html)  # Converts <h4> to ####
    html = re.sub(r'<h5>(.*?)<\/h5>', r'##### \1', html) # Converts <h5> to #####
    html = re.sub(r'<h6>(.*?)<\/h6>', r'###### \1', html) # Converts <h6> to ######
    
    return html
Explanation of the Code:
Imports:
The re module is imported for regular expressions, allowing for search-and-replace functionality similar to JavaScript's .replace() method with regex.
Function Definition:
The function convert_html_headings_to_markdown takes a single argument html of type str and returns a str.
Regular Expression Replacement:
The re.sub() function is used to replace HTML heading tags (<h1> to <h6>) with their corresponding Markdown representations.
The pattern r'<h1>(.*?)<\/h1>' captures the content between the opening and closing <h1> tags. The \1 in the replacement string refers to the captured group (the text inside the tags).
Return Statement:
The modified string, which now contains Markdown headings instead of HTML tags, is returned.
Example Usage:
Here is how you can use the function:
python
html_input = "<h1>Title</h1><h2>Subtitle</h2><h3>Section</h3>"
markdown_output = convert_html_headings_to_markdown(html_input)
print(markdown_output)
Output:
# Title
## Subtitle
### Section
This output represents the HTML headings converted to their Markdown equivalents. You can use this function to convert any HTML string containing heading tags into Markdown format.