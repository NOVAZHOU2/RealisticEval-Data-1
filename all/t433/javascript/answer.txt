Sure! Below is the equivalent JavaScript function for the provided Python code:

```javascript
/**
 * Extracts paragraphs and lines from the given text. Paragraphs end with \n\n and lines end with \n.
 * 
 * @param {string} text - The input text from which paragraphs and lines will be extracted.
 * @returns {Object} - An object containing:
 *   - paragraphs: A list of paragraphs extracted from the text.
 *   - lines: A list of lines extracted from the text.
 */
function extractParagraphsAndLines(text) {
    // Split the text into paragraphs based on double newline characters
    const paragraphs = text.split('\n\n');
    
    // Initialize an array to store all lines
    let lines = [];
    
    // Iterate over each paragraph and split it into individual lines
    paragraphs.forEach(paragraph => {
        lines = lines.concat(paragraph.split('\n'));
    });
    
    // Return the result as an object
    return {
        paragraphs,
        lines
    };
}
```

### Explanation:
1. **Splitting Paragraphs**: The `text` is split into paragraphs using `\n\n` as the delimiter.
2. **Extracting Lines**: Each paragraph is then split into lines using `\n` as the delimiter.
3. **Combining Lines**: All lines are collected into a single array.
4. **Returning Result**: The function returns an object containing two properties: `paragraphs` and `lines`.

### Example Usage:
```javascript
const inputText = "First paragraph.\nThis is the second line.\n\nSecond paragraph.\nAnother line.";
const result = extractParagraphsAndLines(inputText);
console.log(result);
// Output:
// {
//   paragraphs: [
//     "First paragraph.",
//     "This is the second line.",
//     "Second paragraph.",
//     "Another line."
//   ],
//   lines: [
//     "First paragraph.",
//     "This is the second line.",
//     "",
//     "Second paragraph.",
//     "Another line."
//   ]
// }
```

This JavaScript function should work similarly to your Python function, extracting paragraphs and lines from the given text.