Sure! Below is the equivalent JavaScript code that matches the functionality, logic, and structure of the provided Python code:

```javascript
function extractParagraphsAndLines(text) {
    /**
     * Extracts paragraphs and lines from the given text.
     *
     * @param {string} text - The input text from which paragraphs and lines will be extracted.
     * @returns {object} An object containing:
     *   - 'paragraphs': An array of paragraphs extracted from the text.
     *   - 'lines': An array of lines extracted from the text.
     */
    
    // Split the text into paragraphs
    const paragraphs = text.split('\n\n');

    // Split each paragraph into lines
    const lines = paragraphs.flatMap(paragraph => paragraph.split('\n'));

    // Remove empty paragraphs and lines
    const filteredParagraphs = paragraphs.filter(p => p.trim()).map(p => p.trim());
    const filteredLines = lines.filter(l => l.trim()).map(l => l.trim());

    // Return the extracted paragraphs and lines in an object
    return {
        'paragraphs': filteredParagraphs,
        'lines': filteredLines
    };
}
```

### Explanation:
1. **Splitting Text into Paragraphs**: The `split` method is used with `\n\n` to split the text into paragraphs.
2. **Splitting Paragraphs into Lines**: The `flatMap` method is used to flatten the array resulting from splitting each paragraph into lines.
3. **Filtering and Trimming**: The `filter` method removes empty strings, and the `trim` method removes leading and trailing spaces.
4. **Returning the Result**: The function returns an object with two properties: `paragraphs` and `lines`.

This JavaScript code mirrors the functionality and logic of the original Python code.