Sure, here's the JavaScript version of your Python function with the same comments and functionality:

```javascript
/**
 * Extracts paragraphs and lines from the given text. Paragraphs end with '\n\n' and lines end with '\n'.
 * 
 * Example:
 * Input: "First paragraph.\nThis is the second line.\n\nSecond paragraph.\nAnother line."
 * Output: {
 *     paragraphs: ["First paragraph.", "This is the second line."],
 *     lines: ["First paragraph.", "This is the second line.", "Second paragraph.", "Another line."]
 * }
 *
 * @param {string} text - The input text from which paragraphs and lines will be extracted.
 * @return {Object} An object containing:
 *                  - 'paragraphs': A list of paragraphs extracted from the text.
 *                  - 'lines': A list of lines extracted from the text.
 */
function extractParagraphsAndLines(text) {
    // Split the text into paragraphs using double newline characters
    const paragraphs = text.split('\n\n');
    
    // Initialize an array to hold all lines
    let lines = [];
    
    // Iterate over each paragraph and split it into lines
    for (let i = 0; i < paragraphs.length; i++) {
        lines = lines.concat(paragraphs[i].split('\n'));
    }
    
    // Return the result as an object
    return {
        paragraphs: paragraphs,
        lines: lines
    };
}
```

This JavaScript function `extractParagraphsAndLines` does the same thing as your Python function `extract_paragraphs_and_lines`. It splits the input text into paragraphs and then further splits each paragraph into lines. The results are returned in an object with two properties: `paragraphs` and `lines`.