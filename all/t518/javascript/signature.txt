Certainly! Below is the equivalent JavaScript code with the function signature and comments rewritten to conform to JSDoc standards:

```javascript
/**
 * Convert numeric values in a CSV row from string format to a standardized format.
 *
 * @param {Object} row - A dictionary representing a row of CSV data where
 *                       keys are column names and values are strings.
 * @returns {Object} - A new dictionary with values converted:
 *                     - Numeric strings have commas replaced with dots.
 *                     - Non-numeric strings are set to null.
 */
function convertCsvValues(row) {
    const convertedRow = {};

    for (const [key, value] of Object.entries(row)) {
        // Check if the value is numeric with possible comma and negative sign
        const isNumeric = value.replace(',', '', 1).replace('-', '', 1).match(/^\d+$/);

        if (isNumeric) {
            // Replace comma with dot for numeric conversion
            convertedRow[key] = value.replace(',', '.');
        } else {
            // Set to null if not a valid number
            convertedRow[key] = null;
        }
    }

    return convertedRow;
}
```

### Explanation:
1. **JSDoc Comments**:
   - The function is documented using JSDoc comments.
   - The `@param` tag describes the parameter `row`.
   - The `@returns` tag describes the return value.

2. **Function Definition**:
   - The function `convertCsvValues` is defined to match the Python function `convert_csv_values`.

3. **Parameter**:
   - The parameter `row` is an object representing a row of CSV data.

4. **Looping Through Dictionary**:
   - Using `Object.entries(row)` to iterate over the key-value pairs of the input object.

5. **Checking Numeric Values**:
   - The `isNumeric` variable checks if the value is numeric by removing commas and negative signs and then using a regular expression to check if it consists only of digits.

6. **Converting and Setting Values**:
   - If the value is numeric, it replaces commas with dots; otherwise, it sets the value to `null`.

This JavaScript function preserves the purpose and structure of the original Python function and conforms to JSDoc standards for documentation.