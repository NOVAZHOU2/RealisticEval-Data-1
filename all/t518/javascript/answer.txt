Sure! Below is the JavaScript equivalent of your Python function:

```javascript
function convertCsvValues(row) {
    /**
     * Convert numeric values in a CSV row from string format to a standardized format.
     *
     * @param {Object} row - An object representing a row of CSV data where
     *                        keys are column names and values are strings.
     * @returns {Object} - A new object with values converted:
     *                        - Numeric strings have commas replaced with dots.
     *                        - Non-numeric strings are set to null.
     */

    const result = {};

    for (const key in row) {
        if (row.hasOwnProperty(key)) {
            const value = row[key];
            if (!isNaN(value.replace(/,/g, ''))) {
                // Replace commas with dots for numeric strings
                result[key] = parseFloat(value.replace(/,/g, '.'));
            } else {
                // Set non-numeric strings to null
                result[key] = null;
            }
        }
    }

    return result;
}
```

### Explanation:
1. **Function Definition**: The JavaScript function `convertCsvValues` takes an object (`row`) as its argument.
2. **Result Object**: We initialize an empty object `result` to store the converted values.
3. **Loop Through Keys**: We loop through each key in the input object using `for...in`.
4. **Check for Own Property**: We use `hasOwnProperty` to ensure we only process properties directly on the object, not inherited ones.
5. **Numeric Check**: We check if the value can be converted to a number after replacing commas with dots using `isNaN`.
6. **Conversion**:
   - If the value is numeric, we replace commas with dots and then parse it as a float using `parseFloat`.
   - If the value is not numeric, we set it to `null`.
7. **Return Result**: Finally, we return the `result` object containing the converted values.

This JavaScript function should work similarly to your original Python function.