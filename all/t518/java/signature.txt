Certainly! Here is the equivalent Java code for the given Python function, including appropriate type conversions and Javadoc comments:

```java
package org.real.temp;

import java.util.HashMap;
import java.util.Map;

public class Answer {

    /**
     * Convert numeric values in a CSV row from string format to a standardized format.
     * 
     * <p>
     * This method takes a map representing a row of CSV data, where keys are column names and values are strings.
     * It returns a new map with the following conversions:
     * - Numeric strings have commas replaced with dots.
     * - Non-numeric strings are set to null.
     * </p>
     * 
     * @param row A map representing a row of CSV data where keys are column names and values are strings.
     * @return A new map with values converted as described above.
     */
    public static Map<String, String> convertCsvValues(Map<String, String> row) {
        Map<String, String> convertedRow = new HashMap<>();
        
        for (Map.Entry<String, String> entry : row.entrySet()) {
            String key = entry.getKey();
            String value = entry.getValue();
            
            // Check if the value is numeric with possible comma and negative sign
            boolean isNumeric = value.replace(",", "").replace("-", "").matches("[0-9]+");
            
            if (isNumeric) {
                // Replace comma with dot for numeric conversion
                convertedRow.put(key, value.replace(',', '.'));
            } else {
                // Set to null if not a valid number
                convertedRow.put(key, null);
            }
        }
        
        return convertedRow;
    }

    public static void main(String[] args) {
        // Example usage
        Map<String, String> row = new HashMap<>();
        row.put("id", "123");
        row.put("name", "John Doe");
        row.put("amount", "1,234.56");
        row.put("status", "active");

        Map<String, String> convertedRow = convertCsvValues(row);
        System.out.println(convertedRow);
    }
}
```

### Explanation:
1. **Package and Class Definition**:
   - The package name `org.real.temp` is defined at the top.
   - The class `Answer` contains the method `convertCsvValues`.

2. **Javadoc Comments**:
   - The method `convertCsvValues` is documented using Javadoc comments, providing a detailed description of the method's purpose, parameters, and return value.

3. **Method Signature**:
   - The method signature `public static Map<String, String> convertCsvValues(Map<String, String> row)` matches the Python function signature, with appropriate Java types.

4. **Implementation**:
   - The method iterates over the entries in the input map, checks if each value is numeric, and performs the necessary conversions.
   - Non-numeric strings are set to `null`.

5. **Example Usage**:
   - The `main` method demonstrates how to use the `convertCsvValues` method with an example input map.

This Java code preserves the original functionality and structure of the Python code while adhering to Java conventions and best practices.