Sure! Below is the equivalent C++ code signature with comments that match the Python function you provided:

```cpp
#include <Eigen/Dense>

/**
 * Scale the point cloud by a given factor.
 *
 * @param pointCloud A N x 3 Eigen::MatrixXd representing the 3D point cloud.
 * @param scaleFactor A double representing the scaling factor.
 * @return An N x 3 Eigen::MatrixXd of the scaled point cloud.
 */
Eigen::MatrixXd scalePointCloud(const Eigen::MatrixXd& pointCloud, double scaleFactor);
```

In this C++ code, I've used `Eigen::MatrixXd` from the Eigen library to represent the point cloud, which is similar to using `numpy.ndarray` in Python. The function parameters and return type are specified accordingly.