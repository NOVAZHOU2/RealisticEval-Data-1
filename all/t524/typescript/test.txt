Here is how you can convert your Python unittest test class to TypeScript Jest test case:

```typescript
import { scalePointCloud } from './path_to_your_module'; // Adjust accordingly
import * as np from 'numpy';

describe('scalePointCloud', () => {
  it('should scale the point cloud correctly', () => {
    const pointCloud = np.array([[1, 2, 3], [4, 5, 6]]);
    const scaleFactor = 2;
    const expectedScaledPointCloud = np.array([[2, 4, 6], [8, 10, 12]]);

    expect(scalePointCloud(pointCloud, scaleFactor)).toEqual(expectedScaledPointCloud);
  });

  it('should handle empty point cloud', () => {
    const pointCloud = np.array([]);
    const scaleFactor = 2;

    expect(scalePointCloud(pointCloud, scaleFactor)).toEqual(np.array([]));
  });
});
```

Please note that `numpy` for JavaScript/TypeScript does not exist. The above example uses a mock implementation for demonstration purposes. If you need to work with real data in JavaScript/TypeScript, consider using libraries like `mathjs`, `arrayify-numpy`, or others which provide similar functionalities. 

Also, ensure that Jest is installed and properly configured in your project. Then, you can run these tests with `npm test`.