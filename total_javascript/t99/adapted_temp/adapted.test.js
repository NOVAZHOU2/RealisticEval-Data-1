// Test case 1: Normal array of positive numbers
console.log(sum([1, 2, 3, 4, 5])); 
// Expected output: 15

// Test case 2: Array containing negative numbers
console.log(sum([-1, -2, -3, -4, -5])); 
// Expected output: -15

// Test case 3: Empty array
console.log(sum([])); 
// Expected output: 0

// Test case 4: Array containing both positive and negative numbers
console.log(sum([10, -10, 5, -5, 15])); 
// Expected output: 15

// Test case 5: Array with floating point numbers
console.log(sum([1.5, 2.5, 3.5])); 
// Expected output: 7.5

/** 
 * @autogenerated
 * @summary Calculates the sum of all elements in an array.
 * 
 * @description Takes an array of numbers as input and returns the sum of all the elements. If the array is empty, it returns 0.
 * 
 * @param {number[]} arr - The array of numbers to sum.
 * @returns {number} The sum of all elements of the array.
 */
function sum(arr) {
    if (!Array.isArray(arr)) {
        throw new TypeError('Expected an array of numbers');
    }
    
    return arr.reduce((accumulator, currentValue) => accumulator + currentValue, 0);
}
