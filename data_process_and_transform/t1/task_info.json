{
  "task_id": 3,
  "task_summary": "Intelligently converts the type of the input value. Attempts are made to convert the input value to an integer, if that fails then to a floating-point number, and if both fail, the original value is returned.",
  "lib_recommend": "",
  "type": "data_process_and_transform",
  "function_signature": "def numerical_str_convert(value: str) -> Union[int, float, str]:\n    \"\"\"\n    Intelligently converts the type of the input value. Attempts are made to convert the input value to an integer, if that fails then to a floating-point number, and if both fail, the original value is returned.\n    :param value:\n    :return:\n    \"\"\"",
  "test_case_class_name": "TestSmartConvert",
  "test_case_list": [
    {
      "func": "test_convert_integer",
      "desc": "Tests convert integer str"
    },
    {
      "func": "test_convert_float",
      "desc": "Tests convert float str"
    },
    {
      "func": "test_convert_non_numeric_string",
      "desc": "Test convert non numeric string"
    },
    {
      "func": "test_convert_negative_integer",
      "desc": "Test convert negative integer"
    },
    {
      "func": "test_convert_negative_float",
      "desc": "Test convert negative float"
    }
  ]
}