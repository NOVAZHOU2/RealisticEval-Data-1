import rclpy
from rclpy.node import Node
from std_msgs.msg import Float32MultiArray, String
import numpy as np
import time

# Test code generated by ChatGPT
class KinematicsTester(Node):
    def __init__(self):
        super().__init__('kinematics_tester')
        self.publisher_ = self.create_publisher(Float32MultiArray, 'PID_PR', 10)
        self.subscription_ = self.create_subscription(String, 'servo_angles', self.servo_callback, 10)
        self.i = 0

    def servo_callback(self, msg):
        self.get_logger().info('Received servo angles: %s' % msg.data)

    def generate_pitch_roll(self):
        frequency = 0.5  # Frequency of the sine wave in Hz
        amplitude = 15  # Amplitude of the sine wave in degrees

        while rclpy.ok():
            current_time = time.time()
            pitch = amplitude * np.sin(2 * np.pi * frequency * current_time)
            roll = amplitude * np.sin(2 * np.pi * frequency * current_time + np.pi / 2)  # 90 degrees phase shift
            pitch_roll_values = [pitch, roll]
            msg = Float32MultiArray(data=pitch_roll_values)
            self.publisher_.publish(msg)
            self.get_logger().info('Publishing pitch and roll values: %s' % msg.data)
            time.sleep(0.01) 

def main(args=None):
    rclpy.init(args=args)
    kinematics_tester = KinematicsTester()
    kinematics_tester.generate_pitch_roll()
    rclpy.spin(kinematics_tester)
    kinematics_tester.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()