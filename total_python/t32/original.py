class CRC64:
    """
    Generated by GPT-4
    """

    POLY64REV = 0xC96C5795D7870F42
    crc64_tab = []

    @classmethod
    def crc64_init_table(cls):
        if not cls.crc64_tab:
            for b in range(256):
                crc = ctypes.c_uint64(b).value
                for _ in range(8):
                    if crc & 1:
                        crc = (crc >> 1) ^ cls.POLY64REV
                    else:
                        crc >>= 1
                cls.crc64_tab.append(ctypes.c_uint64(crc).value)

    @staticmethod
    def crc64_update(crc, byte):
        tbl_idx = (crc ^ byte) & 0xFF
        return (CRC64.crc64_tab[tbl_idx] ^ (crc >> 8)) & 0xFFFFFFFFFFFFFFFF

    @classmethod
    def compute(cls, input_integer):
        cls.crc64_init_table()

        if input_integer < 0:
            input_integer = (1 << 64) + input_integer

        crc = 0xFFFFFFFFFFFFFFFF
        input_bytes = input_integer.to_bytes(8, 'little')

        for b in input_bytes:
            crc = cls.crc64_update(crc, b)

        return crc ^ 0xFFFFFFFFFFFFFFFF
